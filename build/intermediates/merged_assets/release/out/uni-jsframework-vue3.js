//{"version":"3.4.15","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var eP=Object.defineProperty;var tP=(p,s)=>{for(var _ in s)eP(p,_,{get:s[_],enumerable:!0})};var va=Object.freeze;function cc({getCurrentPages:p,uni:s,UniShared:_,Vue:A,VueShared:k}){var y=function(I,f,P,Ue){"use strict";function Rt(){let $e=p(),st=$e.length;if(st)return $e[st-1]}function vn(){let $e=Rt();if($e)return $e.$vm}function x($e,st,_t){if(f.isString($e))_t=st,st=$e,$e=vn();else if(typeof $e=="number"){let sn=p().find(on=>on.$page.id===$e);sn?$e=sn.$vm:$e=vn()}if(!$e)return;if($e.__call_hook)return $e.__call_hook(st,_t);let qt=$e.$[st];return qt&&P.invokeArrayFns(qt,_t)}function Mt($e,st,_t,qt){f.isFunction(st)&&Ue.injectHook($e,st.bind(_t),qt)}function jn($e,st,_t){let qt=$e.mpType||_t.$mpType;if(!!qt&&(Object.keys($e).forEach(sn=>{if(sn.indexOf("on")===0){let on=$e[sn];f.isArray(on)?on.forEach(lr=>Mt(sn,lr,_t,st)):Mt(sn,on,_t,st)}}),qt==="page")){st.__isVisible=!0;try{x(_t,P.ON_LOAD,st.attrs.__pageQuery),delete st.attrs.__pageQuery,x(_t,P.ON_SHOW)}catch(sn){console.error(sn.message+P.LINEFEED+sn.stack)}}}function In($e,st){ft(st,$e.$renderjs,$e["$"+P.RENDERJS_MODULES])}function ft($e,st,_t={}){if(!f.isArray(st))return;let qt=$e.uid,sn=$e.$wxsModules||($e.$wxsModules=[]),on=$e.ctx;st.forEach(lr=>{_t[lr]&&(on[lr]=ne(qt,_t[lr],lr),sn.push(lr))})}function ne($e,st,_t){let qt={};return new Proxy(qt,{get(sn,on){return qt[on]||(qt[on]=Q($e,st,_t,on))}})}function Q($e,st,_t,qt){let sn=()=>{},on=()=>P.WXS_PROTOCOL+JSON.stringify([$e,st,_t+"."+qt]);return new Proxy(sn,{get(lr,cr){return cr==="toJSON"?on:sn[cr]||(sn[cr]=Q($e,st,_t+"."+qt,cr))},apply(lr,cr,Bi){return P.WXS_PROTOCOL+JSON.stringify([$e,st,_t+"."+qt,[...Bi]])}})}function En($e,st){ft(st,$e.$wxs,$e["$"+P.WXS_MODULES])}function yn($e,st,_t){En($e,st),In($e,st),jn($e,st,_t)}function an($e,st,_t){return $e[st]=_t}function Vn($e,st,_t){if(!st)throw $e;let qt=getApp();if(!qt||!qt.$vm)throw $e;x(qt.$vm,P.ON_ERROR,$e)}function nn($e,st){return $e?[...new Set([].concat($e,st))]:st}function xn($e){P.UniLifecycleHooks.forEach(st=>{$e[st]=nn})}let $n,mn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",rn=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?$n=function($e){if($e=String($e).replace(/[\t\n\f\r ]+/g,""),!rn.test($e))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");$e+="==".slice(2-($e.length&3));for(var st,_t="",qt,sn,on=0;on<$e.length;)st=mn.indexOf($e.charAt(on++))<<18|mn.indexOf($e.charAt(on++))<<12|(qt=mn.indexOf($e.charAt(on++)))<<6|(sn=mn.indexOf($e.charAt(on++))),_t+=qt===64?String.fromCharCode(st>>16&255):sn===64?String.fromCharCode(st>>16&255,st>>8&255):String.fromCharCode(st>>16&255,st>>8&255,st&255);return _t}:$n=atob;function _n($e){return decodeURIComponent($n($e).split("").map(function(st){return"%"+("00"+st.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Bn(){let $e=s.getStorageSync("uni_id_token")||"",st=$e.split(".");if(!$e||st.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let _t;try{_t=JSON.parse(_n(st[1]))}catch(qt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+qt.message)}return _t.tokenExpired=_t.exp*1e3,delete _t.exp,delete _t.iat,_t}function Rr($e){$e.uniIDHasRole=function(st){let{role:_t}=Bn();return _t.indexOf(st)>-1},$e.uniIDHasPermission=function(st){let{permission:_t}=Bn();return this.uniIDHasRole("admin")||_t.indexOf(st)>-1},$e.uniIDTokenValid=function(){let{tokenExpired:st}=Bn();return st>Date.now()}}function Jr($e){let st=$e._context.config;f.isFunction($e._component.onError)&&(st.errorHandler=Vn),xn(st.optionMergeStrategies);let _t=st.globalProperties;Rr(_t),_t.$set=an,_t.$applyOptions=yn,P.invokeCreateVueAppHook($e)}return I.initApp=Jr,Object.defineProperty(I,"__esModule",{value:!0}),I}({},k,_,A);return y}function Jc(p,{nvue:s,UniShared:_,VueShared:A,VueReactivity:k}){let y={platform:s.config.env.platform,UniShared:_,VueShared:A,VueReactivity:k};return p(y,s.document)}function nP({setTimeout:p,clearTimeout:s,uni:_,getCurrentPages:A,Vue:k,weex:y,plus:I,BroadcastChannel:f,UniViewJSBridge:P,VueShared:Ue,UniShared:Rt}){var vn=function(x,Mt,jn){"use strict";let In=["navigate","redirect","switchTab","reLaunch","navigateBack"],ft=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],ne=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Q={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(m){return Boolean(~In.indexOf(m))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,validator(m){return!m||ft.concat(ne).includes(m)}},animationDuration:{type:[String,Number],default:300}};function En(m){return()=>{if(m.openType!=="navigateBack"&&!m.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let R=parseInt(m.animationDuration);switch(m.openType){case"navigate":_.navigateTo({url:m.url,animationType:m.animationType||"pop-in",animationDuration:R});break;case"redirect":_.redirectTo({url:m.url,exists:m.exists});break;case"switchTab":_.switchTab({url:m.url});break;case"reLaunch":_.reLaunch({url:m.url});break;case"navigateBack":_.navigateBack({delta:m.delta,animationType:m.animationType||"pop-out",animationDuration:R});break}}}function yn(m){if(m.hoverClass&&m.hoverClass!=="none"){let R={hoverClass:m.hoverClass};return Mt.hasOwn(m,"hoverStartTime")&&(R.hoverStartTime=m.hoverStartTime),Mt.hasOwn(m,"hoverStayTime")&&(R.hoverStayTime=m.hoverStayTime),Mt.hasOwn(m,"hoverStopPropagation")&&(R.hoverStopPropagation=m.hoverStopPropagation),R}return{}}function an(m,R){return x.createElementVNode("u-text",Mt.extend({appendAsTree:!0},R),m)}let Vn=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}];var nn=x.defineComponent({name:"Navigator",props:Q,styles:Vn,setup(m,{slots:R}){let j=En(m);return()=>x.createVNode("view",x.mergeProps(yn(m),{onClick:j}),[R.default&&R.default()])}});function xn(m){return Symbol(m)}function $n(){return x.getCurrentInstance().root.proxy.$page.id}let mn,rn,_n;function Bn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Rr(){return mn.webview.currentWebview().id}let Jr,$e,st={};function _t(m){let R=m.data&&m.data.__message;if(!R||!R.__page)return;let j=R.__page,U=st[j];U&&U(R),R.keep||delete st[j]}function qt(m,R){Bn()==="v8"?_n?(Jr&&Jr.close(),Jr=new _n(Rr()),Jr.onmessage=_t):$e||($e=rn.requireModule("globalEvent"),$e.addEventListener("plusMessage",_t)):window.__plusMessage=_t,st[m]=R}class sn{constructor(R){this.webview=R}sendMessage(R){let j=JSON.parse(JSON.stringify({__message:{data:R}})),U=this.webview.id;_n?new _n(U).postMessage(j):mn.webview.postMessageToUniNView&&mn.webview.postMessageToUniNView(j,U)}close(){this.webview.close()}}function on({context:m={},url:R,data:j={},style:U={},onMessage:K,onClose:J}){mn=m.plus||I,rn=m.weex||(typeof y=="object"?y:null),_n=m.BroadcastChannel||(typeof f=="object"?f:null);let ie={autoBackButton:!0,titleSize:"17px"},se=`page${Date.now()}`;U=Mt.extend({},U),U.titleNView!==!1&&U.titleNView!=="none"&&(U.titleNView=Mt.extend(ie,U.titleNView));let me={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${R}.js`,defaultFontSize:16,viewport:mn.screen.resolutionWidth}};U=Mt.extend(me,U);let be=mn.webview.create("",se,U,{extras:{from:Rr(),runtime:Bn(),data:j,useGlobalEvent:!_n}});return be.addEventListener("close",J),qt(se,he=>{typeof K=="function"&&K(he.data),he.keep||be.close("auto")}),be.show(U.animationType,U.animationDuration),new sn(be)}let lr={for:{type:String,default:""}},cr=xn("ul");function Bi(){let m=[];return x.provide(cr,{addHandler(R){m.push(R)},removeHandler(R){m.splice(m.indexOf(R),1)}}),m}var Mi=x.defineComponent({name:"Label",props:lr,styles:[],setup(m,{slots:R}){let j=$n(),U=Bi(),K=J=>{m.for?P.emit(`uni-label-click-${j}-${m.for}`,J,!0):U.length&&U[0](J,!0)};return()=>x.createVNode("view",{onClick:K},[R.default&&R.default()])}});function Mn(m,R){Hr(m.id,R),x.watch(()=>m.id,(j,U)=>{_r(U,R,!0),Hr(j,R,!0)}),x.onUnmounted(()=>{_r(m.id,R)})}function Hr(m,R,j){let U=$n();j&&!m||!Mt.isPlainObject(R)||Object.keys(R).forEach(K=>{j?K.indexOf("@")!==0&&K.indexOf("uni-")!==0&&P.on(`uni-${K}-${U}-${m}`,R[K]):K.indexOf("uni-")===0?P.on(K,R[K]):m&&P.on(`uni-${K}-${U}-${m}`,R[K])})}function _r(m,R,j){let U=$n();j&&!m||!Mt.isPlainObject(R)||Object.keys(R).forEach(K=>{j?K.indexOf("@")!==0&&K.indexOf("uni-")!==0&&P.off(`uni-${K}-${U}-${m}`,R[K]):K.indexOf("uni-")===0?P.off(K,R[K]):m&&P.off(`uni-${K}-${U}-${m}`,R[K])})}function yi(m){return Object.keys(m).map(R=>[R,m[R]])}let Ji=["class","style"],Di=/^on[A-Z]+/,Lo=(m={})=>{let{excludeListeners:R=!1,excludeKeys:j=[]}=m,U=x.getCurrentInstance(),K=x.shallowRef({}),J=x.shallowRef({}),ie=x.shallowRef({}),se=j.concat(Ji);return U.attrs=x.reactive(U.attrs),x.watchEffect(()=>{let me=yi(U.attrs).reduce((be,[he,Ae])=>(se.includes(he)?be.exclude[he]=Ae:Di.test(he)?(R||(be.attrs[he]=Ae),be.listeners[he]=Ae):be.attrs[he]=Ae,be),{exclude:{},attrs:{},listeners:{}});K.value=me.attrs,J.value=me.listeners,ie.value=me.exclude}),{$attrs:K,$listeners:J,$excludeAttrs:ie}},Oo={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},br=xn("uf"),Sn=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],An={default:"d",primary:"p",warn:"w"};var ai=x.defineComponent({inheritAttrs:!1,name:"Button",props:Mt.extend(Oo,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:Sn,setup(m,{slots:R,attrs:j}){let{$attrs:U,$excludeAttrs:K,$listeners:J}=Lo({excludeListeners:!0}),ie=m.type,se=x.ref(null),me=x.inject(br,!1),be=(ut,lt)=>{let xt=J.value.onClick||(()=>{});if(m.disabled)return;xt(ut);let cn=m.formType;if(cn){if(!me)return;cn==="submit"?me.submit(ut):cn==="reset"&&me.reset(ut)}},he=ut=>{let lt="ub-"+An[ie]+ut;return m.disabled&&(lt+="-d"),m.plain&&(lt+="-plain"),m.size==="mini"&&ut==="-t"&&(lt+=" ub-mini"),lt},Ae=ut=>{if(m.disabled)return"";let lt="ub-"+An[ie]+ut+"-hover";return m.plain&&(lt+="-plain"),lt},Ke=x.inject(cr,!1);Ke&&(Ke.addHandler(be),x.onBeforeUnmount(()=>{Ke.removeHandler(be)})),Mn(m,{"label-click":be});let bt=x.computed(()=>{let ut={};for(let lt in J.value){let xt=J.value[lt];lt!=="onClick"&&(ut[lt]=xt)}return ut}),jt=()=>{if(!R.default)return[];let ut=R.default();return ut.length===1&&ut[0].type===x.Text?[an(ut[0].children,{class:"ub-t "+he("-t")})]:ut};return()=>{let ut=Mt.extend({},yn(m),{hoverClass:Ae("")},U.value,K.value,bt.value);return x.createVNode("view",x.mergeProps({ref:se,class:["ub",he("")],onClick:be},ut),[m.loading?x.createVNode("loading-indicator",x.mergeProps({class:["ub-loading",`ub-${An[ie]}-loading`]},{arrow:"false",animating:"true"}),null):null,...jt()])}}});let Zi={scaleArea:{type:Boolean,default:!1}};function wi(m){let R=[];return Array.isArray(m)&&m.forEach(j=>{x.isVNode(j)?j.type===x.Fragment?R.push(...wi(j.children)):R.push(j):Array.isArray(j)&&R.push(...wi(j))}),R}function Xi(m){let R=Object.create(null);return function(U){return R[U]||(R[U]=m(U))}}let Si=Xi(function(m){let R={},j=/;(?![^(]*\))/g,U=/:(.+)/;return m.split(j).forEach(function(K){if(K){let J=K.split(U);J.length>1&&(R[J[0].trim()]=J[1].trim())}}),R}),ur=m=>new Promise((R,j)=>{if(!m)return R({width:0,height:0,top:0,left:0});y.requireModule("dom").getComponentRect(m,({size:K})=>{R(K)})});var jr=x.defineComponent({name:"MovableArea",props:Zi,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(m,{slots:R}){let j=x.ref(0),U=x.ref(0),K=x.ref(0),J=x.ref(0),ie=x.ref(!1),se=x.ref(null),me=[],be=null,he=lt=>{be=lt},Ae=()=>ur(se.value).then(({width:lt,height:xt,top:cn,left:vt})=>{j.value=lt,U.value=xt,K.value=cn,J.value=vt}),Ke=()=>{Ae().then(()=>{me.forEach(function(lt){lt.setParent()})})};x.onMounted(()=>{p(()=>{ie.value=!0,Ke()},200)});let bt={onPanstart(lt){be&&be.touchstart(lt)},onPanmove(lt){lt.stopPropagation(),be&&be.touchmove(lt)},onPanend(lt){be&&be.touchend(lt),be=null}},jt=lt=>{me.push(lt)},ut=lt=>{let xt=me.indexOf(lt);xt>=0&&me.splice(xt,1)};return x.provide("_isMounted",ie),x.provide("parentSize",{width:j,height:U,top:K,left:J}),x.provide("addMovableViewContext",jt),x.provide("removeMovableViewContext",ut),x.provide("setTouchMovableViewContext",he),()=>{let lt=R.default&&R.default(),xt=wi(lt);return x.createVNode("view",x.mergeProps({ref:se,class:"uni-movable-area"},bt),[xt])}}});function zr(m){let R={};function j(he,Ae){R[he]&&R[he](Ae)}function U(he,Ae){R[he]=function(Ke){typeof Ae=="function"&&(Ke.touches=Ke.changedTouches,Ae(Ke)===!1&&Ke.stopPropagation())}}let K=0,J=0,ie=0,se=0,me=function(he,Ae,Ke,bt){if(m({target:he.target,currentTarget:he.currentTarget,stopPropagation:he.stopPropagation.bind(he),touches:he.touches,changedTouches:he.changedTouches,detail:{state:Ae,x:Ke,y:bt,dx:Ke-K,dy:bt-J,ddx:Ke-ie,ddy:bt-se,timeStamp:he.timeStamp||Date.now()}})===!1)return!1},be=null;return U("touchstart",function(he){if(!be)return be=he,K=ie=he.touches[0].pageX,J=se=he.touches[0].pageY,me(he,"start",K,J)}),U("touchmove",function(he){if(be){let Ae=me(he,"move",he.touches[0].pageX,he.touches[0].pageY);return ie=he.touches[0].pageX,se=he.touches[0].pageY,Ae}}),U("touchend",function(he){if(be)return be=null,me(he,"end",he.changedTouches[0].pageX,he.changedTouches[0].pageY)}),{touchstart:function(he){j("touchstart",he)},touchmove:function(he){j("touchmove",he)},touchend:function(he){j("touchend",he)}}}function Er(m,R){return(j,U)=>{m.value&&R(j,To(j,m.value,U||{}))}}function To(m,R,j={}){return R=Li(R),{type:m,timeStamp:Date.now(),target:R,currentTarget:R,detail:j}}let Po=jn.cacheStringFunction(m=>m.charAt(0).toLowerCase()+m.slice(1));function Li(m){let{offsetLeft:R,offsetTop:j}=m,U=m.attr,K={};return Object.keys(U||{}).forEach(J=>{J.indexOf("data")===0&&(K[Po(J.replace("data",""))]=U[J])}),{id:U&&U.id||"",dataset:K,offsetLeft:R||0,offsetTop:j||0}}function xr(m,R,j){return m>R-j&&m<R+j}function qn(m,R){return xr(m,0,R)}function uo(){}uo.prototype.x=function(m){return Math.sqrt(m)};function Zr(m,R){this._m=m,this._f=1e3*R,this._startTime=0,this._v=0}Zr.prototype.setV=function(m,R){let j=Math.pow(Math.pow(m,2)+Math.pow(R,2),.5);this._x_v=m,this._y_v=R,this._x_a=-this._f*this._x_v/j,this._y_a=-this._f*this._y_v/j,this._t=Math.abs(m/this._x_a)||Math.abs(R/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Zr.prototype.setS=function(m,R){this._x_s=m,this._y_s=R},Zr.prototype.s=function(m){m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t,this._lastDt=m);let R=this._x_v*m+.5*this._x_a*Math.pow(m,2)+this._x_s,j=this._y_v*m+.5*this._y_a*Math.pow(m,2)+this._y_s;return(this._x_a>0&&R<this._endPositionX||this._x_a<0&&R>this._endPositionX)&&(R=this._endPositionX),(this._y_a>0&&j<this._endPositionY||this._y_a<0&&j>this._endPositionY)&&(j=this._endPositionY),{x:R,y:j}},Zr.prototype.ds=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t),{dx:this._x_v+this._x_a*m,dy:this._y_v+this._y_a*m}},Zr.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Zr.prototype.dt=function(){return-this._x_v/this._x_a},Zr.prototype.done=function(){let m=xr(this.s().x,this._endPositionX)||xr(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,m},Zr.prototype.setEnd=function(m,R){this._endPositionX=m,this._endPositionY=R},Zr.prototype.reconfigure=function(m,R){this._m=m,this._f=1e3*R};function zn(m,R,j){this._m=m,this._k=R,this._c=j,this._solution=null,this._endPosition=0,this._startTime=0}zn.prototype._solve=function(m,R){let j=this._c,U=this._m,K=this._k,J=j*j-4*U*K;if(J===0){let he=-j/(2*U),Ae=m,Ke=R/(he*m);return{x:function(bt){return(Ae+Ke*bt)*Math.pow(Math.E,he*bt)},dx:function(bt){let jt=Math.pow(Math.E,he*bt);return he*(Ae+Ke*bt)*jt+Ke*jt}}}if(J>0){let he=(-j-Math.sqrt(J))/(2*U),Ae=(-j+Math.sqrt(J))/(2*U),Ke=(R-he*m)/(Ae-he),bt=m-Ke;return{x:function(jt){let ut,lt;return jt===this._t&&(ut=this._powER1T,lt=this._powER2T),this._t=jt,ut||(ut=this._powER1T=Math.pow(Math.E,he*jt)),lt||(lt=this._powER2T=Math.pow(Math.E,Ae*jt)),bt*ut+Ke*lt},dx:function(jt){let ut,lt;return jt===this._t&&(ut=this._powER1T,lt=this._powER2T),this._t=jt,ut||(ut=this._powER1T=Math.pow(Math.E,he*jt)),lt||(lt=this._powER2T=Math.pow(Math.E,Ae*jt)),bt*he*ut+Ke*Ae*lt}}}let ie=Math.sqrt(4*U*K-j*j)/(2*U),se=-j/2*U,me=m,be=(R-se*m)/ie;return{x:function(he){return Math.pow(Math.E,se*he)*(me*Math.cos(ie*he)+be*Math.sin(ie*he))},dx:function(he){let Ae=Math.pow(Math.E,se*he),Ke=Math.cos(ie*he),bt=Math.sin(ie*he);return Ae*(be*ie*Ke-me*ie*bt)+se*Ae*(be*bt+me*Ke)}}},zn.prototype.x=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(m):0},zn.prototype.dx=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(m):0},zn.prototype.setEnd=function(m,R,j){if(j||(j=new Date().getTime()),m!==this._endPosition||!qn(R,.1)){R=R||0;let U=this._endPosition;this._solution&&(qn(R,.1)&&(R=this._solution.dx((j-this._startTime)/1e3)),U=this._solution.x((j-this._startTime)/1e3),qn(R,.1)&&(R=0),qn(U,.1)&&(U=0),U+=this._endPosition),this._solution&&qn(U-m,.1)&&qn(R,.1)||(this._endPosition=m,this._solution=this._solve(U-this._endPosition,R),this._startTime=j)}},zn.prototype.snap=function(m){this._startTime=new Date().getTime(),this._endPosition=m,this._solution={x:function(){return 0},dx:function(){return 0}}},zn.prototype.done=function(m){return m||(m=new Date().getTime()),xr(this.x(),this._endPosition,.1)&&qn(this.dx(),.1)},zn.prototype.reconfigure=function(m,R,j){this._m=m,this._k=R,this._c=j,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},zn.prototype.springConstant=function(){return this._k},zn.prototype.damping=function(){return this._c},zn.prototype.configuration=function(){function m(j,U){j.reconfigure(1,U,j.damping())}function R(j,U){j.reconfigure(1,j.springConstant(),U)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:m.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:R.bind(this,this),min:1,max:500}]};function Wr(m,R,j){this._springX=new zn(m,R,j),this._springY=new zn(m,R,j),this._springScale=new zn(m,R,j),this._startTime=0}Wr.prototype.setEnd=function(m,R,j,U){let K=new Date().getTime();this._springX.setEnd(m,U,K),this._springY.setEnd(R,U,K),this._springScale.setEnd(j,U,K),this._startTime=K},Wr.prototype.x=function(){let m=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(m),y:this._springY.x(m),scale:this._springScale.x(m)}},Wr.prototype.done=function(){let m=new Date().getTime();return this._springX.done(m)&&this._springY.done(m)&&this._springScale.done(m)},Wr.prototype.reconfigure=function(m,R,j){this._springX.reconfigure(m,R,j),this._springY.reconfigure(m,R,j),this._springScale.reconfigure(m,R,j)};let Qi={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function Xr(m,R){return+((1e3*m-1e3*R)/1e3).toFixed(1)}function si(m,R,j){let U={id:0,cancelled:!1},K=function(ie){ie&&ie.id&&li(ie.id),ie&&(ie.cancelled=!0)};function J(ie,se,me,be){if(!ie||!ie.cancelled){me(se);let he=se.done();he||ie.cancelled||(ie.id=go(J.bind(null,ie,se,me,be))),he&&be&&be(se)}}return J(U,m,R,j),{cancel:K.bind(null,U),model:m}}let fo=!1;function ho(m){fo||(fo=!0,go(function(){m(),fo=!1}))}function go(m){return p(m,16)}function li(m){s(m)}let Br=y.requireModule("animation");var Ai=x.defineComponent({name:"MovableView",props:Qi,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(m,{emit:R,slots:j}){let U=x.ref(null),K=Er(U,R),J=x.inject("setTouchMovableViewContext",()=>{}),ie=ci(m,K,U,J);return()=>{let se={preventGesture:!0};return x.createVNode("view",x.mergeProps({ref:U,onTouchstart:ie,class:"uni-movable-view",style:"transform-origin: center;"},se),[j.default&&j.default()])}}});function ci(m,R,j,U){let K=x.inject("_isMounted",x.ref(!1)),J=x.inject("parentSize",{width:x.ref(0),height:x.ref(0),top:x.ref(0),left:x.ref(0)}),ie=x.inject("addMovableViewContext",()=>{}),se=x.inject("removeMovableViewContext",()=>{}),me={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function be(Ne){return Number(Ne)||0}function he(Ne){return Ne=Number(Ne),isNaN(Ne)?1:Ne}let Ae=x.ref(be(m.x)),Ke=x.ref(be(m.y)),bt=x.ref(he(Number(m.scaleValue))),jt=x.ref(0),ut=x.ref(0),lt=x.ref(0),xt=x.ref(0),cn=x.ref(0),vt=x.ref(0),nt=null,Dt=null,On={x:0,y:0},wn={x:0,y:0},bn=1,gn=0,Et=0,Ht=!1,ia,hi,gr=null,Go=null,oa={top:0,left:0,width:0,height:0},Gn=new uo,Zn=new uo,Tn={historyX:[0,0],historyY:[0,0],historyT:[0,0]},bo=x.computed(()=>{let Ne=Number(m.damping);return isNaN(Ne)?20:Ne}),Tr=x.computed(()=>{let Ne=Number(m.friction);return isNaN(Ne)||Ne<=0?2:Ne}),Fr=x.computed(()=>{let Ne=Number(m.scaleMin);return isNaN(Ne)?.5:Ne}),Ua=x.computed(()=>{let Ne=Number(m.scaleMax);return isNaN(Ne)?10:Ne}),aa=x.computed(()=>m.direction==="all"||m.direction==="horizontal"),Yo=x.computed(()=>m.direction==="all"||m.direction==="vertical"),gi=new Wr(1,9*Math.pow(bo.value,2)/40,bo.value),zi=new Zr(1,Tr.value);x.watch(()=>m.x,Ne=>{Ae.value=be(Ne)}),x.watch(()=>m.y,Ne=>{Ke.value=be(Ne)}),x.watch(()=>m.scaleValue,Ne=>{bt.value=he(Number(Ne))}),x.watch(Ae,qo),x.watch(Ke,Ta),x.watch(bt,as),x.watch(Fr,vi),x.watch(Ua,vi);function pi(){Dt&&Dt.cancel(),nt&&nt.cancel()}function qo(Ne){if(aa.value){if(Ne+wn.x===gn)return gn;nt&&nt.cancel(),io(Ne+wn.x,Ke.value+wn.y,bn)}return Ne}function Ta(Ne){if(Yo.value){if(Ne+wn.y===Et)return Et;nt&&nt.cancel(),io(Ae.value+wn.x,Ne+wn.y,bn)}return Ne}function vi(){if(!m.scale)return!1;Pa(bn,!0)}function as(Ne){return m.scale?(Ne=Ko(Ne),Pa(Ne,!0),Ne):!1}function sa(){m.disabled||(pi(),Tn.historyX=[0,0],Tn.historyY=[0,0],Tn.historyT=[0,0],aa.value&&(ia=gn),Yo.value&&(hi=Et),gr=null,Go=null,Ht=!0)}function Dn(Ne){if(!m.disabled&&Ht){let At=gn,Pt=Et;if(Go===null&&(Go=Math.abs(Ne.detail.dx/Ne.detail.dy)>1?"htouchmove":"vtouchmove"),aa.value&&(At=Ne.detail.dx+ia,Tn.historyX.shift(),Tn.historyX.push(At),!Yo.value&&gr===null&&(gr=Math.abs(Ne.detail.dx/Ne.detail.dy)<1)),Yo.value&&(Pt=Ne.detail.dy+hi,Tn.historyY.shift(),Tn.historyY.push(Pt),!aa.value&&gr===null&&(gr=Math.abs(Ne.detail.dy/Ne.detail.dx)<1)),Tn.historyT.shift(),Tn.historyT.push(Ne.detail.timeStamp),!gr){let Pn="touch";At<lt.value?m.outOfBounds?(Pn="touch-out-of-bounds",At=lt.value-Gn.x(lt.value-At)):At=lt.value:At>cn.value&&(m.outOfBounds?(Pn="touch-out-of-bounds",At=cn.value+Gn.x(At-cn.value)):At=cn.value),Pt<xt.value?m.outOfBounds?(Pn="touch-out-of-bounds",Pt=xt.value-Zn.x(xt.value-Pt)):Pt=xt.value:Pt>vt.value&&(m.outOfBounds?(Pn="touch-out-of-bounds",Pt=vt.value+Zn.x(Pt-vt.value)):Pt=vt.value),ho(function(){Eo(At,Pt,bn,Pn)})}}}function un(){if(!m.disabled&&Ht&&(Ht=!1,!gr&&!Lt("out-of-bounds")&&m.inertia)){let Ne=1e3*(Tn.historyX[1]-Tn.historyX[0])/(Tn.historyT[1]-Tn.historyT[0]),At=1e3*(Tn.historyY[1]-Tn.historyY[0])/(Tn.historyT[1]-Tn.historyT[0]);zi.setV(Ne,At),zi.setS(gn,Et);let Pt=zi.delta().x,Pn=zi.delta().y,Xn=Pt+gn,Ir=Pn+Et;Xn<lt.value?(Xn=lt.value,Ir=Et+(lt.value-gn)*Pn/Pt):Xn>cn.value&&(Xn=cn.value,Ir=Et+(cn.value-gn)*Pn/Pt),Ir<xt.value?(Ir=xt.value,Xn=gn+(xt.value-Et)*Pt/Pn):Ir>vt.value&&(Ir=vt.value,Xn=gn+(vt.value-Et)*Pt/Pn),zi.setEnd(Xn,Ir),Dt=si(zi,function(){let Gi=zi.s(),Yi=Gi.x,yo=Gi.y;Eo(Yi,yo,bn,"friction")},function(){Dt.cancel()})}}function pr(Ne,At){let Pt=!1;return Ne>cn.value?(Ne=cn.value,Pt=!0):Ne<lt.value&&(Ne=lt.value,Pt=!0),At>vt.value?(At=vt.value,Pt=!0):At<xt.value&&(At=xt.value,Pt=!0),{x:Ne,y:At,outOfBounds:Pt}}function Pr(){On.x=oa.left-J.left.value,On.y=oa.top-J.top.value}function Wi(Ne){Ne=Ne||bn,Ne=Ko(Ne),ut.value=oa.height/bn,jt.value=oa.width/bn;let At=ut.value*Ne,Pt=jt.value*Ne;wn.x=(Pt-jt.value)/2,wn.y=(At-ut.value)/2}function Ha(){let Ne=0-On.x+wn.x,At=J.width.value-jt.value-On.x-wn.x;lt.value=Math.min(Ne,At),cn.value=Math.max(Ne,At);let Pt=0-On.y+wn.y,Pn=J.height.value-ut.value-On.y-wn.y;xt.value=Math.min(Pt,Pn),vt.value=Math.max(Pt,Pn)}function Pa(Ne,At){if(m.scale){Ne=Ko(Ne),Wi(Ne),Ha();let Pt=pr(gn,Et),Pn=Pt.x,Xn=Pt.y;At?io(Pn,Xn,Ne,"",!0,!0):ho(function(){Eo(Pn,Xn,Ne,"",!0,!0)})}}function Ko(Ne){return Ne=Math.max(.5,Fr.value,Ne),Ne=Math.min(10,Ua.value,Ne),Ne}function io(Ne,At,Pt,Pn,Xn,Ir){pi(),aa.value||(Ne=gn),Yo.value||(At=Et),m.scale||(Pt=bn);let Gi=pr(Ne,At);if(Ne=Gi.x,At=Gi.y,!m.animation){Eo(Ne,At,Pt,Pn,Xn,Ir);return}gi._springX._solution=null,gi._springY._solution=null,gi._springScale._solution=null,gi._springX._endPosition=gn,gi._springY._endPosition=Et,gi._springScale._endPosition=bn,gi.setEnd(Ne,At,Pt,1),nt=si(gi,function(){let Yi=gi.x(),yo=Yi.x,Jo=Yi.y,ja=Yi.scale;Eo(yo,Jo,ja,Pn,Xn,Ir)},function(){nt.cancel()})}function Lt(Ne){let At=pr(gn,Et),Pt=At.x,Pn=At.y,Xn=At.outOfBounds;return Xn&&io(Pt,Pn,bn,Ne),Xn}function Eo(Ne,At,Pt,Pn="",Xn,Ir){Ne!==null&&Ne.toString()!=="NaN"&&typeof Ne=="number"||(Ne=gn||0),At!==null&&At.toString()!=="NaN"&&typeof At=="number"||(At=Et||0),Ne=Number(Ne.toFixed(1)),At=Number(At.toFixed(1)),Pt=Number(Pt.toFixed(1)),gn===Ne&&Et===At||Xn||R("change",{x:Xr(Ne,wn.x),y:Xr(At,wn.y),source:Pn}),m.scale||(Pt=bn),Pt=Ko(Pt),Pt=+Pt.toFixed(3),Ir&&Pt!==bn&&R("scale",{x:Ne,y:At,scale:Pt});let Gi=`translate(${Ne}px, ${At}px) scale(${Pt})`;Br.transition(j.value,{styles:{transform:Gi},duration:0,delay:0}),gn=Ne,Et=At,bn=Pt}function ss(){return ur(j.value).then(Ne=>{oa=Ne})}function Ia(){if(!K.value)return;pi();let Ne=m.scale?bt.value:1;Pr(),Wi(Ne),Ha(),gn=Ae.value+wn.x,Et=Ke.value+wn.y;let At=pr(gn,Et),Pt=At.x,Pn=At.y;Eo(Pt,Pn,Ne,"",!0)}return x.onMounted(()=>{me=zr(At=>{switch(At.detail.state){case"start":sa();break;case"move":Dn(At);break;case"end":un()}}),p(()=>{ss().then(()=>{Ia()})},100),zi.reconfigure(1,Tr.value),gi.reconfigure(1,9*Math.pow(bo.value,2)/40,bo.value);let Ne={setParent:Ia};ie(Ne),x.onUnmounted(()=>{se(Ne)})}),x.onUnmounted(()=>{pi()}),()=>{U(me)}}let Kn=16,Mr={activeColor:jn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Fi={percent:{type:[Number,String],default:0,validator(m){return!isNaN(parseFloat(m))}},fontSize:{type:[String,Number],default:Kn},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(m){return!isNaN(parseFloat(m))}},color:{type:String,default:Mr.activeColor},activeColor:{type:String,default:Mr.activeColor},backgroundColor:{type:String,default:Mr.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:Mr.activeMode},duration:{type:[Number,String],default:30,validator(m){return!isNaN(parseFloat(m))}},borderRadius:{type:[Number,String],default:0}},Bt=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}];var we=x.defineComponent({name:"Progress",props:Fi,styles:Bt,emits:["activeend"],setup(m,{emit:R}){let j=x.ref(null),U=x.ref(null),K=Er(j,R),J=Qr(m);return x.watch(()=>J.realPercent,(ie,se)=>{J.lastPercent=se||0,po(J,m,K)}),x.onMounted(()=>{p(()=>{ur(U.value).then(({width:ie})=>{J.progressWidth=ie||0,po(J,m,K)})},50)}),()=>{let{showInfo:ie,fontSize:se}=m,{outerBarStyle:me,innerBarStyle:be,currentPercent:he}=J;return x.createVNode("div",{ref:j,class:"uni-progress"},[x.createVNode("div",{ref:U,style:me,class:"uni-progress-bar"},[x.createVNode("div",{style:be,class:"uni-progress-inner-bar"},null)]),ie?an(he+"%",{class:"uni-progress-info",style:{fontSize:se}}):null])}}});function Qr(m){let R=x.ref(0),j=x.ref(0),U=x.computed(()=>({backgroundColor:m.backgroundColor,borderRadius:m.borderRadius,height:m.strokeWidth})),K=x.computed(()=>{let se=m.color!==Mr.activeColor&&m.activeColor===Mr.activeColor?m.color:m.activeColor;return{width:R.value*j.value/100,height:m.strokeWidth,backgroundColor:se,borderRadius:m.borderRadius}}),J=x.computed(()=>{let se=parseFloat(m.percent);return se<0&&(se=0),se>100&&(se=100),se});return x.reactive({outerBarStyle:U,innerBarStyle:K,realPercent:J,currentPercent:R,strokeTimer:0,lastPercent:0,progressWidth:j})}function po(m,R,j){m.strokeTimer&&clearInterval(m.strokeTimer),R.active?(m.currentPercent=R.activeMode===Mr.activeMode?0:m.lastPercent,m.strokeTimer=setInterval(()=>{m.currentPercent+1>m.realPercent?(m.currentPercent=m.realPercent,m.strokeTimer&&clearInterval(m.strokeTimer),j("activeend",{})):m.currentPercent+=1},parseFloat(R.duration))):m.currentPercent=m.realPercent}let yr={value:{type:Array,default(){return[]},validator:function(m){return Array.isArray(m)&&m.filter(R=>typeof R=="number").length===m.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},Dr=Mt.extend({},yr,{height:{type:[Number,String],default:0}});var Nn=x.defineComponent({name:"PickerView",props:Dr,emits:["change","update:value"],setup(m,{slots:R,emit:j}){let U=x.ref(null),K=Qn(m),J=Er(U,j),ie=[],se=be=>Array.prototype.indexOf.call(ie,be),me=be=>x.computed({get(){let he=se(be.vnode);return K.value[he]||0},set(he){if(!be.data._isMounted)return;let Ae=se(be.vnode);if(Ae<0)return;if(K.value[Ae]!==he){K.value[Ae]=he;let bt=K.value.map(jt=>jt);j("update:value",bt),J("change",{value:bt})}}});return x.provide("getPickerViewColumn",me),x.provide("pickerViewProps",m),()=>{let be=R.default&&R.default();ie=wi(be);let he=m.height?{height:`${parseFloat(m.height)}px`}:{};return x.createVNode("view",x.mergeProps({ref:U,class:"uni-picker-view",style:he},{preventGesture:!0}),[x.createVNode("view",{class:"uni-picker-view-wrapper"},[be])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Qn(m){let R=x.reactive([...m.value]),j=x.reactive({value:R});return x.watch(()=>m.value,U=>{j.value.length=U.length,U.forEach((K,J)=>{K!==j.value[J]&&j.value.splice(J,1,K)})}),j}let Fo=y.requireModule("dom"),Wt=y.config.env.platform.toLowerCase()==="android";function Ci(m){return Mt.extend({},typeof m=="string"?Si(m):m)}var Cr=x.defineComponent({name:"PickerViewColumn",props:{length:{type:[Number,String],default:0}},data:()=>({_isMounted:!1}),setup(m,{slots:R}){let j=x.getCurrentInstance(),U=x.ref(null),K=x.ref(null),J=x.ref(null),ie=x.ref(null),se=x.inject("pickerViewProps"),be=x.inject("getPickerViewColumn")(j),he=x.computed(()=>Ci(se.indicatorStyle)),Ae=x.computed(()=>Ci(se.maskStyle)),Ke=x.ref(0);Ke.value=Vi(he.value);let bt=x.ref(0);bt.value=parseFloat(se.height),x.watch(()=>m.length,()=>{p(()=>{ut(be.value,!0,!0)},150)});let jt,ut=(vt,nt=!0,Dt)=>{be.value===vt&&!Dt||(Fo.scrollToElement(K.value,{offset:vt*Ke.value,animated:nt}),be.value=vt,nt&&(jt=Date.now()))},lt=vt=>{if(Date.now()-jt<340)return;let nt=vt.detail.contentOffset.y,Dt=Math.round(nt/Ke.value);nt%Ke.value?ut(Dt,!0,!0):be.value=Dt},xt=()=>{let vt,nt;p(()=>{Promise.all([ur(U.value).then(({height:Dt})=>{vt=bt.value=Dt}),Wt&&m.length?ur(J.value).then(({height:Dt})=>{nt=Ke.value=Dt/parseFloat(m.length)}):ur(ie.value).then(({height:Dt})=>{nt=Ke.value=Dt})]).then(()=>{vt&&nt?p(()=>{j.data._isMounted=!0,ut(be.value,!1,!0)},50):xt()})},50)};x.onMounted(xt);let cn=vt=>vt?Wt?x.createVNode("div",{ref:J,style:"flex-direction:column;"},[vt]):vt:null;return()=>{let vt=R.default&&R.default(),nt=(bt.value-Ke.value)/2,Dt=`${bt.value-nt}px`,On={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return Wt||(On.scrollTop=be.value*Ke.value),x.createVNode("view",{ref:U,class:"uni-picker-view-column"},[x.createVNode("scroll-view",x.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:lt},On),[x.createVNode("view",{ref:K,class:"uni-picker-view-content",style:{paddingTop:`${nt}px`,paddingBottom:`${nt}px`}},[cn(vt)])]),x.createVNode("u-scalable",{class:"uni-picker-view-mask",style:Ae.value},[x.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:{bottom:Dt}},null),x.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:{top:Dt}},null)]),x.createVNode("u-scalable",{ref:ie,class:"uni-picker-view-indicator",style:Mt.extend({},he.value,{top:`${nt}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function Vi(m){let j=(m.height||m.lineHeight||"").match(/(-?[\d\.]+)px/),U=0;return j&&(U=parseFloat(j[1])),U}let Jt={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Un={YEAR:"year",MONTH:"month",DAY:"day"};function Wn(m){return m>9?m:`0${m}`}function Gr(m,R){m=String(m||"");let j=new Date;if(R===Jt.TIME){let U=m.split(":");U.length===2&&j.setHours(parseInt(U[0]),parseInt(U[1]))}else{let U=m.split("-");U.length===3&&j.setFullYear(parseInt(U[0]),parseInt(String(parseFloat(U[1])-1)),parseInt(U[2]))}return j}function $i(m){if(m.mode===Jt.TIME)return"00:00";if(m.mode===Jt.DATE){let R=new Date().getFullYear()-100;switch(m.fields){case Un.YEAR:return R;case Un.MONTH:return R+"-01";default:return R+"-01-01"}}return""}function vo(m){if(m.mode===Jt.TIME)return"23:59";if(m.mode===Jt.DATE){let R=new Date().getFullYear()+100;switch(m.fields){case Un.YEAR:return R;case Un.MONTH:return R+"-12";default:return R+"-12-31"}}return""}let Oi={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:Jt.SELECTOR,validator(m){return Object.values(Jt).indexOf(m)>=0}},fields:{type:String,default:""},start:{type:String,default:$i},end:{type:String,default:vo},disabled:{type:[Boolean,String],default:!1}};var eo=x.defineComponent({name:"Picker",props:Oi,emits:["change","cancel","columnchange"],setup(m,{slots:R,emit:j}){let U=x.ref(null),K=Er(U,j),J=x.ref(null),ie=x.ref(null),se=()=>{let ut=m.value;switch(m.mode){case Jt.MULTISELECTOR:{Array.isArray(ut)||(ut=[]),Array.isArray(J.value)||(J.value=[]);let lt=J.value.length=Math.max(ut.length,m.range.length);for(let xt=0;xt<lt;xt++){let cn=Number(ut[xt]),vt=Number(J.value[xt]),nt=isNaN(cn)?isNaN(vt)?0:vt:cn;J.value.splice(xt,1,nt<0?0:nt)}}break;case Jt.TIME:case Jt.DATE:J.value=String(ut);break;default:{let lt=Number(ut);J.value=lt<0?0:lt;break}}},me=ut=>{ie.value&&ie.value.sendMessage(ut)},be=ut=>{let lt={event:"cancel"};ie.value=on({url:"__uniapppicker",data:ut,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:xt=>{let cn=xt.event;if(cn==="created"){me(ut);return}if(cn==="columnchange"){delete xt.event,K(cn,xt);return}lt=xt},onClose:()=>{ie.value=null;let xt=lt.event;delete lt.event,xt&&K(xt,lt)}})},he=ut=>{I.nativeUI[m.mode===Jt.TIME?"pickTime":"pickDate"](lt=>{let xt=lt.date;K("change",{value:m.mode===Jt.TIME?`${Wn(xt.getHours())}:${Wn(xt.getMinutes())}`:`${xt.getFullYear()}-${Wn(xt.getMonth()+1)}-${Wn(xt.getDate())}`})},()=>{K("cancel",{})},m.mode===Jt.TIME?{time:Gr(m.value,Jt.TIME)}:{date:Gr(m.value,Jt.DATE),minDate:Gr(m.start,Jt.DATE),maxDate:Gr(m.end,Jt.DATE)})},Ae=ut=>{(ut.mode===Jt.TIME||ut.mode===Jt.DATE)&&!ut.fields?he():(ut.fields=Object.values(Un).includes(ut.fields)?ut.fields:Un.DAY,be(ut))},Ke=ut=>{m.disabled||Ae(Mt.extend({},m,{value:J.value,locale:_.getLocale()}))},bt=x.inject(br,!1),jt={submit:()=>[m.name,J.value],reset:()=>{switch(m.mode){case Jt.SELECTOR:J.value=0;break;case Jt.MULTISELECTOR:Array.isArray(m.value)&&(J.value=m.value.map(ut=>0));break;case Jt.DATE:case Jt.TIME:J.value="";break}}};return bt&&(bt.addField(jt),x.onBeforeUnmount(()=>bt.removeField(jt))),Object.keys(m).forEach(ut=>{x.watch(()=>m[ut],lt=>{let xt={};xt[ut]=lt,me(xt)},{deep:!0})}),x.watch(()=>m.value,se,{deep:!0}),se(),()=>x.createVNode("view",{ref:U,onClick:Ke},[R.default&&R.default()])}});let Vo={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},to=[{"uni-slider":{"":{flex:1,flexDirection:"column",marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-slider-wrapper":{"":{flexDirection:"row",alignItems:"center",minHeight:"30"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"column",paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0}},"uni-slider-handle-wrapper":{"":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-thumb":{"":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-step":{"":{position:"absolute",width:100,height:"2",background:"transparent"}},"uni-slider-value":{"":{color:"#888888",fontSize:"14",marginLeft:"14"}}}];var Ui=x.defineComponent({name:"USlider",props:Vo,styles:to,setup(m,{emit:R}){let j=x.ref(null),U=x.ref(null),K=Er(j,R),J=fr(m),ie=wr(m,J,K);return er(m,J),x.watch(()=>m.value,se=>{J.sliderValue=Number(se)}),x.onMounted(()=>{p(()=>{ur(j.value).then(({width:se})=>{J.sliderWidth=se||0,J.sliderValue=Number(m.value)})},100)}),()=>{let{showValue:se}=m,{trackStyle:me,trackActiveStyle:be,thumbStyle:he,sliderValue:Ae}=J;return x.createVNode("div",{class:"uni-slider",ref:j},[x.createVNode("div",{class:"uni-slider-wrapper"},[x.createVNode("div",x.mergeProps({class:"uni-slider-tap-area"},ie),[x.createVNode("div",{class:"uni-slider-handle-wrapper",ref:U,style:me},[x.createVNode("div",{class:"uni-slider-track",style:be},null)]),x.createVNode("div",{class:"uni-slider-thumb",style:he},null)]),se?an(Ae+"",{class:"uni-slider-value"}):null])])}}});function fr(m){let R=x.ref(0),j=x.ref(0),U=()=>m.backgroundColor!=="#e9e9e9"?m.backgroundColor:m.color!=="#007aff"?m.color:"#007aff",K=()=>m.activeColor!=="#007aff"?m.activeColor:m.selectedColor!=="#e9e9e9"?m.selectedColor:"#e9e9e9",J=()=>{let se=Number(m.max),me=Number(m.min);return(j.value-me)/(se-me)*R.value};return x.reactive({sliderWidth:R,sliderValue:j,trackStyle:x.computed(()=>({backgroundColor:U()})),trackActiveStyle:x.computed(()=>({backgroundColor:K(),width:J()})),thumbStyle:x.computed(()=>({width:m.blockSize,height:m.blockSize,marginTop:-m.blockSize/2,left:J(),backgroundColor:m.blockColor}))})}function wr(m,R,j){let U=null;function K(se,me){m.disabled||(se==="move"?(J(me),j("changing",{value:R.sliderValue})):se==="end"&&(J(me),j("change",{value:R.sliderValue})))}function J(se){se<0&&(se=0),se>R.sliderWidth&&(se=R.sliderWidth);let me=Number(m.max),be=Number(m.min),he=Number(m.step),Ae=se/R.sliderWidth*me-be;he>0&&Ae>he&&Ae%he/he!==0&&(Ae-=Ae%he),R.sliderValue=Ae+be}return{onTouchstart(se){se.changedTouches.length===1&&!U&&(U=se,K("start",se.changedTouches[0].pageX))},onTouchmove(se){se.changedTouches.length===1&&U&&K("move",se.changedTouches[0].pageX)},onTouchend(se){se.changedTouches.length===1&&U&&(U=null,K("end",se.changedTouches[0].pageX))}}}function er(m,R){let j=x.inject(br,!1),U={submit:()=>{let K=["",null];return m.name&&(K[0]=m.name,K[1]=R.sliderValue),K},reset:()=>{R.sliderValue=Number(m.value)}};j&&(j.addField(U),x.onUnmounted(()=>{j.removeField(U)}))}let Or={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},tr={switch:"switch",checkbox:"checkbox"},Ti={width:52,height:32};var dr=x.defineComponent({name:"Switch",props:Or,emits:["change"],setup(m,{emit:R}){let j=x.ref(null),U=x.ref(m.checked),K=Lr(m,U),J=Er(j,R);x.watch(()=>m.checked,me=>{U.value=me});let ie={onChange(me){U.value=me.detail.value,J("change",{value:U.value})}},se=(me,be)=>{m.disabled||(U.value=!U.value,J("change",{value:U.value}))};return K&&(K.addHandler(se),x.onBeforeUnmount(()=>{K.removeHandler(se)})),Mn(m,{"label-click":se}),()=>{let{color:me,type:be}=m;return x.createVNode("div",{ref:j},[be===tr.switch?x.createVNode("dc-switch",x.mergeProps({dataUncType:"uni-switch"},ie,{checked:U.value},{style:Ti}),null):null,be===tr.checkbox?x.createVNode(x.resolveComponent("checkbox"),x.mergeProps({style:{color:me}},{checked:U.value},ie),null):null])}}});function Lr(m,R){let j=x.inject(br,!1),U=x.inject(cr,!1),K={submit:()=>{let J=["",null];return m.name&&(J[0]=m.name,J[1]=R.value),J},reset:()=>{R.value=!1}};return j&&(j.addField(K),x.onUnmounted(()=>{j.removeField(K)})),U}let Hi={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Yr=xn("ucg"),ui={name:{type:String,default:""}},fi=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var di=x.defineComponent({name:"Checkbox",props:Hi,styles:fi,setup(m,{slots:R}){let j=x.ref(null),U=x.ref(m.checked),K=x.ref(m.value),J=x.computed(()=>m.disabled?"#adadad":m.color),ie=()=>{U.value=!1},se=(Ae,Ke)=>{m.disabled||(U.value=!U.value,me&&me.checkboxChange(Ae))},{uniCheckGroup:me,uniLabel:be}=Pi(U,K,ie);be&&(be.addHandler(se),x.onBeforeUnmount(()=>{be.removeHandler(se)})),Mn(m,{"label-click":se}),x.watch([()=>m.checked,()=>m.value],([Ae,Ke])=>{U.value=Ae,K.value=Ke});let he=()=>{if(!R.default)return[];let Ae=R.default();return Ae.length===1&&Ae[0].type===Text?[an(Ae[0].children,{class:"uni-checkbox-slot"})]:Ae};return()=>x.createVNode("div",x.mergeProps({ref:j},{dataUncType:"uni-checkbox"},{onClick:se,class:"uni-checkbox"}),[x.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":m.disabled}]},[U.value?an("\uEA08",{class:"uni-icon",style:{color:J.value}}):null]),...he()])}});function Pi(m,R,j){let U=x.computed(()=>({checkboxChecked:Boolean(m.value),value:R.value})),K={reset:j},J=x.inject(Yr,!1);J&&J.addField(U);let ie=x.inject(br,!1);ie&&ie.addField(K);let se=x.inject(cr,!1);return x.onBeforeUnmount(()=>{J&&J.removeField(U),ie&&ie.removeField(K)}),{uniCheckGroup:J,uniForm:ie,uniLabel:se}}var Io=x.defineComponent({name:"CheckboxGroup",props:ui,emits:["change"],setup(m,{slots:R,emit:j}){let U=x.ref(null),K=Er(U,j);return B(m,K),()=>x.createVNode("div",{ref:U,class:"uni-checkbox-group"},[R.default&&R.default()])}});function B(m,R){let j=[],U=()=>j.reduce((J,ie)=>(ie.value.checkboxChecked&&J.push(ie.value.value),J),new Array);x.provide(Yr,{addField(J){j.push(J)},removeField(J){j.splice(j.indexOf(J),1)},checkboxChange(J){R("change",{value:U()})}});let K=x.inject(br,!1);return K&&K.addField({submit:()=>{let J=["",null];return m.name!==""&&(J[0]=m.name,J[1]=U()),J}}),U}let ee={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},ce=xn("ucg"),ze={name:{type:String,default:""}},z=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var $=x.defineComponent({name:"Radio",props:ee,styles:z,emits:["change"],setup(m,{slots:R}){let j=x.ref(null),U=x.ref(m.checked),K=x.ref(m.value),J=x.computed(()=>{let Ke=m.disabled?"#adadad":m.color;return U.value?{backgroundColor:Ke,borderColor:Ke}:{borderColor:"#d1d1d1"}}),ie=()=>{U.value=!1},{uniCheckGroup:se,uniLabel:me,field:be}=Z(U,K,ie),he=(Ke,bt)=>{m.disabled||(U.value=!U.value,se&&se.radioChange(Ke,be))};me&&(me.addHandler(he),x.onBeforeUnmount(()=>{me.removeHandler(he)})),Mn(m,{"label-click":he}),x.watch([()=>m.checked,()=>m.value],([Ke,bt])=>{U.value=Ke,K.value=bt});let Ae=()=>{if(!R.default)return[];let Ke=R.default();return Ke.length===1&&Ke[0].type===Text?[an(Ke[0].children,{class:"uni-radio-slot"})]:Ke};return()=>{let{disabled:Ke}=m;return x.createVNode("div",x.mergeProps({ref:j},{dataUncType:"uni-radio"},{onClick:he,class:"uni-radio"}),[x.createVNode("div",{style:J.value,class:["uni-radio-input",{"uni-radio-input-disabled":Ke}]},[U.value?an("\uEA08",{class:"uni-radio-input-icon"}):null]),...Ae()])}}});function Z(m,R,j){let U=x.computed({get:()=>({radioChecked:Boolean(m.value),value:R.value}),set:({radioChecked:me})=>{m.value=me}}),K={reset:j},J=x.inject(ce,!1);J&&J.addField(U);let ie=x.inject(br,!1);ie&&ie.addField(K);let se=x.inject(cr,!1);return x.onBeforeUnmount(()=>{J&&J.removeField(U),ie&&ie.removeField(K)}),{uniCheckGroup:J,uniForm:ie,uniLabel:se,field:U}}var ve=x.defineComponent({name:"RadioGroup",props:ze,emits:["change"],setup(m,{slots:R,emit:j}){let U=x.ref(null),K=Er(U,j);return pe(m,K),()=>x.createVNode("div",{ref:U},[R.default&&R.default()])}});function pe(m,R){let j=[];x.onMounted(()=>{se(j.length-1)});let U=()=>{var me;return(me=j.find(be=>be.value.radioChecked))==null?void 0:me.value.value};x.provide(ce,{addField(me){j.push(me)},removeField(me){j.splice(j.indexOf(me),1)},radioChange(me,be){let he=j.indexOf(be);se(he,!0),R("change",{value:U()})}});let K=x.inject(br,!1),J={submit:()=>{let me=["",null];return m.name!==""&&(me[0]=m.name,me[1]=U()),me}};K&&(K.addField(J),x.onBeforeUnmount(()=>{K.removeField(J)}));function ie(me,be){me.value={radioChecked:be,value:me.value.value}}function se(me,be){j.forEach((he,Ae)=>{Ae!==me&&be&&ie(j[Ae],!1)})}return j}let at=["u-input","u-textarea"];var Cn=x.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:m,emit:R}){let j=x.ref(null),U=Er(j,R),K=[],J;return x.provide(br,{addField(ie){K.push(ie)},removeField(ie){K.splice(K.indexOf(ie),1)},submit(ie){let se={};J&&J(se);let me=K.reduce((be,he)=>{if(he.submit){let[Ae,Ke]=he.submit();Ae&&(be[Ae]=Ke)}return be},Object.create(null));Object.assign(se,me),U("submit",{value:se})},reset(ie){J&&J(),K.forEach(se=>se.reset&&se.reset()),U("reset",ie)}}),()=>{let ie=m.default&&m.default();return J=Jn(ie),x.createVNode("view",{ref:j},[ie])}}});function Jn(m){let R=y.requireModule("plus"),j=(U,K)=>{(K||m||[]).forEach(function(J){at.indexOf(String(J.type))>=0&&J.el&&J.el.attr&&J.el.attr.name&&(U?U[J.el.attr.name]=R.getValue(J.el.nodeId):J.el.setValue("")),Array.isArray(J.children)&&J.children&&J.children.length&&j(U,J.children)})};return j}let ei={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},hn={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},kn={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},Ii=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}];var ma=x.defineComponent({name:"Icon",props:ei,styles:Ii,setup(m,{}){return()=>an(kn[m.type],{class:"uni-icon",style:{color:m.color||hn[m.type],fontSize:m.size}})}});let ea={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},_a=y.config.env.platform.toLowerCase()==="android",No=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}];var ba=x.defineComponent({name:"Swiper",props:ea,styles:No,emits:["change","transition","animationfinish"],setup(m,{slots:R,emit:j}){let U=x.ref(null),K=[],J=Er(U,j),ie=La(m),se=ta(ie,m,K,J);return x.watch([()=>m.current,()=>m.currentItemId],([me,be])=>{Ea(ie,m,K)}),x.onMounted(()=>{p(()=>{ur(U.value).then(({width:me,height:be})=>{ie.swiperWidth=me,ie.swiperHeight=be})},50)}),()=>{let me=R.default&&R.default(),{indicatorStyle:be,currentSync:he}=ie;return K=wi(me),x.createVNode("div",{ref:U,class:"uni-swiper"},[x.createVNode("slider",x.mergeProps({class:"uni-swiper-slider"},{autoPlay:m.autoplay,interval:m.interval,index:he,keepIndex:!0,showIndicators:m.indicatorDots,infinite:m.circular,vertical:m.vertical,scrollable:!m.disableTouch},se),[K,x.createVNode("indicator",{class:"uni-swiper-dots",style:be},null)])])}}});function La(m){let R=x.ref(0),j=x.ref(0),U=x.ref(m.current),K=x.ref("autoplay"),J=x.computed(()=>({itemColor:m.indicatorColor,itemSelectedColor:m.indicatorActiveColor,itemSize:8,opacity:m.indicatorDots?1:0}));return x.reactive({swiperWidth:R,swiperHeight:j,indicatorStyle:J,currentSync:U,currentChangeSource:K})}function ta(m,R,j,U){let K=0,J=he=>{let Ae=he.detail,Ke=R.vertical,bt=(Ke?Ae.offsetYRatio:Ae.offsetXRatio)||0;if((he.drag||he.drag)&&(m.currentChangeSource="touch"),bt===0){let jt=Math.abs(K);if(jt===1)return;jt>.5&&(bt=1)}K=bt,U("transition",{dx:Ke?0:-m.swiperWidth*bt,dy:Ke?-m.swiperHeight*bt:0})},ie=he=>{let Ae=()=>{U("animationfinish",me()),m.currentChangeSource="autoplay"};_a?Ae():p(Ae,50)},se=he=>{typeof he.detail.source=="string"&&(m.currentChangeSource=he.detail.source),m.currentSync=he.detail.index,K=0};function me(){let he=Number(m.currentSync),Ae=j[he]||{},Ke=Ae.componentInstance&&Ae.componentInstance.itemId||"";return{current:he,currentItemId:Ke,source:m.currentChangeSource}}return x.watch(()=>m.currentSync,he=>{U("change",me())}),{onScroll:J,onScrollend:ie,onChange:se}}function Ea(m,R,j){let U=-1;if(R.currentItemId)for(let K=0,J=j;K<J.length;K++){let ie=J[K].componentInstance;if(ie&&ie.itemId===R.currentItemId){U=K;break}}U<0&&(U=Math.round(Number(R.current))||0),U=U<0?0:U,m.currentSync!==U&&(m.currentChangeSource="",m.currentSync=U)}let ya={itemId:{type:String,default:""}};var $o=x.defineComponent({name:"SwiperItem",props:ya,setup(m,{slots:R}){return()=>x.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[R.default&&R.default()])}}),na=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,hr=/^<\/([-A-Za-z0-9_]+)[^>]*>/,ti=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,wa=Uo("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),Fa=Uo("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),qr=Uo("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),Ss=Uo("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),ji=Uo("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),Ni=Uo("script,style");function os(m,R){var j,U,K,J=[],ie=m;for(J.last=function(){return this[this.length-1]};m;){if(U=!0,!J.last()||!Ni[J.last()]){if(m.indexOf("<!--")==0?(j=m.indexOf("-->"),j>=0&&(R.comment&&R.comment(m.substring(4,j)),m=m.substring(j+3),U=!1)):m.indexOf("</")==0?(K=m.match(hr),K&&(m=m.substring(K[0].length),K[0].replace(hr,be),U=!1)):m.indexOf("<")==0&&(K=m.match(na),K&&(m=m.substring(K[0].length),K[0].replace(na,me),U=!1)),U){j=m.indexOf("<");var se=j<0?m:m.substring(0,j);m=j<0?"":m.substring(j),R.chars&&R.chars(se)}}else m=m.replace(new RegExp("([\\s\\S]*?)</"+J.last()+"[^>]*>"),function(he,Ae){return Ae=Ae.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),R.chars&&R.chars(Ae),""}),be("",J.last());if(m==ie)throw"Parse Error: "+m;ie=m}be();function me(he,Ae,Ke,bt){if(Ae=Ae.toLowerCase(),Fa[Ae])for(;J.last()&&qr[J.last()];)be("",J.last());if(Ss[Ae]&&J.last()==Ae&&be("",Ae),bt=wa[Ae]||!!bt,bt||J.push(Ae),R.start){var jt=[];Ke.replace(ti,function(ut,lt){var xt=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:ji[lt]?lt:"";jt.push({name:lt,value:xt,escaped:xt.replace(/(^|[^\\])"/g,'$1\\"')})}),R.start&&R.start(Ae,jt,bt)}}function be(he,Ae){if(Ae)for(var Ke=J.length-1;Ke>=0&&J[Ke]!=Ae;Ke--);else var Ke=0;if(Ke>=0){for(var bt=J.length-1;bt>=Ke;bt--)R.end&&R.end(J[bt]);J.length=Ke}}}function Uo(m){for(var R={},j=m.split(","),U=0;U<j.length;U++)R[j[U]]=!0;return R}function Sa(m){return m.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function ki(m){return m.reduce(function(R,j){let U=j.value,K=j.name;return U.match(/ /)&&["style","src"].indexOf(K)===-1&&(U=U.split(" ")),R[K]?Array.isArray(R[K])?R[K].push(U):R[K]=[R[K],U]:R[K]=U,R},{})}function ln(m){m=Sa(m);let R=[],j={node:"root",children:[]};return os(m,{start:function(U,K,J){let ie={name:U};if(K.length!==0&&(ie.attrs=ki(K)),J){let se=R[0]||j;se.children||(se.children=[]),se.children.push(ie)}else R.unshift(ie)},end:function(U){let K=R.shift();if(K.name!==U&&console.error("invalid state: mismatch end tag"),R.length===0)j.children.push(K);else{let J=R[0];J.children||(J.children=[]),J.children.push(K)}},chars:function(U){let K={type:"text",text:U};if(R.length===0)j.children.push(K);else{let J=R[0];J.children||(J.children=[]),J.children.push(K)}},comment:function(U){let K={node:"comment",text:U},J=R[0];J.children||(J.children=[]),J.children.push(K)}}),j.children}let Ho={nodes:{type:[Array,String],default:function(){return[]}}},jo=16;var Hn=x.defineComponent({name:"RichText",props:Ho,setup(m){let R=x.getCurrentInstance();return()=>{let j=m.nodes;return typeof j=="string"&&(j=ln(j)),x.createVNode(x.resolveComponent("u-rich-text"),{value:or(j||[],R.root,{defaultFontSize:jo})},null)}}});function or(m,R,j){let U=["span","a","image","img"],K={blockquote:Ae,br:ut,div:Ae,dl:Ae,h1:bt(2),h2:bt(1.5),h3:bt(1.17),h4:bt(1),h5:bt(.83),h6:bt(.67),hr:Ae,ol:Ae,p:Ae,strong:jt,table:Ae,tbody:Ae,tfoot:Ae,thead:Ae,ul:Ae},J=/&(amp|gt|lt|nbsp|quot|apos);/g,ie={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},se={type:"span",__type:"break",attr:{value:`
`}},me={__block:!0,__break:!0,children:[]},be=null;function he(nt){let Dt=Object.create(null);if(nt.attrs){let On=(nt.attrs.class||"").split(" ");Object.assign(Dt,x.parseClassList(On,R),Si(nt.attrs.style||""))}if(nt.name==="img"||nt.name==="image"){let On=nt.attrs;Dt.width=Dt.width||On.width,Dt.height=Dt.height||On.height}return Dt}function Ae(nt){return nt.__block=!0,nt}function Ke(nt,Dt){return nt.style&&!nt.style.fontSize&&(nt.style.fontSize=j.defaultFontSize*Dt),Ae(jt(nt))}function bt(nt){return function(Dt){return Ke(Dt,nt)}}function jt(nt){return nt.style&&!nt.style.fontWeight&&(nt.style.fontWeight="bold"),nt}function ut(nt){return nt.__value=" ",Ae(nt)}function lt(nt){return nt.replace(J,function(Dt,On){return ie[On]})}function xt(nt){let Dt=(nt.name||"").toLowerCase(),On=Dt,wn=K[Dt];U.indexOf(Dt)===-1&&(Dt="span"),Dt==="img"&&(Dt="image");let bn={type:Dt,__type:On,attr:Object.create(null)};return(nt.type==="text"||nt.text)&&(bn.__value=bn.attr.value=lt((nt.text||"").trim())),nt.attrs&&Object.keys(nt.attrs).forEach(gn=>{gn!=="class"&&gn!=="style"&&(bn.attr[gn]=nt.attrs[gn])}),bn.style=he(nt),wn&&wn(bn),(me.__block||bn.__block)&&(be||(me.children.push(se),be=[me,se])),me=bn,(me.__value||me.type==="image"&&me.attr.src)&&(be=null),bn.children=cn(nt.children),me=bn,me.__block&&me.style.height&&!/^0(px)?$/.test(me.style.height)&&(be=null),bn}function cn(nt){return Array.isArray(nt)?nt.map(Dt=>xt(Dt)):[]}let vt=cn(m);if(be){let[nt,Dt]=be,On=nt.children,wn=On.indexOf(Dt);On.splice(wn,1)}return vt}let mo={};function Va(m,R,j){let{adpid:U,width:K}=m,J=U+"-"+K,ie=mo[J];if(ie&&ie.length>0){R(ie.splice(0,1)[0]);return}I.ad.getAds(m,se=>{let me=se.ads;R(me.splice(0,1)[0]),mo[J]=ie?ie.concat(me):me},se=>{j({errCode:se.code,errMsg:se.message})})}let ni={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},Sr={load:"load",close:"close",error:"error",downloadchange:"downloadchange"};var Aa=x.defineComponent({name:"Ad",props:ni,emits:[Sr.load,Sr.close,Sr.error,Sr.downloadchange],setup(m,{emit:R}){let j=x.ref(null),U=Er(j,R),K=Ca();x.watch(()=>m.adpid,ie=>{_o(K,m,U)}),x.watch(()=>m.data,ie=>{K.data=ie}),x.onMounted(()=>{p(()=>{ur(j.value).then(({width:ie})=>{K.width=ie===0?-1:ie,_o(K,m,U)})},50)});let J={onDownloadchange(ie){U(Sr.downloadchange,ie)},onDislike(ie){U(Sr.close,ie)}};return()=>x.createVNode("u-ad",x.mergeProps({ref:j},{data:K.data,rendering:!0},J),null)}});function Ca(m){let R=x.ref("");return x.reactive({width:0,data:R})}function _o(m,R,j){Va({adpid:R.adpid,width:m.width},U=>{m.data=U,j(Sr.load,{})},U=>{j(Sr.error,U)})}let no={};function zo(m,R,j,U,K){let J=m+"-"+R,ie=no[J];if(ie&&ie.length>0){U(ie.splice(0,1)[0]);return}I.ad.getDrawAds({adpid:String(m),count:3,width:R},se=>{let me=se.ads;U(me.splice(0,1)[0]),no[J]=ie?ie.concat(me):me},se=>{K({errCode:se.code,errMsg:se.message})})}let $a={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},ro={load:"load",close:"close",error:"error"};var Wo=x.defineComponent({name:"AdDraw",props:$a,emits:[ro.load,ro.close,ro.error],setup(m,{emit:R}){let j=x.ref(null),U=Er(j,R),K=As();x.watch(()=>m.adpid,ie=>{ra(K,m,U)}),x.watch(()=>m.data,ie=>{K.data=ie});let J={onDislike(ie){U(ro.close,ie)}};return x.onMounted(()=>{p(()=>{ur(j.value).then(({width:ie,height:se})=>{K.width=ie===0?-1:ie,K.height=se===0?-1:se,ra(K,m,U)})},50)}),()=>{let{data:ie}=K;return x.createVNode("u-ad-draw",x.mergeProps({ref:j},{data:ie,rendering:!0},J),null)}}});function As(m){let R=x.ref("");return x.reactive({width:0,height:0,data:R})}function ra(m,R,j){zo(R.adpid,m.width,m.height,U=>{m.data=U,j(ro.load,{})},U=>{j(ro.error,U)})}var Oa={Navigator:nn,Label:Mi,Button:ai,MovableArea:jr,MovableView:Ai,Progress:we,PickerView:Nn,PickerViewColumn:Cr,Picker:eo,USlider:Ui,Switch:dr,Checkbox:di,CheckboxGroup:Io,Radio:$,RadioGroup:ve,Form:Cn,Icon:ma,Swiper:ba,SwiperItem:$o,RichText:Hn,Ad:Aa,AdDraw:Wo};return Oa}(k,Ue,Rt);return vn}function rP(p,s){let{UniShared:_,Vue:A}=s;function k(I,f,P){let Ue=I.$[f];return Ue&&_.invokeArrayFns(Ue,P)}let y=p.setup;return p.inheritAttrs=!1,p.setup=(I,f)=>{let{attrs:{__pageId:P,__pagePath:Ue,__pageQuery:Rt}}=f,vn=s.__uniRoutes.find(jn=>jn.meta.route===Ue),Mt=A.getCurrentInstance().proxy;if(vn&&(vn.meta.isSubNVue||iP(Mt,s,{__pageId:P,__pagePath:Ue})),A.onMounted(()=>{A.nextTick(()=>{k(Mt,_.ON_READY)})}),A.onBeforeUnmount(()=>{k(Mt,_.ON_UNLOAD)}),y)return y(Rt,f)},p}function iP(p,s,{__pageId:_,__pagePath:A}){let k=s.getCurrentPages(),y=k[k.length-1];if(y&&y.__setup)y.__setup(p,y);else{let I="/"+A;return s.__registerPage({url:I,path:I,query:{},openType:"launch",webview:{id:_+""},nvuePageVm:p})}}var Ll={},Zg;function Xg(p){Zg=p}var Zc;function oP(p){if(Zc)return Zc;let s=new p.Emitter;return Zc={on(_,A){return s.on(_,A)},once(_,A){return s.once(_,A)},off(_,A){return s.off(_,A)},emit(_,...A){return s.emit(_,...A)}},Zc}function aP(p){return(s,_,A)=>{let{nvue:k}=_,y=Jc(p,_);_.Vue=y,Ll[s]={instanceId:s,config:k.config,document:k.document,data:A};let{createApp:I}=y;y.createVueApp=y.createApp=(f,P)=>(_.__uniConfig.styles=f.styles||[],I(f,P).use(sP,s,_)),y.createPageApp=(f,P)=>{rP(f,_);let Ue=P.$store;delete P.$store;let Rt=I(f,P);return Ue&&Rt.use(Ue),Rt.use(cP,y,s,_)}}}var sP={install(p,s,_){cc(_).initApp(p),lP(p,s,_)}};function lP(p,s,_){let{mount:A}=p,k=Ll[s];return p.mount=y=>{let I=y==="#app",f=k.app=A(Qg(k.document,{isRoot:I}));return I&&_.__registerApp(f),f},p}var cP={install(p,s,_,A){let{weex:k,plus:y,BroadcastChannel:I,VueShared:f,UniShared:P,getCurrentPages:Ue,setTimeout:Rt,clearTimeout:vn}=A;p.config.globalProperties.$requireNativePlugin=k.requireModule;let x=nP({uni:Zg,Vue:s,weex:k,plus:y,BroadcastChannel:I,UniViewJSBridge:oP(P),VueShared:f,UniShared:P,getCurrentPages:Ue,setTimeout:Rt,clearTimeout:vn});Object.keys(x).forEach(Mt=>{p.component(s.hyphenate(Mt),x[Mt])}),cc(A).initApp(p),uP(p,_,A)}};function uP(p,s,{nvue:_}){let{config:{compilerOptions:A},mount:k}=p;A.isCustomElement=I=>!!_.supports(`@component/${I}`);let y=Ll[s];return p.mount=I=>{let f=I==="#root",P=y.app=k(Qg(y.document,{isRoot:f}));if(f)try{_.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(Ue){}return P},p}function Qg(p,{isRoot:s}){if(s)return p.documentElement;let _=p.createComment("root");return p.documentElement.appendChild(_),_}function ep(p){let s=Ll[p];if(s&&s.app&&s.document){try{s.app.$.appContext.app.unmount(),s.document.destroy()}catch(_){}delete s.document,delete s.app}delete Ll[p]}function tp(p){let s=Ll[p];if(!s||!s.app)return new Error(`refreshInstance: instance ${p} not found!`);s.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function fP(p,s){let{UniShared:_,VueShared:A,VueReactivity:k}=p;var y=function(I,f,P,Ue){"use strict";var Rt=[];function vn(o){P.pauseTracking();for(var c=Rt.length?Rt[Rt.length-1].component:null,v=c&&c.appContext.config.warnHandler,E=x(),C=arguments.length,T=new Array(C>1?C-1:0),F=1;F<C;F++)T[F-1]=arguments[F];if(v)ne(v,c,11,[o+T.join(""),c&&c.proxy,E.map(G=>{var{vnode:oe}=G;return"at <".concat(Ir(c,oe.type),">")}).join(`
`),E]);else{var Y=["[Vue warn]: ".concat(o),...T];E.length&&Y.push(`
`,...Mt(E)),console.warn(...Y)}P.resetTracking()}function x(){var o=Rt[Rt.length-1];if(!o)return[];for(var c=[];o;){var v=c[0];v&&v.vnode===o?v.recurseCount++:c.push({vnode:o,recurseCount:0});var E=o.component&&o.component.parent;o=E&&E.vnode}return c}function Mt(o){var c=[];return o.forEach((v,E)=>{c.push(...E===0?[]:[`
`],...jn(v))}),c}function jn(o){var{vnode:c,recurseCount:v}=o,E=v>0?"... (".concat(v," recursive calls)"):"",C=c.component?c.component.parent==null:!1,T=" at <".concat(Ir(c.component,c.type,C)),F=">"+E;return c.props?[T,...In(c.props),F]:[T+F]}function In(o){var c=[],v=Object.keys(o);return v.slice(0,3).forEach(E=>{c.push(...ft(E,o[E]))}),v.length>3&&c.push(" ..."),c}function ft(o,c,v){return f.isString(c)?(c=JSON.stringify(c),v?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?v?c:["".concat(o,"=").concat(c)]:P.isRef(c)?(c=ft(o,P.toRaw(c.value),!0),v?c:["".concat(o,"=Ref<"),c,">"]):f.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=P.toRaw(c),v?c:["".concat(o,"="),c])}function ne(o,c,v,E){var C;try{C=E?o(...E):o()}catch(T){En(T,c,v)}return C}function Q(o,c,v,E){if(f.isFunction(o)){var C=ne(o,c,v,E);return C&&f.isPromise(C)&&C.catch(Y=>{En(Y,c,v)}),C}for(var T=[],F=0;F<o.length;F++)T.push(Q(o[F],c,v,E));return T}function En(o,c,v){if(c&&c.vnode,c){for(var E=c.parent,C=c.proxy,T=v;E;){var F=E.ec;if(F){for(var Y=0;Y<F.length;Y++)if(F[Y](o,C,T)===!1)return}E=E.parent}var G=c.appContext.config.errorHandler;if(G){ne(G,null,10,[o,C,T]);return}}yn(o)}function yn(o,c,v){console.error(o)}var an=!1,Vn=!1,nn=[],xn=0,$n=[],mn=null,rn=0,_n=[],Bn=null,Rr=0,Jr=Promise.resolve(),$e=null,st=null;function _t(o){var c=$e||Jr;return o?c.then(this?o.bind(this):o):c}function qt(o){for(var c=xn+1,v=nn.length;c<v;){var E=c+v>>>1,C=_r(nn[E]);C<o?c=E+1:v=E}return c}function sn(o){(!nn.length||!nn.includes(o,an&&o.allowRecurse?xn+1:xn))&&o!==st&&(o.id==null?nn.push(o):nn.splice(qt(o.id),0,o),on())}function on(){!an&&!Vn&&(Vn=!0,$e=Jr.then(yi))}function lr(o){var c=nn.indexOf(o);c>xn&&nn.splice(c,1)}function cr(o,c,v,E){f.isArray(o)?v.push(...o):(!c||!c.includes(o,o.allowRecurse?E+1:E))&&v.push(o),on()}function Bi(o){cr(o,mn,$n,rn)}function Mi(o){cr(o,Bn,_n,Rr)}function Mn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if($n.length){for(st=c,mn=[...new Set($n)],$n.length=0,rn=0;rn<mn.length;rn++)mn[rn]();mn=null,rn=0,st=null,Mn(o,c)}}function Hr(o){if(_n.length){var c=[...new Set(_n)];if(_n.length=0,Bn){Bn.push(...c);return}for(Bn=c,Bn.sort((v,E)=>_r(v)-_r(E)),Rr=0;Rr<Bn.length;Rr++)Bn[Rr]();Bn=null,Rr=0}}var _r=o=>o.id==null?1/0:o.id;function yi(o){Vn=!1,an=!0,Mn(o),nn.sort((E,C)=>_r(E)-_r(C));var c=f.NOOP;try{for(xn=0;xn<nn.length;xn++){var v=nn[xn];v&&v.active!==!1&&ne(v,null,14)}}finally{xn=0,nn.length=0,Hr(),an=!1,$e=null,(nn.length||$n.length||_n.length)&&yi(o)}}I.devtools=void 0;var Ji=[];function Di(o,c){var v,E;if(I.devtools=o,I.devtools)I.devtools.enabled=!0,Ji.forEach(T=>{var{event:F,args:Y}=T;return I.devtools.emit(F,...Y)}),Ji=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((E=(v=window.navigator)===null||v===void 0?void 0:v.userAgent)===null||E===void 0?void 0:E.includes("jsdom"))){var C=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];C.push(T=>{Di(T,c)}),setTimeout(()=>{I.devtools||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Ji=[])},3e3)}else Ji=[]}function Lo(o,c){if(!o.isUnmounted){for(var v=o.vnode.props||f.EMPTY_OBJ,E=arguments.length,C=new Array(E>2?E-2:0),T=2;T<E;T++)C[T-2]=arguments[T];var F=C,Y=c.startsWith("update:"),G=Y&&c.slice(7);if(G&&G in v){var oe="".concat(G==="modelValue"?"model":G,"Modifiers"),{number:Be,trim:ct}=v[oe]||f.EMPTY_OBJ;ct?F=C.map(pt=>pt.trim()):Be&&(F=C.map(f.toNumber))}var ae,Je=v[ae=f.toHandlerKey(c)]||v[ae=f.toHandlerKey(f.camelize(c))];!Je&&Y&&(Je=v[ae=f.toHandlerKey(f.hyphenate(c))]),Je&&Q(Je,o,6,F);var Ge=v[ae+"Once"];if(Ge){if(!o.emitted)o.emitted={};else if(o.emitted[ae])return;o.emitted[ae]=!0,Q(Ge,o,6,F)}}}function Oo(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.emitsCache,C=E.get(o);if(C!==void 0)return C;var T=o.emits,F={},Y=!1;if(!f.isFunction(o)){var G=oe=>{var Be=Oo(oe,c,!0);Be&&(Y=!0,f.extend(F,Be))};!v&&c.mixins.length&&c.mixins.forEach(G),o.extends&&G(o.extends),o.mixins&&o.mixins.forEach(G)}return!T&&!Y?(E.set(o,null),null):(f.isArray(T)?T.forEach(oe=>F[oe]=null):f.extend(F,T),E.set(o,F),F)}function br(o,c){return!o||!f.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),f.hasOwn(o,c[0].toLowerCase()+c.slice(1))||f.hasOwn(o,f.hyphenate(c))||f.hasOwn(o,c))}var Sn=null,An=null;function ai(o){var c=Sn;return Sn=o,An=o&&o.type.__scopeId||null,c}function Zi(o){An=o}function wi(){An=null}var Xi=o=>Si;function Si(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Sn;if(!c||o._n)return o;var v=function(){v._d&&ut(-1);var E=ai(c),C=o(...arguments);return ai(E),v._d&&ut(1),C};return v._n=!0,v._c=!0,v._d=!0,v}function ur(){}function jr(o){var{type:c,vnode:v,proxy:E,withProxy:C,props:T,propsOptions:[F],slots:Y,attrs:G,emit:oe,render:Be,renderCache:ct,data:ae,setupState:Je,ctx:Ge,inheritAttrs:pt}=o,Re,Oe,Le=ai(o);try{if(v.shapeFlag&4){var We=C||E;Re=Gn(Be.call(We,We,ct,T,Je,ae,Ge)),Oe=G}else{var i=c;Re=Gn(i.length>1?i(T,{attrs:G,slots:Y,emit:oe}):i(T,null)),Oe=c.props?G:Er(G)}}catch(w){he.length=0,En(w,o,1),Re=Et(me)}var l=Re;if(Oe&&pt!==!1){var d=Object.keys(Oe),{shapeFlag:h}=l;d.length&&h&(1|6)&&(F&&d.some(f.isModelListener)&&(Oe=To(Oe,F)),l=hi(l,Oe))}return v.dirs&&(l.dirs=l.dirs?l.dirs.concat(v.dirs):v.dirs),v.transition&&(l.transition=v.transition),Re=l,ai(Le),Re}function zr(o){for(var c,v=0;v<o.length;v++){var E=o[v];if(vt(E)){if(E.type!==me||E.children==="v-if"){if(c)return;c=E}}else return}return c}var Er=o=>{var c;for(var v in o)(v==="class"||v==="style"||f.isOn(v))&&((c||(c={}))[v]=o[v]);return c},To=(o,c)=>{var v={};for(var E in o)(!f.isModelListener(E)||!(E.slice(9)in c))&&(v[E]=o[E]);return v};function Po(o,c,v){var{props:E,children:C,component:T}=o,{props:F,children:Y,patchFlag:G}=c,oe=T.emitsOptions;if(c.dirs||c.transition)return!0;if(v&&G>=0){if(G&1024)return!0;if(G&16)return E?Li(E,F,oe):!!F;if(G&8)for(var Be=c.dynamicProps,ct=0;ct<Be.length;ct++){var ae=Be[ct];if(F[ae]!==E[ae]&&!br(oe,ae))return!0}}else return(C||Y)&&(!Y||!Y.$stable)?!0:E===F?!1:E?F?Li(E,F,oe):!0:!!F;return!1}function Li(o,c,v){var E=Object.keys(c);if(E.length!==Object.keys(o).length)return!0;for(var C=0;C<E.length;C++){var T=E[C];if(c[T]!==o[T]&&!br(v,T))return!0}return!1}function xr(o,c){for(var{vnode:v,parent:E}=o;E&&E.subTree===v;)(v=E.vnode).el=c,E=E.parent}var qn=o=>o.__isSuspense,uo={name:"Suspense",__isSuspense:!0,process(o,c,v,E,C,T,F,Y,G,oe){o==null?Wr(c,v,E,C,T,F,Y,G,oe):Qi(o,c,v,E,C,F,Y,G,oe)},hydrate:si,create:Xr,normalize:fo},Zr=uo;function zn(o,c){var v=o.props&&o.props[c];f.isFunction(v)&&v()}function Wr(o,c,v,E,C,T,F,Y,G){var{p:oe,o:{createElement:Be}}=G,ct=Be("div"),ae=o.suspense=Xr(o,C,E,c,ct,v,T,F,Y,G);oe(null,ae.pendingBranch=o.ssContent,ct,null,E,ae,T,F),ae.deps>0?(zn(o,"onPending"),zn(o,"onFallback"),oe(null,o.ssFallback,c,v,E,null,T,F),li(ae,o.ssFallback)):ae.resolve()}function Qi(o,c,v,E,C,T,F,Y,G){var{p:oe,um:Be,o:{createElement:ct}}=G,ae=c.suspense=o.suspense;ae.vnode=c,c.el=o.el;var Je=c.ssContent,Ge=c.ssFallback,{activeBranch:pt,pendingBranch:Re,isInFallback:Oe,isHydrating:Le}=ae;if(Re)ae.pendingBranch=Je,nt(Je,Re)?(oe(Re,Je,ae.hiddenContainer,null,C,ae,T,F,Y),ae.deps<=0?ae.resolve():Oe&&(oe(pt,Ge,v,E,C,null,T,F,Y),li(ae,Ge))):(ae.pendingId++,Le?(ae.isHydrating=!1,ae.activeBranch=Re):Be(Re,C,ae),ae.deps=0,ae.effects.length=0,ae.hiddenContainer=ct("div"),Oe?(oe(null,Je,ae.hiddenContainer,null,C,ae,T,F,Y),ae.deps<=0?ae.resolve():(oe(pt,Ge,v,E,C,null,T,F,Y),li(ae,Ge))):pt&&nt(Je,pt)?(oe(pt,Je,v,E,C,ae,T,F,Y),ae.resolve(!0)):(oe(null,Je,ae.hiddenContainer,null,C,ae,T,F,Y),ae.deps<=0&&ae.resolve()));else if(pt&&nt(Je,pt))oe(pt,Je,v,E,C,ae,T,F,Y),li(ae,Je);else if(zn(c,"onPending"),ae.pendingBranch=Je,ae.pendingId++,oe(null,Je,ae.hiddenContainer,null,C,ae,T,F,Y),ae.deps<=0)ae.resolve();else{var{timeout:We,pendingId:i}=ae;We>0?setTimeout(()=>{ae.pendingId===i&&ae.fallback(Ge)},We):We===0&&ae.fallback(Ge)}}function Xr(o,c,v,E,C,T,F,Y,G,oe){var Be=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:ct,m:ae,um:Je,n:Ge,o:{parentNode:pt,remove:Re}}=oe,Oe=f.toNumber(o.props&&o.props.timeout),Le={vnode:o,parent:c,parentComponent:v,isSVG:F,container:E,hiddenContainer:C,anchor:T,deps:0,pendingId:0,timeout:typeof Oe=="number"?Oe:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:Be,isUnmounted:!1,effects:[],resolve(){var We=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:i,activeBranch:l,pendingBranch:d,pendingId:h,effects:w,parentComponent:S,container:N}=Le;if(Le.isHydrating)Le.isHydrating=!1;else if(!We){var L=l&&d.transition&&d.transition.mode==="out-in";L&&(l.transition.afterLeave=()=>{h===Le.pendingId&&ae(d,N,M,0)});var{anchor:M}=Le;l&&(M=Ge(l),Je(l,S,Le,!0)),L||ae(d,N,M,0)}li(Le,d),Le.pendingBranch=null,Le.isInFallback=!1;for(var X=Le.parent,fe=!1;X;){if(X.pendingBranch){X.effects.push(...w),fe=!0;break}X=X.parent}fe||Mi(w),Le.effects=[],zn(i,"onResolve")},fallback(We){if(!!Le.pendingBranch){var{vnode:i,activeBranch:l,parentComponent:d,container:h,isSVG:w}=Le;zn(i,"onFallback");var S=Ge(l),N=()=>{!Le.isInFallback||(ct(null,We,h,S,d,null,w,Y,G),li(Le,We))},L=We.transition&&We.transition.mode==="out-in";L&&(l.transition.afterLeave=N),Le.isInFallback=!0,Je(l,d,null,!0),L||N()}},move(We,i,l){Le.activeBranch&&ae(Le.activeBranch,We,i,l),Le.container=We},next(){return Le.activeBranch&&Ge(Le.activeBranch)},registerDep(We,i){var l=!!Le.pendingBranch;l&&Le.deps++;var d=We.vnode.el;We.asyncDep.catch(h=>{En(h,We,0)}).then(h=>{if(!(We.isUnmounted||Le.isUnmounted||Le.pendingId!==We.suspenseId)){We.asyncResolved=!0;var{vnode:w}=We;Ko(We,h,!1),d&&(w.el=d);var S=!d&&We.subTree.el;i(We,w,pt(d||We.subTree.el),d?null:Ge(We.subTree),Le,F,G),S&&Re(S),xr(We,w.el),l&&--Le.deps===0&&Le.resolve()}})},unmount(We,i){Le.isUnmounted=!0,Le.activeBranch&&Je(Le.activeBranch,v,We,i),Le.pendingBranch&&Je(Le.pendingBranch,v,We,i)}};return Le}function si(o,c,v,E,C,T,F,Y,G){var oe=c.suspense=Xr(c,E,v,o.parentNode,s.createElement("div"),null,C,T,F,Y,!0),Be=G(o,oe.pendingBranch=c.ssContent,v,oe,T,F);return oe.deps===0&&oe.resolve(),Be}function fo(o){var{shapeFlag:c,children:v}=o,E=c&32;o.ssContent=ho(E?v.default:v),o.ssFallback=E?ho(v.fallback):Et(me)}function ho(o){var c;if(f.isFunction(o)){var v=jt&&o._c;v&&(o._d=!1,Ke()),o=o(),v&&(o._d=!0,c=Ae,bt())}if(f.isArray(o)){var E=zr(o);o=E}return o=Gn(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(C=>C!==o)),o}function go(o,c){c&&c.pendingBranch?f.isArray(o)?c.effects.push(...o):c.effects.push(o):Mi(o)}function li(o,c){o.activeBranch=c;var{vnode:v,parentComponent:E}=o,C=v.el=c.el;E&&E.subTree===v&&(E.vnode.el=C,xr(E,C))}function Br(o,c){if(Dn){var v=Dn.provides,E=Dn.parent&&Dn.parent.provides;E===v&&(v=Dn.provides=Object.create(E)),v[o]=c,Dn.type.mpType==="app"&&Dn.appContext.app.provide(o,c)}}function Ai(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=Dn||Sn;if(E){var C=E.parent==null?E.vnode.appContext&&E.vnode.appContext.provides:E.parent.provides;if(C&&o in C)return C[o];if(arguments.length>1)return v&&f.isFunction(c)?c.call(E.proxy):c}}function ci(o,c){return we(o,null,c)}function Kn(o,c){return we(o,null,{flush:"post"})}function Mr(o,c){return we(o,null,{flush:"sync"})}var Fi={};function Bt(o,c,v){return we(o,c,v)}function we(o,c){var{immediate:v,deep:E,flush:C,onTrack:T,onTrigger:F}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,Y=Dn,G,oe=!1,Be=!1;if(P.isRef(o)?(G=()=>o.value,oe=P.isShallow(o)):P.isReactive(o)?(G=()=>o,E=!0):f.isArray(o)?(Be=!0,oe=o.some(P.isReactive),G=()=>o.map(Le=>{if(P.isRef(Le))return Le.value;if(P.isReactive(Le))return yr(Le);if(f.isFunction(Le))return ne(Le,Y,2)})):f.isFunction(o)?c?G=()=>ne(o,Y,2):G=()=>{if(!(Y&&Y.isUnmounted))return ae&&ae(),Q(o,Y,3,[Je])}:G=f.NOOP,c&&E){var ct=G;G=()=>yr(ct())}var ae,Je=Le=>{ae=Oe.onStop=()=>{ne(Le,Y,4)}};if(I.isInSSRComponentSetup)return Je=f.NOOP,c?v&&Q(c,Y,3,[G(),Be?[]:void 0,Je]):G(),f.NOOP;var Ge=Be?[]:Fi,pt=()=>{if(!!Oe.active)if(c){var Le=Oe.run();(E||oe||(Be?Le.some((We,i)=>f.hasChanged(We,Ge[i])):f.hasChanged(Le,Ge)))&&(ae&&ae(),Q(c,Y,3,[Le,Ge===Fi?void 0:Ge,Je]),Ge=Le)}else Oe.run()};pt.allowRecurse=!!c;var Re;C==="sync"?Re=pt:C==="post"?Re=()=>Hn(pt,Y&&Y.suspense):Re=()=>{!Y||Y.isMounted?Bi(pt):pt()};var Oe=new P.ReactiveEffect(G,Re);return c?v?pt():Ge=Oe.run():C==="post"?Hn(Oe.run.bind(Oe),Y&&Y.suspense):Oe.run(),()=>{Oe.stop(),Y&&Y.scope&&f.remove(Y.scope.effects,Oe)}}function Qr(o,c,v){var E=this.proxy,C=f.isString(o)?o.includes(".")?po(E,o):()=>E[o]:o.bind(E,E),T;f.isFunction(c)?T=c:(T=c.handler,v=c);var F=Dn;pr(this);var Y=we(C,T.bind(E),v);return F?pr(F):Pr(),Y}function po(o,c){var v=c.split(".");return()=>{for(var E=o,C=0;C<v.length&&E;C++)E=E[v[C]];return E}}function yr(o,c){if(!f.isObject(o)||o.__v_skip||(c=c||new Set,c.has(o)))return o;if(c.add(o),P.isRef(o))yr(o.value,c);else if(f.isArray(o))for(var v=0;v<o.length;v++)yr(o[v],c);else if(f.isSet(o)||f.isMap(o))o.forEach(C=>{yr(C,c)});else if(f.isPlainObject(o))for(var E in o)yr(o[E],c);return o}function Dr(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Hi(()=>{o.isMounted=!0}),fi(()=>{o.isUnmounting=!0}),o}var Nn=[Function,Array],Qn={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Nn,onEnter:Nn,onAfterEnter:Nn,onEnterCancelled:Nn,onBeforeLeave:Nn,onLeave:Nn,onAfterLeave:Nn,onLeaveCancelled:Nn,onBeforeAppear:Nn,onAppear:Nn,onAfterAppear:Nn,onAppearCancelled:Nn},setup(o,c){var{slots:v}=c,E=un(),C=Dr(),T;return()=>{var F=v.default&&Un(v.default(),!0);if(!(!F||!F.length)){var Y=F[0];if(F.length>1){for(var G of F)if(G.type!==me){Y=G;break}}var oe=P.toRaw(o),{mode:Be}=oe;if(C.isLeaving)return Cr(Y);var ct=Vi(Y);if(!ct)return Cr(Y);var ae=Ci(ct,oe,C,E);Jt(ct,ae);var Je=E.subTree,Ge=Je&&Vi(Je),pt=!1,{getTransitionKey:Re}=ct.type;if(Re){var Oe=Re();T===void 0?T=Oe:Oe!==T&&(T=Oe,pt=!0)}if(Ge&&Ge.type!==me&&(!nt(ct,Ge)||pt)){var Le=Ci(Ge,oe,C,E);if(Jt(Ge,Le),Be==="out-in")return C.isLeaving=!0,Le.afterLeave=()=>{C.isLeaving=!1,E.update()},Cr(Y);Be==="in-out"&&ct.type!==me&&(Le.delayLeave=(We,i,l)=>{var d=Wt(C,Ge);d[String(Ge.key)]=Ge,We._leaveCb=()=>{i(),We._leaveCb=void 0,delete ae.delayedLeave},ae.delayedLeave=l})}return Y}}}},Fo=Qn;function Wt(o,c){var{leavingVNodes:v}=o,E=v.get(c.type);return E||(E=Object.create(null),v.set(c.type,E)),E}function Ci(o,c,v,E){var{appear:C,mode:T,persisted:F=!1,onBeforeEnter:Y,onEnter:G,onAfterEnter:oe,onEnterCancelled:Be,onBeforeLeave:ct,onLeave:ae,onAfterLeave:Je,onLeaveCancelled:Ge,onBeforeAppear:pt,onAppear:Re,onAfterAppear:Oe,onAppearCancelled:Le}=c,We=String(o.key),i=Wt(v,o),l=(h,w)=>{h&&Q(h,E,9,w)},d={mode:T,persisted:F,beforeEnter(h){var w=Y;if(!v.isMounted)if(C)w=pt||Y;else return;h._leaveCb&&h._leaveCb(!0);var S=i[We];S&&nt(o,S)&&S.el._leaveCb&&S.el._leaveCb(),l(w,[h])},enter(h){var w=G,S=oe,N=Be;if(!v.isMounted)if(C)w=Re||G,S=Oe||oe,N=Le||Be;else return;var L=!1,M=h._enterCb=X=>{L||(L=!0,X?l(N,[h]):l(S,[h]),d.delayedLeave&&d.delayedLeave(),h._enterCb=void 0)};w?(w(h,M),w.length<=1&&M()):M()},leave(h,w){var S=String(o.key);if(h._enterCb&&h._enterCb(!0),v.isUnmounting)return w();l(ct,[h]);var N=!1,L=h._leaveCb=M=>{N||(N=!0,w(),M?l(Ge,[h]):l(Je,[h]),h._leaveCb=void 0,i[S]===o&&delete i[S])};i[S]=o,ae?(ae(h,L),ae.length<=1&&L()):L()},clone(h){return Ci(h,c,v,E)}};return d}function Cr(o){if(Oi(o))return o=hi(o),o.children=null,o}function Vi(o){return Oi(o)?o.children?o.children[0]:void 0:o}function Jt(o,c){o.shapeFlag&6&&o.component?Jt(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function Un(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,v=arguments.length>2?arguments[2]:void 0,E=[],C=0,T=0;T<o.length;T++){var F=o[T],Y=v==null?F.key:String(v)+String(F.key!=null?F.key:T);F.type===ie?(F.patchFlag&128&&C++,E=E.concat(Un(F.children,c,Y))):(c||F.type!==me)&&E.push(Y!=null?hi(F,{key:Y}):F)}if(C>1)for(var G=0;G<E.length;G++)E[G].patchFlag=-2;return E}function Wn(o){return f.isFunction(o)?{setup:o,name:o.name}:o}var Gr=o=>!!o.type.__asyncLoader;function $i(o){f.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:v,errorComponent:E,delay:C=200,timeout:T,suspensible:F=!0,onError:Y}=o,G=null,oe,Be=0,ct=()=>(Be++,G=null,ae()),ae=()=>{var Je;return G||(Je=G=c().catch(Ge=>{if(Ge=Ge instanceof Error?Ge:new Error(String(Ge)),Y)return new Promise((pt,Re)=>{var Oe=()=>pt(ct()),Le=()=>Re(Ge);Y(Ge,Oe,Le,Be+1)});throw Ge}).then(Ge=>Je!==G&&G?G:(Ge&&(Ge.__esModule||Ge[Symbol.toStringTag]==="Module")&&(Ge=Ge.default),oe=Ge,Ge)))};return Wn({name:"AsyncComponentWrapper",__asyncLoader:ae,get __asyncResolved(){return oe},setup(){var Je=Dn;if(oe)return()=>vo(oe,Je);var Ge=Le=>{G=null,En(Le,Je,13)};if(F&&Je.suspense||I.isInSSRComponentSetup)return ae().then(Le=>()=>vo(Le,Je)).catch(Le=>(Ge(Le),()=>E?Et(E,{error:Le}):null));var pt=P.ref(!1),Re=P.ref(),Oe=P.ref(!!C);return C&&setTimeout(()=>{Oe.value=!1},C),T!=null&&setTimeout(()=>{if(!pt.value&&!Re.value){var Le=new Error("Async component timed out after ".concat(T,"ms."));Ge(Le),Re.value=Le}},T),ae().then(()=>{pt.value=!0,Je.parent&&Oi(Je.parent.vnode)&&sn(Je.parent.update)}).catch(Le=>{Ge(Le),Re.value=Le}),()=>{if(pt.value&&oe)return vo(oe,Je);if(Re.value&&E)return Et(E,{error:Re.value});if(v&&!Oe.value)return Et(v)}}})}function vo(o,c){var{vnode:{ref:v,props:E,children:C}}=c,T=Et(o,E,C);return T.ref=v,T}var Oi=o=>o.type.__isKeepAlive,eo={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:v}=c,E=un(),C=E.ctx;if(!C.renderer)return v.default;var T=new Map,F=new Set,Y=null,G=E.suspense,{renderer:{p:oe,m:Be,um:ct,o:{createElement:ae}}}=C,Je=ae("div");C.activate=(We,i,l,d,h)=>{var w=We.component;Be(We,i,l,0,G),oe(w.vnode,We,i,l,w,G,d,We.slotScopeIds,h),Hn(()=>{w.isDeactivated=!1,w.a&&f.invokeArrayFns(w.a);var S=We.props&&We.props.onVnodeMounted;S&&Tr(S,w.parent,We)},G)},C.deactivate=We=>{var i=We.component;Be(We,Je,null,1,G),Hn(()=>{i.da&&f.invokeArrayFns(i.da);var l=We.props&&We.props.onVnodeUnmounted;l&&Tr(l,i.parent,We),i.isDeactivated=!0},G)};function Ge(We){Or(We),ct(We,E,G,!0)}function pt(We){T.forEach((i,l)=>{var d=Xn(i.type);d&&(!We||!We(d))&&Re(l)})}function Re(We){var i=T.get(We);!Y||i.type!==Y.type?Ge(i):Y&&Or(Y),T.delete(We),F.delete(We)}Bt(()=>[o.include,o.exclude],We=>{var[i,l]=We;i&&pt(d=>to(i,d)),l&&pt(d=>!to(l,d))},{flush:"post",deep:!0});var Oe=null,Le=()=>{Oe!=null&&T.set(Oe,tr(E.subTree))};return Hi(Le),ui(Le),fi(()=>{T.forEach(We=>{var{subTree:i,suspense:l}=E,d=tr(i);if(We.type===d.type){Or(d);var h=d.component.da;h&&Hn(h,l);return}Ge(We)})}),()=>{if(Oe=null,!v.default)return null;var We=v.default(),i=We[0];if(We.length>1)return Y=null,We;if(!vt(i)||!(i.shapeFlag&4)&&!(i.shapeFlag&128))return Y=null,i;var l=tr(i),d=l.type,h=Xn(Gr(l)?l.type.__asyncResolved||{}:d),{include:w,exclude:S,max:N}=o;if(w&&(!h||!to(w,h))||S&&h&&to(S,h))return Y=l,i;var L=l.key==null?d:l.key,M=T.get(L);return l.el&&(l=hi(l),i.shapeFlag&128&&(i.ssContent=l)),Oe=L,M?(l.el=M.el,l.component=M.component,l.transition&&Jt(l,l.transition),l.shapeFlag|=512,F.delete(L),F.add(L)):(F.add(L),N&&F.size>parseInt(N,10)&&Re(F.values().next().value)),l.shapeFlag|=256,Y=l,i}}},Vo=eo;function to(o,c){return f.isArray(o)?o.some(v=>to(v,c)):f.isString(o)?o.split(",").includes(c):o.test?o.test(c):!1}function Ui(o,c){wr(o,"a",c)}function fr(o,c){wr(o,"da",c)}function wr(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Dn,E=o.__wdc||(o.__wdc=()=>{for(var T=v;T;){if(T.isDeactivated)return;T=T.parent}return o()});if(Ti(c,E,v),v)for(var C=v.parent;C&&C.parent;)Oi(C.parent.vnode)&&er(E,c,v,C),C=C.parent}function er(o,c,v,E){var C=Ti(c,o,E,!0);di(()=>{f.remove(E[c],C)},v)}function Or(o){var c=o.shapeFlag;c&256&&(c-=256),c&512&&(c-=512),o.shapeFlag=c}function tr(o){return o.shapeFlag&128?o.ssContent:o}function Ti(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Dn,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(v){if(Ue.isRootHook(o)&&v!==v.root&&(v=v.root,Ue.isRootImmediateHook(o))){var C=v.proxy;Q(c.bind(C),v,o,Ue.ON_LOAD===o?[C.$page.options]:[])}var T=v[o]||(v[o]=[]),F=c.__weh||(c.__weh=function(){if(!v.isUnmounted){P.pauseTracking(),pr(v);for(var Y=arguments.length,G=new Array(Y),oe=0;oe<Y;oe++)G[oe]=arguments[oe];var Be=Q(c,v,o,G);return Pr(),P.resetTracking(),Be}});return E?T.unshift(F):T.push(F),F}}var dr=o=>function(c){var v=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Dn;return(!I.isInSSRComponentSetup||o==="sp")&&Ti(o,c,v)},Lr=dr("bm"),Hi=dr("m"),Yr=dr("bu"),ui=dr("u"),fi=dr("bum"),di=dr("um"),Pi=dr("sp"),Io=dr("rtg"),B=dr("rtc");function ee(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Dn;Ti("ec",o,c)}var ce=!0;function ze(o){var c=ve(o),v=o.proxy,E=o.ctx;ce=!1,c.beforeCreate&&$(c.beforeCreate,o,"bc");var{data:C,computed:T,methods:F,watch:Y,provide:G,inject:oe,created:Be,beforeMount:ct,mounted:ae,beforeUpdate:Je,updated:Ge,activated:pt,deactivated:Re,beforeDestroy:Oe,beforeUnmount:Le,destroyed:We,unmounted:i,render:l,renderTracked:d,renderTriggered:h,errorCaptured:w,serverPrefetch:S,expose:N,inheritAttrs:L,components:M,directives:X,filters:fe}=c,Me=null;if(oe&&z(oe,E,Me,o.appContext.config.unwrapInjectedRef),F)for(var re in F){var de=F[re];f.isFunction(de)&&(E[re]=de.bind(v))}if(C){var xe=C.call(v,v);f.isObject(xe)&&(o.data=P.reactive(xe))}if(ce=!0,T){var rt=function(it){var Fe=T[it],Xe=f.isFunction(Fe)?Fe.bind(v,v):f.isFunction(Fe.get)?Fe.get.bind(v,v):f.NOOP,Ot=!f.isFunction(Fe)&&f.isFunction(Fe.set)?Fe.set.bind(v):f.NOOP,It=Yi({get:Xe,set:Ot});Object.defineProperty(E,it,{enumerable:!0,configurable:!0,get:()=>It.value,set:Ft=>It.value=Ft})};for(var Pe in T)rt(Pe)}if(Y)for(var Se in Y)Z(Y[Se],E,v,Se);if(G){var Ie=f.isFunction(G)?G.call(v):G;Reflect.ownKeys(Ie).forEach(it=>{Br(it,Ie[it])})}Be&&$(Be,o,"c");function Ce(it,Fe){f.isArray(Fe)?Fe.forEach(Xe=>it(Xe.bind(v))):Fe&&it(Fe.bind(v))}if(Ce(Lr,ct),Ce(Hi,ae),Ce(Yr,Je),Ce(ui,Ge),Ce(Ui,pt),Ce(fr,Re),Ce(ee,w),Ce(B,d),Ce(Io,h),Ce(fi,Le),Ce(di,i),Ce(Pi,S),f.isArray(N))if(N.length){var Ye=o.exposed||(o.exposed={});N.forEach(it=>{Object.defineProperty(Ye,it,{get:()=>v[it],set:Fe=>v[it]=Fe})})}else o.exposed||(o.exposed={});l&&o.render===f.NOOP&&(o.render=l),L!=null&&(o.inheritAttrs=L),M&&(o.components=M),X&&(o.directives=X);var He=o.appContext.config.globalProperties.$applyOptions;He&&He(c,o,v)}function z(o,c){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(o)&&(o=ei(o));var E=function(T){var F=o[T],Y=void 0;f.isObject(F)?"default"in F?Y=Ai(F.from||T,F.default,!0):Y=Ai(F.from||T):Y=Ai(F),P.isRef(Y)&&v?Object.defineProperty(c,T,{enumerable:!0,configurable:!0,get:()=>Y.value,set:G=>Y.value=G}):c[T]=Y};for(var C in o)E(C)}function $(o,c,v){Q(f.isArray(o)?o.map(E=>E.bind(c.proxy)):o.bind(c.proxy),c,v)}function Z(o,c,v,E){var C=E.includes(".")?po(v,E):()=>v[E];if(f.isString(o)){var T=c[o];f.isFunction(T)&&Bt(C,T)}else if(f.isFunction(o))Bt(C,o.bind(v));else if(f.isObject(o))if(f.isArray(o))o.forEach(Y=>Z(Y,c,v,E));else{var F=f.isFunction(o.handler)?o.handler.bind(v):c[o.handler];f.isFunction(F)&&Bt(C,F,o)}}function ve(o){var c=o.type,{mixins:v,extends:E}=c,{mixins:C,optionsCache:T,config:{optionMergeStrategies:F}}=o.appContext,Y=T.get(c),G;return Y?G=Y:!C.length&&!v&&!E?G=c:(G={},C.length&&C.forEach(oe=>pe(G,oe,F,!0)),pe(G,c,F)),T.set(c,G),G}function pe(o,c,v){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:C,extends:T}=c;T&&pe(o,T,v,!0),C&&C.forEach(G=>pe(o,G,v,!0));for(var F in c)if(!(E&&F==="expose")){var Y=at[F]||v&&v[F];o[F]=Y?Y(o[F],c[F]):c[F]}return o}var at={data:Cn,props:kn,emits:kn,methods:kn,computed:kn,beforeCreate:hn,created:hn,beforeMount:hn,mounted:hn,beforeUpdate:hn,updated:hn,beforeDestroy:hn,beforeUnmount:hn,destroyed:hn,unmounted:hn,activated:hn,deactivated:hn,errorCaptured:hn,serverPrefetch:hn,components:kn,directives:kn,watch:Ii,provide:Cn,inject:Jn};function Cn(o,c){return c?o?function(){return f.extend(f.isFunction(o)?o.call(this,this):o,f.isFunction(c)?c.call(this,this):c)}:c:o}function Jn(o,c){return kn(ei(o),ei(c))}function ei(o){if(f.isArray(o)){for(var c={},v=0;v<o.length;v++)c[o[v]]=o[v];return c}return o}function hn(o,c){return o?[...new Set([].concat(o,c))]:c}function kn(o,c){return o?f.extend(f.extend(Object.create(null),o),c):c}function Ii(o,c){if(!o)return c;if(!c)return o;var v=f.extend(Object.create(null),o);for(var E in c)v[E]=hn(o[E],c[E]);return v}function ma(o,c,v){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,C={},T={};f.def(T,On,1),o.propsDefaults=Object.create(null),_a(o,c,C,T);for(var F in o.propsOptions[0])F in C||(C[F]=void 0);v?o.props=E?C:P.shallowReactive(C):o.type.props?o.props=C:o.props=T,o.attrs=T}function ea(o,c,v,E){var{props:C,attrs:T,vnode:{patchFlag:F}}=o,Y=P.toRaw(C),[G]=o.propsOptions,oe=!1;if((E||F>0)&&!(F&16)){if(F&8)for(var Be=o.vnode.dynamicProps,ct=0;ct<Be.length;ct++){var ae=Be[ct];if(!br(o.emitsOptions,ae)){var Je=c[ae];if(G)if(f.hasOwn(T,ae))Je!==T[ae]&&(T[ae]=Je,oe=!0);else{var Ge=f.camelize(ae);C[Ge]=No(G,Y,Ge,Je,o,!1)}else Je!==T[ae]&&(T[ae]=Je,oe=!0)}}}else{_a(o,c,C,T)&&(oe=!0);var pt;for(var Re in Y)(!c||!f.hasOwn(c,Re)&&((pt=f.hyphenate(Re))===Re||!f.hasOwn(c,pt)))&&(G?v&&(v[Re]!==void 0||v[pt]!==void 0)&&(C[Re]=No(G,Y,Re,void 0,o,!0)):delete C[Re]);if(T!==Y)for(var Oe in T)(!c||!f.hasOwn(c,Oe)&&!0)&&(delete T[Oe],oe=!0)}oe&&P.trigger(o,"set","$attrs")}function _a(o,c,v,E){var[C,T]=o.propsOptions,F=!1,Y;if(c){for(var G in c)if(!f.isReservedProp(G)){var oe=c[G],Be=void 0;C&&f.hasOwn(C,Be=f.camelize(G))?!T||!T.includes(Be)?v[Be]=oe:(Y||(Y={}))[Be]=oe:br(o.emitsOptions,G)||(!(G in E)||oe!==E[G])&&(E[G]=oe,F=!0)}}if(T)for(var ct=P.toRaw(v),ae=Y||f.EMPTY_OBJ,Je=0;Je<T.length;Je++){var Ge=T[Je];v[Ge]=No(C,ct,Ge,ae[Ge],o,!f.hasOwn(ae,Ge))}return F}function No(o,c,v,E,C,T){var F=o[v];if(F!=null){var Y=f.hasOwn(F,"default");if(Y&&E===void 0){var G=F.default;if(F.type!==Function&&f.isFunction(G)){var{propsDefaults:oe}=C;v in oe?E=oe[v]:(pr(C),E=oe[v]=G.call(null,c),Pr())}else E=G}F[0]&&(T&&!Y?E=!1:F[1]&&(E===""||E===f.hyphenate(v))&&(E=!0))}return E}function ba(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.propsCache,C=E.get(o);if(C)return C;var T=o.props,F={},Y=[],G=!1;if(!f.isFunction(o)){var oe=We=>{G=!0;var[i,l]=ba(We,c,!0);f.extend(F,i),l&&Y.push(...l)};!v&&c.mixins.length&&c.mixins.forEach(oe),o.extends&&oe(o.extends),o.mixins&&o.mixins.forEach(oe)}if(!T&&!G)return E.set(o,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(T))for(var Be=0;Be<T.length;Be++){var ct=f.camelize(T[Be]);La(ct)&&(F[ct]=f.EMPTY_OBJ)}else if(T)for(var ae in T){var Je=f.camelize(ae);if(La(Je)){var Ge=T[ae],pt=F[Je]=f.isArray(Ge)||f.isFunction(Ge)?{type:Ge}:Ge;if(pt){var Re=ya(Boolean,pt.type),Oe=ya(String,pt.type);pt[0]=Re>-1,pt[1]=Oe<0||Re<Oe,(Re>-1||f.hasOwn(pt,"default"))&&Y.push(Je)}}}var Le=[F,Y];return E.set(o,Le),Le}function La(o){return o[0]!=="$"}function ta(o){var c=o&&o.toString().match(/^\s*function (\w+)/);return c?c[1]:o===null?"null":""}function Ea(o,c){return ta(o)===ta(c)}function ya(o,c){return f.isArray(c)?c.findIndex(v=>Ea(v,o)):f.isFunction(c)&&Ea(c,o)?0:-1}var $o=o=>o[0]==="_"||o==="$stable",na=o=>f.isArray(o)?o.map(Gn):[Gn(o)],hr=(o,c,v)=>{var E=Si(function(){return na(c(...arguments))},v);return E._c=!1,E},ti=(o,c,v)=>{var E=o._ctx;for(var C in o)if(!$o(C)){var T=o[C];f.isFunction(T)?c[C]=hr(C,T,E):T!=null&&function(){var F=na(T);c[C]=()=>F}()}},wa=(o,c)=>{var v=na(c);o.slots.default=()=>v},Fa=(o,c)=>{if(o.vnode.shapeFlag&32){var v=c._;v?(o.slots=P.toRaw(c),f.def(c,"_",v)):ti(c,o.slots={})}else o.slots={},c&&wa(o,c);f.def(o.slots,On,1)},qr=(o,c,v)=>{var{vnode:E,slots:C}=o,T=!0,F=f.EMPTY_OBJ;if(E.shapeFlag&32){var Y=c._;Y?v&&Y===1?T=!1:(f.extend(C,c),!v&&Y===1&&delete C._):(T=!c.$stable,ti(c,C)),F=c}else c&&(wa(o,c),F={default:1});if(T)for(var G in C)!$o(G)&&!(G in F)&&delete C[G]};function Ss(o,c){var v=Sn;if(v===null)return o;for(var E=At(v)||v.proxy,C=o.dirs||(o.dirs=[]),T=0;T<c.length;T++){var[F,Y,G,oe=f.EMPTY_OBJ]=c[T];f.isFunction(F)&&(F={mounted:F,updated:F}),F.deep&&yr(Y),C.push({dir:F,instance:E,value:Y,oldValue:void 0,arg:G,modifiers:oe})}return o}function ji(o,c,v,E){for(var C=o.dirs,T=c&&c.dirs,F=0;F<C.length;F++){var Y=C[F];T&&(Y.oldValue=T[F].value);var G=Y.dir[E];G&&(P.pauseTracking(),Q(G,v,8,[o.el,Y,o,c]),P.resetTracking())}}function Ni(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var os=0;function Uo(o,c){return function(E){var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(E)||(E=Object.assign({},E)),C!=null&&!f.isObject(C)&&(C=null);var T=Ni(),F=new Set,Y=!1,G=T.app={_uid:os++,_component:E,_props:C,_container:null,_context:T,_instance:null,version:oo,get config(){return T.config},set config(oe){},use(oe){for(var Be=arguments.length,ct=new Array(Be>1?Be-1:0),ae=1;ae<Be;ae++)ct[ae-1]=arguments[ae];return F.has(oe)||(oe&&f.isFunction(oe.install)?(F.add(oe),oe.install(G,...ct)):f.isFunction(oe)&&(F.add(oe),oe(G,...ct))),G},mixin(oe){return T.mixins.includes(oe)||T.mixins.push(oe),G},component(oe,Be){return Be?(T.components[oe]=Be,G):T.components[oe]},directive(oe,Be){return Be?(T.directives[oe]=Be,G):T.directives[oe]},mount(oe,Be,ct){if(!Y){var ae=Et(E,C);return ae.appContext=T,Be&&c?c(ae,oe):o(ae,oe,ct),Y=!0,G._container=oe,oe.__vue_app__=G,At(ae.component)||ae.component.proxy}},unmount(){Y&&(o(null,G._container),delete G._container.__vue_app__)},provide(oe,Be){return T.provides[oe]=Be,G}};return G}}function Sa(o,c,v,E){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(o)){o.forEach((pt,Re)=>Sa(pt,c&&(f.isArray(c)?c[Re]:c),v,E,C));return}if(!(Gr(E)&&!C)){var T=E.shapeFlag&4?At(E.component)||E.component.proxy:E.el,F=C?null:T,{i:Y,r:G}=o,oe=c&&c.r,Be=Y.refs===f.EMPTY_OBJ?Y.refs={}:Y.refs,ct=Y.setupState;if(oe!=null&&oe!==G&&(f.isString(oe)?(Be[oe]=null,f.hasOwn(ct,oe)&&(ct[oe]=null)):P.isRef(oe)&&(oe.value=null)),f.isFunction(G))ne(G,Y,12,[F,Be]);else{var ae=f.isString(G),Je=P.isRef(G);if(ae||Je){var Ge=()=>{if(o.f){var pt=ae?Be[G]:G.value;C?f.isArray(pt)&&f.remove(pt,T):f.isArray(pt)?pt.includes(T)||pt.push(T):ae?(Be[G]=[T],f.hasOwn(ct,G)&&(ct[G]=Be[G])):(G.value=[T],o.k&&(Be[o.k]=G.value))}else ae?(Be[G]=F,f.hasOwn(ct,G)&&(ct[G]=F)):P.isRef(G)&&(G.value=F,o.k&&(Be[o.k]=F))};F?(Ge.id=-1,Hn(Ge,v)):Ge()}}}}var ki=!1,ln=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",Ho=o=>o.nodeType===8;function jo(o){var{mt:c,p:v,o:{patchProp:E,nextSibling:C,parentNode:T,remove:F,insert:Y,createComment:G}}=o,oe=(Re,Oe)=>{if(!Oe.hasChildNodes()){v(null,Re,Oe),Hr();return}ki=!1,Be(Oe.firstChild,Re,null,null,null),Hr(),ki&&console.error("Hydration completed but contains mismatches.")},Be=function(Re,Oe,Le,We,i){var l=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,d=Ho(Re)&&Re.data==="[",h=()=>Ge(Re,Oe,Le,We,i,d),{type:w,ref:S,shapeFlag:N}=Oe,L=Re.nodeType;Oe.el=Re;var M=null;switch(w){case se:L!==3?M=h():(Re.data!==Oe.children&&(ki=!0,Re.data=Oe.children),M=C(Re));break;case me:L!==8||d?M=h():M=C(Re);break;case be:if(L!==1)M=h();else{M=Re;for(var X=!Oe.children.length,fe=0;fe<Oe.staticCount;fe++)X&&(Oe.children+=M.outerHTML),fe===Oe.staticCount-1&&(Oe.anchor=M),M=C(M);return M}break;case ie:d?M=Je(Re,Oe,Le,We,i,l):M=h();break;default:if(N&1)L!==1||Oe.type.toLowerCase()!==Re.tagName.toLowerCase()?M=h():M=ct(Re,Oe,Le,We,i,l);else if(N&6){Oe.slotScopeIds=i;var Me=T(Re);if(c(Oe,Me,null,Le,We,ln(Me),l),M=d?pt(Re):C(Re),Gr(Oe)){var re;d?(re=Et(ie),re.anchor=M?M.previousSibling:Me.lastChild):re=Re.nodeType===3?gr(""):Et("div"),re.el=Re,Oe.component.subTree=re}}else N&64?L!==8?M=h():M=Oe.type.hydrate(Re,Oe,Le,We,i,l,o,ae):N&128&&(M=Oe.type.hydrate(Re,Oe,Le,We,ln(T(Re)),i,l,o,Be))}return S!=null&&Sa(S,null,We,Oe),M},ct=(Re,Oe,Le,We,i,l)=>{l=l||!!Oe.dynamicChildren;var{type:d,props:h,patchFlag:w,shapeFlag:S,dirs:N}=Oe,L=d==="input"&&N||d==="option";if(L||w!==-1){if(N&&ji(Oe,null,Le,"created"),h)if(L||!l||w&(16|32))for(var M in h)(L&&M.endsWith("value")||f.isOn(M)&&!f.isReservedProp(M))&&E(Re,M,null,h[M],!1,void 0,Le);else h.onClick&&E(Re,"onClick",null,h.onClick,!1,void 0,Le);var X;if((X=h&&h.onVnodeBeforeMount)&&Tr(X,Le,Oe),N&&ji(Oe,null,Le,"beforeMount"),((X=h&&h.onVnodeMounted)||N)&&go(()=>{X&&Tr(X,Le,Oe),N&&ji(Oe,null,Le,"mounted")},We),S&16&&!(h&&(h.innerHTML||h.textContent)))for(var fe=ae(Re.firstChild,Oe,Re,Le,We,i,l);fe;){ki=!0;var Me=fe;fe=fe.nextSibling,F(Me)}else S&8&&Re.textContent!==Oe.children&&(ki=!0,Re.textContent=Oe.children)}return Re.nextSibling},ae=(Re,Oe,Le,We,i,l,d)=>{d=d||!!Oe.dynamicChildren;for(var h=Oe.children,w=h.length,S=0;S<w;S++){var N=d?h[S]:h[S]=Gn(h[S]);if(Re)Re=Be(Re,N,We,i,l,d);else{if(N.type===se&&!N.children)continue;ki=!0,v(null,N,Le,null,We,i,ln(Le),l)}}return Re},Je=(Re,Oe,Le,We,i,l)=>{var{slotScopeIds:d}=Oe;d&&(i=i?i.concat(d):d);var h=T(Re),w=ae(C(Re),Oe,h,Le,We,i,l);return w&&Ho(w)&&w.data==="]"?C(Oe.anchor=w):(ki=!0,Y(Oe.anchor=G("]"),h,w),w)},Ge=(Re,Oe,Le,We,i,l)=>{if(ki=!0,Oe.el=null,l)for(var d=pt(Re);;){var h=C(Re);if(h&&h!==d)F(h);else break}var w=C(Re),S=T(Re);return F(Re),v(null,Oe,S,w,Le,We,ln(S),i),w},pt=Re=>{for(var Oe=0;Re;)if(Re=C(Re),Re&&Ho(Re)&&(Re.data==="["&&Oe++,Re.data==="]")){if(Oe===0)return C(Re);Oe--}return Re};return[oe,Be]}var Hn=go;function or(o){return Va(o)}function mo(o){return Va(o,jo)}function Va(o,c){var v=f.getGlobalThis();v.__VUE__=!0;var{insert:E,remove:C,patchProp:T,forcePatchProp:F,createElement:Y,createText:G,createComment:oe,setText:Be,setElementText:ct,parentNode:ae,nextSibling:Je,setScopeId:Ge=f.NOOP,cloneNode:pt,insertStaticContent:Re}=o,Oe=function(H,q,ue){var _e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ht=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!q.dynamicChildren;if(H!==q){H&&!nt(H,q)&&(_e=Ot(H),Ye(H,ge,Ze,!0),H=null),q.patchFlag===-2&&(et=!1,q.dynamicChildren=null);var{type:De,ref:Ct,shapeFlag:wt}=q;switch(De){case se:Le(H,q,ue,_e);break;case me:We(H,q,ue,_e);break;case be:H==null&&i(q,ue,_e,ht);break;case ie:fe(H,q,ue,_e,ge,Ze,ht,Qe,et);break;default:wt&1?h(H,q,ue,_e,ge,Ze,ht,Qe,et):wt&6?Me(H,q,ue,_e,ge,Ze,ht,Qe,et):(wt&64||wt&128)&&De.process(H,q,ue,_e,ge,Ze,ht,Qe,et,Ft)}Ct!=null&&ge&&Sa(Ct,H&&H.ref,Ze,q||H,!q)}},Le=(H,q,ue,_e)=>{if(H==null)E(q.el=G(q.children),ue,_e);else{var ge=q.el=H.el;q.children!==H.children&&Be(ge,q.children)}},We=(H,q,ue,_e)=>{H==null?E(q.el=oe(q.children||""),ue,_e):q.el=H.el},i=(H,q,ue,_e)=>{[H.el,H.anchor]=Re(H.children,q,ue,_e,H.el,H.anchor)},l=(H,q,ue)=>{for(var{el:_e,anchor:ge}=H,Ze;_e&&_e!==ge;)Ze=Je(_e),E(_e,q,ue),_e=Ze;E(ge,q,ue)},d=H=>{for(var{el:q,anchor:ue}=H,_e;q&&q!==ue;)_e=Je(q),C(q),q=_e;C(ue)},h=(H,q,ue,_e,ge,Ze,ht,Qe,et)=>{ht=ht||q.type==="svg",H==null?w(q,ue,_e,ge,Ze,ht,Qe,et):L(H,q,ge,Ze,ht,Qe,et)},w=(H,q,ue,_e,ge,Ze,ht,Qe)=>{var et,De,{type:Ct,props:wt,shapeFlag:St,transition:Ut,patchFlag:Zt,dirs:fn}=H;if(H.el&&pt!==void 0&&Zt===-1)et=H.el=pt(H.el);else{if(et=H.el=Y(H.type,Ze,wt&&wt.is,wt),St&8?ct(et,H.children):St&16&&N(H.children,et,null,_e,ge,Ze&&Ct!=="foreignObject",ht,Qe),fn&&ji(H,null,_e,"created"),wt){for(var nr in wt)nr!=="value"&&!f.isReservedProp(nr)&&T(et,nr,null,wt[nr],Ze,H.children,_e,ge,Xe);"value"in wt&&T(et,"value",null,wt.value,!1,[],_e),(De=wt.onVnodeBeforeMount)&&Tr(De,_e,H)}S(et,H,H.scopeId,ht,_e)}fn&&ji(H,null,_e,"beforeMount");var rr=(!ge||ge&&!ge.pendingBranch)&&Ut&&!Ut.persisted;rr&&Ut.beforeEnter(et),E(et,q,ue),((De=wt&&wt.onVnodeMounted)||rr||fn)&&Hn(()=>{De&&Tr(De,_e,H),rr&&Ut.enter(et),fn&&ji(H,null,_e,"mounted")},ge)},S=(H,q,ue,_e,ge)=>{if(ue&&Ge(H,ue),_e)for(var Ze=0;Ze<_e.length;Ze++)Ge(H,_e[Ze]);if(ge){var ht=ge.subTree;if(q===ht){var Qe=ge.vnode;S(H,Qe,Qe.scopeId,Qe.slotScopeIds,ge.parent)}}},N=function(H,q,ue,_e,ge,Ze,ht,Qe){for(var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,De=et;De<H.length;De++){var Ct=H[De]=Qe?Zn(H[De]):Gn(H[De]);Oe(null,Ct,q,ue,_e,ge,Ze,ht,Qe)}},L=(H,q,ue,_e,ge,Ze,ht)=>{var Qe=q.el=H.el,{patchFlag:et,dynamicChildren:De,dirs:Ct}=q;et|=H.patchFlag&16;var wt=H.props||f.EMPTY_OBJ,St=q.props||f.EMPTY_OBJ,Ut;ue&&ni(ue,!1),(Ut=St.onVnodeBeforeUpdate)&&Tr(Ut,ue,q,H),Ct&&ji(q,H,ue,"beforeUpdate"),ue&&ni(ue,!0);var Zt=ge&&q.type!=="foreignObject";if(De?M(H.dynamicChildren,De,Qe,ue,_e,Zt,Ze):ht||Pe(H,q,Qe,null,ue,_e,Zt,Ze,!1),et>0){if(et&16)X(Qe,q,wt,St,ue,_e,ge);else if(et&2&&wt.class!==St.class&&T(Qe,"class",null,St.class,ge,[],ue),et&4&&T(Qe,"style",wt.style,St.style,ge,[],ue),et&8)for(var fn=q.dynamicProps,nr=0;nr<fn.length;nr++){var rr=fn[nr],So=wt[rr],Ro=St[rr];(Ro!==So||rr==="value"||F&&F(Qe,rr))&&T(Qe,rr,So,Ro,ge,H.children,ue,_e,Xe)}et&1&&H.children!==q.children&&ct(Qe,q.children)}else!ht&&De==null&&X(Qe,q,wt,St,ue,_e,ge);((Ut=St.onVnodeUpdated)||Ct)&&Hn(()=>{Ut&&Tr(Ut,ue,q,H),Ct&&ji(q,H,ue,"updated")},_e)},M=(H,q,ue,_e,ge,Ze,ht)=>{for(var Qe=0;Qe<q.length;Qe++){var et=H[Qe],De=q[Qe],Ct=et.el&&(et.type===ie||!nt(et,De)||et.shapeFlag&(6|64))?ae(et.el):ue;Oe(et,De,Ct,null,_e,ge,Ze,ht,!0)}},X=(H,q,ue,_e,ge,Ze,ht)=>{if(ue!==_e){for(var Qe in _e)if(!f.isReservedProp(Qe)){var et=_e[Qe],De=ue[Qe];(et!==De&&Qe!=="value"||F&&F(H,Qe))&&T(H,Qe,De,et,ht,q.children,ge,Ze,Xe)}if(ue!==f.EMPTY_OBJ)for(var Ct in ue)!f.isReservedProp(Ct)&&!(Ct in _e)&&T(H,Ct,ue[Ct],null,ht,q.children,ge,Ze,Xe);"value"in _e&&T(H,"value",ue.value,_e.value,!1,[],ge)}},fe=(H,q,ue,_e,ge,Ze,ht,Qe,et)=>{var De=q.el=H?H.el:G(""),Ct=q.anchor=H?H.anchor:G(""),{patchFlag:wt,dynamicChildren:St,slotScopeIds:Ut}=q;Ut&&(Qe=Qe?Qe.concat(Ut):Ut),H==null?(E(De,ue,_e),E(Ct,ue,_e),N(q.children,ue,Ct,ge,Ze,ht,Qe,et)):wt>0&&wt&64&&St&&H.dynamicChildren?(M(H.dynamicChildren,St,ue,ge,Ze,ht,Qe),(q.key!=null||ge&&q===ge.subTree)&&Sr(H,q,!0)):Pe(H,q,ue,Ct,ge,Ze,ht,Qe,et)},Me=(H,q,ue,_e,ge,Ze,ht,Qe,et)=>{q.slotScopeIds=Qe,H==null?q.shapeFlag&512?ge.ctx.activate(q,ue,_e,ht,et):re(q,ue,_e,ge,Ze,ht,et):de(H,q,et)},re=(H,q,ue,_e,ge,Ze,ht)=>{var Qe=H.component=sa(H,_e,ge);if(Oi(H)&&(Qe.ctx.renderer=Ft),Ha(Qe),Qe.asyncDep){if(ge&&ge.registerDep(Qe,xe),!H.el){var et=Qe.subTree=Et(me);We(null,et,q,ue)}return}xe(Qe,H,q,ue,ge,Ze,ht)},de=(H,q,ue)=>{var _e=q.component=H.component;if(Po(H,q,ue))if(_e.asyncDep&&!_e.asyncResolved){rt(_e,q,ue);return}else _e.next=q,lr(_e.update),_e.update();else q.component=H.component,q.el=H.el,_e.vnode=q},xe=(H,q,ue,_e,ge,Ze,ht)=>{var Qe=()=>{if(H.isMounted){var{next:W,bu:te,u:Ee,parent:Te,vnode:Ve}=H,ot=W,dt;ni(H,!1),W?(W.el=Ve.el,rt(H,W,ht)):W=Ve,te&&f.invokeArrayFns(te),(dt=W.props&&W.props.onVnodeBeforeUpdate)&&Tr(dt,Te,W,Ve),ni(H,!0);var qe=jr(H),tt=H.subTree;H.subTree=qe,Oe(tt,qe,ae(tt.el),Ot(tt),H,ge,Ze),W.el=qe.el,ot===null&&xr(H,qe.el),Ee&&Hn(Ee,ge),(dt=W.props&&W.props.onVnodeUpdated)&&Hn(()=>Tr(dt,Te,W,Ve),ge)}else{var Ct,{el:wt,props:St}=q,{bm:Ut,m:Zt,parent:fn}=H,nr=Gr(q);if(ni(H,!1),Ut&&f.invokeArrayFns(Ut),!nr&&(Ct=St&&St.onVnodeBeforeMount)&&Tr(Ct,fn,q),ni(H,!0),wt&&gt){var rr=()=>{H.subTree=jr(H),gt(wt,H.subTree,H,ge,null)};nr?q.type.__asyncLoader().then(()=>!H.isUnmounted&&rr()):rr()}else{var So=H.subTree=jr(H);Oe(null,So,ue,_e,H,ge,Ze),q.el=So.el}if(Zt&&Hn(Zt,ge),!nr&&(Ct=St&&St.onVnodeMounted)){var Ro=q;Hn(()=>Tr(Ct,fn,Ro),ge)}q.shapeFlag&256&&H.a&&Hn(H.a,ge),H.isMounted=!0,q=ue=_e=null}},et=H.effect=new P.ReactiveEffect(Qe,()=>sn(H.update),H.scope),De=H.update=et.run.bind(et);De.id=H.uid,ni(H,!0),De()},rt=(H,q,ue)=>{q.component=H;var _e=H.vnode.props;H.vnode=q,H.next=null,ea(H,q.props,_e,ue),qr(H,q.children,ue),P.pauseTracking(),Mn(void 0,H.update),P.resetTracking()},Pe=function(H,q,ue,_e,ge,Ze,ht,Qe){var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,De=H&&H.children,Ct=H?H.shapeFlag:0,wt=q.children,{patchFlag:St,shapeFlag:Ut}=q;if(St>0){if(St&128){Ie(De,wt,ue,_e,ge,Ze,ht,Qe,et);return}else if(St&256){Se(De,wt,ue,_e,ge,Ze,ht,Qe,et);return}}Ut&8?(Ct&16&&Xe(De,ge,Ze),wt!==De&&ct(ue,wt)):Ct&16?Ut&16?Ie(De,wt,ue,_e,ge,Ze,ht,Qe,et):Xe(De,ge,Ze,!0):(Ct&8&&ct(ue,""),Ut&16&&N(wt,ue,_e,ge,Ze,ht,Qe,et))},Se=(H,q,ue,_e,ge,Ze,ht,Qe,et)=>{H=H||f.EMPTY_ARR,q=q||f.EMPTY_ARR;var De=H.length,Ct=q.length,wt=Math.min(De,Ct),St;for(St=0;St<wt;St++){var Ut=q[St]=et?Zn(q[St]):Gn(q[St]);Oe(H[St],Ut,ue,null,ge,Ze,ht,Qe,et)}De>Ct?Xe(H,ge,Ze,!0,!1,wt):N(q,ue,_e,ge,Ze,ht,Qe,et,wt)},Ie=(H,q,ue,_e,ge,Ze,ht,Qe,et)=>{for(var De=0,Ct=q.length,wt=H.length-1,St=Ct-1;De<=wt&&De<=St;){var Ut=H[De],Zt=q[De]=et?Zn(q[De]):Gn(q[De]);if(nt(Ut,Zt))Oe(Ut,Zt,ue,null,ge,Ze,ht,Qe,et);else break;De++}for(;De<=wt&&De<=St;){var fn=H[wt],nr=q[St]=et?Zn(q[St]):Gn(q[St]);if(nt(fn,nr))Oe(fn,nr,ue,null,ge,Ze,ht,Qe,et);else break;wt--,St--}if(De>wt){if(De<=St)for(var rr=St+1,So=rr<Ct?q[rr].el:_e;De<=St;)Oe(null,q[De]=et?Zn(q[De]):Gn(q[De]),ue,So,ge,Ze,ht,Qe,et),De++}else if(De>St)for(;De<=wt;)Ye(H[De],ge,Ze,!0),De++;else{var Ro=De,W=De,te=new Map;for(De=W;De<=St;De++){var Ee=q[De]=et?Zn(q[De]):Gn(q[De]);Ee.key!=null&&te.set(Ee.key,De)}var Te,Ve=0,ot=St-W+1,dt=!1,qe=0,tt=new Array(ot);for(De=0;De<ot;De++)tt[De]=0;for(De=Ro;De<=wt;De++){var je=H[De];if(Ve>=ot){Ye(je,ge,Ze,!0);continue}var kt=void 0;if(je.key!=null)kt=te.get(je.key);else for(Te=W;Te<=St;Te++)if(tt[Te-W]===0&&nt(je,q[Te])){kt=Te;break}kt===void 0?Ye(je,ge,Ze,!0):(tt[kt-W]=De+1,kt>=qe?qe=kt:dt=!0,Oe(je,q[kt],ue,null,ge,Ze,ht,Qe,et),Ve++)}var Vt=dt?Aa(tt):f.EMPTY_ARR;for(Te=Vt.length-1,De=ot-1;De>=0;De--){var $t=W+De,tn=q[$t],Vr=$t+1<Ct?q[$t+1].el:_e;tt[De]===0?Oe(null,tn,ue,Vr,ge,Ze,ht,Qe,et):dt&&(Te<0||De!==Vt[Te]?Ce(tn,ue,Vr,2):Te--)}}},Ce=function(H,q,ue,_e){var ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Ze,type:ht,transition:Qe,children:et,shapeFlag:De}=H;if(De&6){Ce(H.component.subTree,q,ue,_e);return}if(De&128){H.suspense.move(q,ue,_e);return}if(De&64){ht.move(H,q,ue,Ft);return}if(ht===ie){E(Ze,q,ue);for(var Ct=0;Ct<et.length;Ct++)Ce(et[Ct],q,ue,_e);E(H.anchor,q,ue);return}if(ht===be){l(H,q,ue);return}var wt=_e!==2&&De&1&&Qe;if(wt)if(_e===0)Qe.beforeEnter(Ze),E(Ze,q,ue),Hn(()=>Qe.enter(Ze),ge);else{var{leave:St,delayLeave:Ut,afterLeave:Zt}=Qe,fn=()=>E(Ze,q,ue),nr=()=>{St(Ze,()=>{fn(),Zt&&Zt()})};Ut?Ut(Ze,fn,nr):nr()}else E(Ze,q,ue)},Ye=function(H,q,ue){var _e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Ze,props:ht,ref:Qe,children:et,dynamicChildren:De,shapeFlag:Ct,patchFlag:wt,dirs:St}=H;if(Qe!=null&&Sa(Qe,null,ue,H,!0),Ct&256){q.ctx.deactivate(H);return}var Ut=Ct&1&&St,Zt=!Gr(H),fn;if(Zt&&(fn=ht&&ht.onVnodeBeforeUnmount)&&Tr(fn,q,H),Ct&6)Fe(H.component,ue,_e);else{if(Ct&128){H.suspense.unmount(ue,_e);return}Ut&&ji(H,null,q,"beforeUnmount"),Ct&64?H.type.remove(H,q,ue,ge,Ft,_e):De&&(Ze!==ie||wt>0&&wt&64)?Xe(De,q,ue,!1,!0):(Ze===ie&&wt&(128|256)||!ge&&Ct&16)&&Xe(et,q,ue),_e&&He(H)}(Zt&&(fn=ht&&ht.onVnodeUnmounted)||Ut)&&Hn(()=>{fn&&Tr(fn,q,H),Ut&&ji(H,null,q,"unmounted")},ue)},He=H=>{var{type:q,el:ue,anchor:_e,transition:ge}=H;if(q===ie){it(ue,_e);return}if(q===be){d(H);return}var Ze=()=>{C(ue),ge&&!ge.persisted&&ge.afterLeave&&ge.afterLeave()};if(H.shapeFlag&1&&ge&&!ge.persisted){var{leave:ht,delayLeave:Qe}=ge,et=()=>ht(ue,Ze);Qe?Qe(H.el,Ze,et):et()}else Ze()},it=(H,q)=>{for(var ue;H!==q;)ue=Je(H),C(H),H=ue;C(q)},Fe=(H,q,ue)=>{var{bum:_e,scope:ge,update:Ze,subTree:ht,um:Qe}=H;_e&&f.invokeArrayFns(_e),ge.stop(),Ze&&(Ze.active=!1,Ye(ht,H,q,ue)),Qe&&Hn(Qe,q),Hn(()=>{H.isUnmounted=!0},q),q&&q.pendingBranch&&!q.isUnmounted&&H.asyncDep&&!H.asyncResolved&&H.suspenseId===q.pendingId&&(q.deps--,q.deps===0&&q.resolve())},Xe=function(H,q,ue){for(var _e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ht=Ze;ht<H.length;ht++)Ye(H[ht],q,ue,_e,ge)},Ot=H=>H.shapeFlag&6?Ot(H.component.subTree):H.shapeFlag&128?H.suspense.next():Je(H.anchor||H.el),It=(H,q,ue)=>{H==null?q._vnode&&Ye(q._vnode,null,null,!0):Oe(q._vnode||null,H,q,null,null,null,ue),Hr(),q._vnode=H},Ft={p:Oe,um:Ye,m:Ce,r:He,mt:re,mc:N,pc:Pe,pbc:M,n:Ot,o},Nt,gt;return c&&([Nt,gt]=c(Ft)),{render:It,hydrate:Nt,createApp:Uo(It,Nt)}}function ni(o,c){var{effect:v,update:E}=o;v.allowRecurse=E.allowRecurse=c}function Sr(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=o.children,C=c.children;if(f.isArray(E)&&f.isArray(C))for(var T=0;T<E.length;T++){var F=E[T],Y=C[T];Y.shapeFlag&1&&!Y.dynamicChildren&&((Y.patchFlag<=0||Y.patchFlag===32)&&(Y=C[T]=Zn(C[T]),Y.el=F.el),v||Sr(F,Y))}}function Aa(o){var c=o.slice(),v=[0],E,C,T,F,Y,G=o.length;for(E=0;E<G;E++){var oe=o[E];if(oe!==0){if(C=v[v.length-1],o[C]<oe){c[E]=C,v.push(E);continue}for(T=0,F=v.length-1;T<F;)Y=T+F>>1,o[v[Y]]<oe?T=Y+1:F=Y;oe<o[v[T]]&&(T>0&&(c[E]=v[T-1]),v[T]=E)}}for(T=v.length,F=v[T-1];T-- >0;)v[T]=F,F=c[F];return v}var Ca=o=>o.__isTeleport,_o=o=>o&&(o.disabled||o.disabled===""),no=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,zo=(o,c)=>{var v=o&&o.to;if(f.isString(v))if(c){var E=c(v);return E}else return null;else return v},$a={__isTeleport:!0,process(o,c,v,E,C,T,F,Y,G,oe){var{mc:Be,pc:ct,pbc:ae,o:{insert:Je,querySelector:Ge,createText:pt,createComment:Re}}=oe,Oe=_o(c.props),{shapeFlag:Le,children:We,dynamicChildren:i}=c;if(o==null){var l=c.el=pt(""),d=c.anchor=pt("");Je(l,v,E),Je(d,v,E);var h=c.target=zo(c.props,Ge),w=c.targetAnchor=pt("");h&&(Je(w,h),F=F||no(h));var S=(de,xe)=>{Le&16&&Be(We,de,xe,C,T,F,Y,G)};Oe?S(v,d):h&&S(h,w)}else{c.el=o.el;var N=c.anchor=o.anchor,L=c.target=o.target,M=c.targetAnchor=o.targetAnchor,X=_o(o.props),fe=X?v:L,Me=X?N:M;if(F=F||no(L),i?(ae(o.dynamicChildren,i,fe,C,T,F,Y),Sr(o,c,!0)):G||ct(o,c,fe,Me,C,T,F,Y,!1),Oe)X||ro(c,v,N,oe,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var re=c.target=zo(c.props,Ge);re&&ro(c,re,null,oe,0)}else X&&ro(c,L,M,oe,1)}},remove(o,c,v,E,C,T){var{um:F,o:{remove:Y}}=C,{shapeFlag:G,children:oe,anchor:Be,targetAnchor:ct,target:ae,props:Je}=o;if(ae&&Y(ct),(T||!_o(Je))&&(Y(Be),G&16))for(var Ge=0;Ge<oe.length;Ge++){var pt=oe[Ge];F(pt,c,v,!0,!!pt.dynamicChildren)}},move:ro,hydrate:Wo};function ro(o,c,v,E){var{o:{insert:C},m:T}=E,F=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;F===0&&C(o.targetAnchor,c,v);var{el:Y,anchor:G,shapeFlag:oe,children:Be,props:ct}=o,ae=F===2;if(ae&&C(Y,c,v),(!ae||_o(ct))&&oe&16)for(var Je=0;Je<Be.length;Je++)T(Be[Je],c,v,2);ae&&C(G,c,v)}function Wo(o,c,v,E,C,T,F,Y){var{o:{nextSibling:G,parentNode:oe,querySelector:Be}}=F,ct=c.target=zo(c.props,Be);if(ct){var ae=ct._lpa||ct.firstChild;c.shapeFlag&16&&(_o(c.props)?(c.anchor=Y(G(o),c,oe(o),v,E,C,T),c.targetAnchor=ae):(c.anchor=G(o),c.targetAnchor=Y(ae,c,ct,v,E,C,T)),ct._lpa=c.targetAnchor&&G(c.targetAnchor))}return c.anchor&&G(c.anchor)}var As=$a,ra="components",Oa="directives";function m(o,c){return K(ra,o,!0,c)||o}var R=Symbol();function j(o){return f.isString(o)?K(ra,o,!1)||o:o||R}function U(o){return K(Oa,o)}function K(o,c){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,E=Sn||Dn;if(E){var C=E.type;if(o===ra){var T=Xn(C);if(T&&(T===c||T===f.camelize(c)||T===f.capitalize(f.camelize(c))))return C}var F=J(E[o]||C[o],c)||J(E.appContext[o],c);return!F&&v?C:F}}function J(o,c){return o&&(o[c]||o[f.camelize(c)]||o[f.capitalize(f.camelize(c))])}var ie=Symbol(void 0),se=Symbol(void 0),me=Symbol(void 0),be=Symbol(void 0),he=[],Ae=null;function Ke(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;he.push(Ae=o?null:[])}function bt(){he.pop(),Ae=he[he.length-1]||null}var jt=1;function ut(o){jt+=o}function lt(o){return o.dynamicChildren=jt>0?Ae||f.EMPTY_ARR:null,bt(),jt>0&&Ae&&Ae.push(o),o}function xt(o,c,v,E,C,T){return lt(gn(o,c,v,E,C,T,!0))}function cn(o,c,v,E,C){return lt(Et(o,c,v,E,C,!0))}function vt(o){return o?o.__v_isVNode===!0:!1}function nt(o,c){return o.type===c.type&&o.key===c.key}function Dt(o){}var On="__vInternal",wn=o=>{var{key:c}=o;return c!=null?c:null},bn=o=>{var{ref:c,ref_key:v,ref_for:E}=o;return c!=null?f.isString(c)||P.isRef(c)||f.isFunction(c)?{i:Sn,r:c,k:v,f:!!E}:c:null};function gn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===ie?0:1,F=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Y=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,G={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&wn(c),ref:c&&bn(c),scopeId:An,slotScopeIds:null,children:v,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:T,patchFlag:E,dynamicProps:C,dynamicChildren:null,appContext:null};return Y?(Tn(G,v),T&128&&o.normalize(G)):v&&(G.shapeFlag|=f.isString(v)?8:16),jt>0&&!F&&Ae&&(G.patchFlag>0||T&6)&&G.patchFlag!==32&&Ae.push(G),G}var Et=Ht;function Ht(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===R)&&(o=me),vt(o)){var F=hi(o,c,!0);return v&&Tn(F,v),F}if(Gi(o)&&(o=o.__vccOpts),c){c=ia(c);var{class:Y,style:G}=c;Y&&!f.isString(Y)&&(c.class=f.normalizeClass(Y)),f.isObject(G)&&(P.isProxy(G)&&!f.isArray(G)&&(G=f.extend({},G)),c.style=f.normalizeStyle(G))}var oe=f.isString(o)?1:qn(o)?128:Ca(o)?64:f.isObject(o)?4:f.isFunction(o)?2:0;return gn(o,c,v,E,C,oe,T,!0)}function ia(o){return o?P.isProxy(o)||On in o?f.extend({},o):o:null}function hi(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:E,ref:C,patchFlag:T,children:F}=o,Y=c?bo(E||{},c):E,G={__v_isVNode:!0,__v_skip:!0,type:o.type,props:Y,key:Y&&wn(Y),ref:c&&c.ref?v&&C?f.isArray(C)?C.concat(bn(c)):[C,bn(c)]:bn(c):C,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:F,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==ie?T===-1?16:T|16:T,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&hi(o.ssContent),ssFallback:o.ssFallback&&hi(o.ssFallback),el:o.el,anchor:o.anchor};return G}function gr(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Et(se,null,o,c)}function Go(o,c){var v=Et(be,null,o);return v.staticCount=c,v}function oa(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(Ke(),cn(me,null,o)):Et(me,null,o)}function Gn(o){return o==null||typeof o=="boolean"?Et(me):f.isArray(o)?Et(ie,null,o.slice()):typeof o=="object"?Zn(o):Et(se,null,String(o))}function Zn(o){return o.el===null||o.memo?o:hi(o)}function Tn(o,c){var v=0,{shapeFlag:E}=o;if(c==null)c=null;else if(f.isArray(c))v=16;else if(typeof c=="object")if(E&(1|64)){var C=c.default;C&&(C._c&&(C._d=!1),Tn(o,C()),C._c&&(C._d=!0));return}else{v=32;var T=c._;!T&&!(On in c)?c._ctx=Sn:T===3&&Sn&&(Sn.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else f.isFunction(c)?(c={default:c,_ctx:Sn},v=32):(c=String(c),E&64?(v=16,c=[gr(c)]):v=8);o.children=c,o.shapeFlag|=v}function bo(){for(var o={},c=0;c<arguments.length;c++){var v=c<0||arguments.length<=c?void 0:arguments[c];for(var E in v)if(E==="class")o.class!==v.class&&(o.class=f.normalizeClass([o.class,v.class]));else if(E==="style")o.style=f.normalizeStyle([o.style,v.style]);else if(f.isOn(E)){var C=o[E],T=v[E];T&&C!==T&&!(f.isArray(C)&&C.includes(T))&&(o[E]=C?[].concat(C,T):T)}else E!==""&&(o[E]=v[E])}return o}function Tr(o,c,v){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Q(o,c,7,[v,E])}function Fr(o,c,v,E){var C,T=v&&v[E];if(f.isArray(o)||f.isString(o)){C=new Array(o.length);for(var F=0,Y=o.length;F<Y;F++)C[F]=c(o[F],F,void 0,T&&T[F])}else if(typeof o=="number"){C=new Array(o);for(var G=0;G<o;G++)C[G]=c(G+1,G,void 0,T&&T[G])}else if(f.isObject(o))if(o[Symbol.iterator])C=Array.from(o,(Je,Ge)=>c(Je,Ge,void 0,T&&T[Ge]));else{var oe=Object.keys(o);C=new Array(oe.length);for(var Be=0,ct=oe.length;Be<ct;Be++){var ae=oe[Be];C[Be]=c(o[ae],ae,Be,T&&T[Be])}}else C=[];return v&&(v[E]=C),C}function Ua(o,c){for(var v=0;v<c.length;v++){var E=c[v];if(f.isArray(E))for(var C=0;C<E.length;C++)o[E[C].name]=E[C].fn;else E&&(o[E.name]=E.fn)}return o}function aa(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},E=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0;if(Sn.isCE||Sn.parent&&Gr(Sn.parent)&&Sn.parent.isCE)return Et("slot",c==="default"?null:{name:c},E&&E());var T=o[c];T&&T._c&&(T._d=!1),Ke();var F=T&&Yo(T(v)),Y=cn(ie,{key:v.key||"_".concat(c)},F||(E?E():[]),F&&o._===1?64:-2);return!C&&Y.scopeId&&(Y.slotScopeIds=[Y.scopeId+"-s"]),T&&T._c&&(T._d=!0),Y}function Yo(o){return o.some(c=>vt(c)?!(c.type===me||c.type===ie&&!Yo(c.children)):!0)?o:null}function gi(o){var c={};for(var v in o)c[f.toHandlerKey(v)]=o[v];return c}var zi=o=>o?Wi(o)?At(o)||o.proxy:zi(o.parent):null,pi=f.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>o.props,$attrs:o=>o.attrs,$slots:o=>o.slots,$refs:o=>o.refs,$parent:o=>zi(o.parent),$root:o=>zi(o.root),$emit:o=>o.emit,$options:o=>ve(o),$forceUpdate:o=>()=>sn(o.update),$nextTick:o=>_t.bind(o.proxy),$watch:o=>Qr.bind(o)}),qo={get(o,c){var{_:v}=o,{ctx:E,setupState:C,data:T,props:F,accessCache:Y,type:G,appContext:oe}=v,Be;if(c[0]!=="$"){var ct=Y[c];if(ct!==void 0)switch(ct){case 1:return C[c];case 2:return T[c];case 4:return E[c];case 3:return F[c]}else{if(C!==f.EMPTY_OBJ&&f.hasOwn(C,c))return Y[c]=1,C[c];if(T!==f.EMPTY_OBJ&&f.hasOwn(T,c))return Y[c]=2,T[c];if((Be=v.propsOptions[0])&&f.hasOwn(Be,c))return Y[c]=3,F[c];if(E!==f.EMPTY_OBJ&&f.hasOwn(E,c))return Y[c]=4,E[c];ce&&(Y[c]=0)}}var ae=pi[c],Je,Ge;if(ae)return c==="$attrs"&&P.track(v,"get",c),ae(v);if((Je=G.__cssModules)&&(Je=Je[c]))return Je;if(E!==f.EMPTY_OBJ&&f.hasOwn(E,c))return Y[c]=4,E[c];if(Ge=oe.config.globalProperties,f.hasOwn(Ge,c))return Ge[c]},set(o,c,v){var{_:E}=o,{data:C,setupState:T,ctx:F}=E;return T!==f.EMPTY_OBJ&&f.hasOwn(T,c)?(T[c]=v,!0):C!==f.EMPTY_OBJ&&f.hasOwn(C,c)?(C[c]=v,!0):f.hasOwn(E.props,c)||c[0]==="$"&&c.slice(1)in E?!1:(F[c]=v,!0)},has(o,c){var{_:{data:v,setupState:E,accessCache:C,ctx:T,appContext:F,propsOptions:Y}}=o,G;return!!C[c]||v!==f.EMPTY_OBJ&&f.hasOwn(v,c)||E!==f.EMPTY_OBJ&&f.hasOwn(E,c)||(G=Y[0])&&f.hasOwn(G,c)||f.hasOwn(T,c)||f.hasOwn(pi,c)||f.hasOwn(F.config.globalProperties,c)},defineProperty(o,c,v){return v.get!=null?o._.accessCache[c]=0:f.hasOwn(v,"value")&&this.set(o,c,v.value,null),Reflect.defineProperty(o,c,v)}},Ta=f.extend({},qo,{get(o,c){if(c!==Symbol.unscopables)return qo.get(o,c,o)},has(o,c){var v=c[0]!=="_"&&!f.isGloballyWhitelisted(c);return v}}),vi=Ni(),as=0;function sa(o,c,v){var E=o.type,C=(c?c.appContext:o.appContext)||vi,T={uid:as++,vnode:o,type:E,parent:c,appContext:C,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(C.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ba(E,C),emitsOptions:Oo(E,C),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:E.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:v,suspenseId:v?v.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return T.ctx={_:T},T.root=c?c.root:T,T.emit=Lo.bind(null,T),o.ce&&o.ce(T),T}var Dn=null,un=()=>Dn||Sn,pr=o=>{Dn=o,o.scope.on()},Pr=()=>{Dn&&Dn.scope.off(),Dn=null};function Wi(o){return o.vnode.shapeFlag&4}I.isInSSRComponentSetup=!1;function Ha(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;I.isInSSRComponentSetup=c;var{props:v,children:E}=o.vnode,C=Wi(o);ma(o,v,C,c),Fa(o,E);var T=C?Pa(o,c):void 0;return I.isInSSRComponentSetup=!1,T}function Pa(o,c){var v=o.type;o.accessCache=Object.create(null),o.proxy=P.markRaw(new Proxy(o.ctx,qo));var{setup:E}=v;if(E){var C=o.setupContext=E.length>1?Ne(o):null;pr(o),P.pauseTracking();var T=ne(E,o,0,[o.props,C]);if(P.resetTracking(),Pr(),f.isPromise(T)){if(T.then(Pr,Pr),c)return T.then(F=>{Ko(o,F,c)}).catch(F=>{En(F,o,0)});o.asyncDep=T}else Ko(o,T,c)}else Ia(o,c)}function Ko(o,c,v){f.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:f.isObject(c)&&(o.setupState=P.proxyRefs(c)),Ia(o,v)}var io,Lt;function Eo(o){io=o,Lt=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,Ta))}}var ss=()=>!io;function Ia(o,c,v){var E=o.type;if(!o.render){if(!c&&io&&!E.render){var C=E.template;if(C){var{isCustomElement:T,compilerOptions:F}=o.appContext.config,{delimiters:Y,compilerOptions:G}=E,oe=f.extend(f.extend({isCustomElement:T,delimiters:Y},F),G);E.render=io(C,oe)}}o.render=E.render||f.NOOP,Lt&&Lt(o)}pr(o),P.pauseTracking(),ze(o),P.resetTracking(),Pr()}function Cs(o){return new Proxy(o.attrs,{get(c,v){return P.track(o,"get","$attrs"),c[v]}})}function Ne(o){var c=E=>{o.exposed=E||{}},v;return{get attrs(){return v||(v=Cs(o))},slots:o.slots,emit:o.emit,expose:c}}function At(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(o.exposed)),{get(c,v){if(v in c)return c[v];if(v in pi)return pi[v](o)}}))}var Pt=/(?:^|[-_])(\w)/g,Pn=o=>o.replace(Pt,c=>c.toUpperCase()).replace(/[-_]/g,"");function Xn(o){return f.isFunction(o)&&o.displayName||o.name}function Ir(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=Xn(c);if(!E&&c.__file){var C=c.__file.match(/([^/\\]+)\.\w+$/);C&&(E=C[1])}if(!E&&o&&o.parent){var T=F=>{for(var Y in F)if(F[Y]===c)return Y};E=T(o.components||o.parent.type.components)||T(o.appContext.components)}return E?Pn(E):v?"App":"Anonymous"}function Gi(o){return f.isFunction(o)&&"__vccOpts"in o}var Yi=(o,c)=>P.computed(o,c,I.isInSSRComponentSetup);function yo(){return null}function Jo(){return null}function ja(o){}function Xs(o,c){return null}function la(){return Qs().slots}function Os(){return Qs().attrs}function Qs(){var o=un();return o.setupContext||(o.setupContext=Ne(o))}function ls(o,c){var v=f.isArray(o)?o.reduce((T,F)=>(T[F]={},T),{}):o;for(var E in c){var C=v[E];C?f.isArray(C)||f.isFunction(C)?v[E]={type:C,default:c[E]}:C.default=c[E]:C===null&&(v[E]={default:c[E]})}return v}function el(o,c){var v={},E=function(T){c.includes(T)||Object.defineProperty(v,T,{enumerable:!0,get:()=>o[T]})};for(var C in o)E(C);return v}function tl(o){var c=un(),v=o();return Pr(),f.isPromise(v)&&(v=v.catch(E=>{throw pr(c),E})),[v,()=>pr(c)]}function nl(o,c,v){var E=arguments.length;return E===2?f.isObject(c)&&!f.isArray(c)?vt(c)?Et(o,null,[c]):Et(o,c):Et(o,null,c):(E>3?v=Array.prototype.slice.call(arguments,2):E===3&&vt(v)&&(v=[v]),Et(o,c,v))}var za=Symbol(""),Wa=()=>{{var o=Ai(za);return o||vn("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function jl(){}function rl(o,c,v,E){var C=v[E];if(C&&il(C,o))return C;var T=c();return T.memo=o.slice(),v[E]=T}function il(o,c){var v=o.memo;if(v.length!=c.length)return!1;for(var E=0;E<v.length;E++)if(v[E]!==c[E])return!1;return jt>0&&Ae&&Ae.push(o),!0}var oo="3.2.33",Na=null,Ga=null,Ya={insert:(o,c,v)=>v?c.insertBefore(o,v):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>s.createElement(o),createText:o=>s.createText(o),createComment:o=>s.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function ca(o){return Object.keys(o)}function ka(o){var c={};return f.isArray(o)&&o.forEach(v=>{ca(v).forEach(E=>{var C=v[E],T=c[E]||(c[E]={});ca(C).forEach(F=>{var Y=C[F],G=T[F]||(T[F]={});ca(Y).forEach(oe=>{oe[0]==="!"?(G[oe]=Y[oe],delete G[oe.slice(1)]):f.hasOwn(G,"!"+oe)||(G[oe]=Y[oe])})})})}),c}function Ra(o,c){var v=c&&c.classList;return v&&v.includes(o)}var Ts=/[+~> ]$/,qa="parentNode",cs="previousSibling";function us(o,c){for(var v=o.split("."),E=v.length-1;E>0;E--){var C=v[E],T=C[C.length-1],F=C.replace(Ts,"");if(T==="~"||T===" "){for(var Y=T==="~"?cs:qa;c&&(c=c[Y],!Ra(F,c)););if(!c)return!1}else if(T===">"?c=c&&c[qa]:T==="+"&&(c=c&&c[cs]),!Ra(F,c))return!1}return!0}var ol=1e3;function Ka(o,c,v){var{styles:E,weights:C}=o;ca(c).forEach(T=>{if(!(T&&v&&!us(T,v))){var F=T.split(".").length,Y=c[T];ca(Y).forEach(G=>{var oe=Y[G],Be=G[0]==="!";Be&&(G=G.slice(1));var ct=C[G]||0,ae=F+(Be?ol:0);ae>=ct&&(C[G]=ae,E[G]=oe)})}})}function ri(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E={styles:{},weights:{}};return o.forEach(C=>{var T=c[C];T&&Ka(E,T,v)}),E.styles}function ao(o){return ri(o.classList,o.styleSheet,o)}function Ps(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return ri(o,al(c),v)}function al(o){var{type:c,appContext:v}=o,E=c;if(!E.__styles)if(v&&f.isArray(v.provides.__globalStyles)&&(v.provides.__globalStyles=ka(v.provides.__globalStyles)),E.mpType==="page"&&v)E.__styles=v.provides.__globalStyles;else{var C=[];v&&C.push(v.provides.__globalStyles),f.isArray(E.styles)&&E.styles.forEach(T=>C.push(T)),E.__styles=ka(C)}return E.__styles}function sl(o,c,v){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;E&&([c,v]=wo(o,c,v,E)),o.setAttr(c,v)}var fs="hoverClass",ll="placeholderClass",Is="placeholderStyle",cl="indicatorClass",zl="indicatorStyle",ul="maskClass",Ja="maskStyle",Ns={view:{class:[fs],style:[]},button:{class:[fs],style:[]},navigator:{class:[fs],style:[]},"u-input":{class:[ll],style:[Is]},"u-textarea":{class:[ll],style:[Is]},"picker-view":{class:[cl,ul],style:[zl,Ja]}};function wo(o,c,v,E){if(!v)return[c,v];var C=Ns[o.type];if(C){var T=f.camelize(c);if(C.class.indexOf(T)>-1)return[T,Ps([v],E,o)];if(C.style.indexOf(c)>-1)return f.isString(v)?[T,f.parseStringStyle(v)]:[T,f.normalizeStyle(v)]}return[c,v]}function xa(o,c,v){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!E){var C=v?v.split(" "):[];o.setClassList(C),o.setStyleSheet(al(E))}}function ds(o,c,v,E){o.addEvent(c,v)}function fl(o,c){o.removeEvent(c)}function Wl(o,c,v,E){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=o._vei||(o._vei={}),F=T[c];if(E&&F)F.value=E;else{var[Y,G]=ks(c);if(E){var oe=T[c]=dl(E,C);ds(o,Y,oe)}else F&&(fl(o,Y),T[c]=void 0)}}var Zo=/(?:Once|Passive|Capture)$/;function ks(o){var c;if(Zo.test(o)){c={};for(var v;v=o.match(Zo);)o=o.slice(0,o.length-v[0].length),c[v[0].toLowerCase()]=!0}return[f.hyphenate(o.slice(2)),c]}function dl(o,c){var v=C=>{Q(v.value,c,5,[C])};v.value=o;var E=new Set;return f.isArray(v.value)?v.value.forEach(C=>{C.modifiers&&C.modifiers.forEach(T=>{E.add(T)})}):(v.value.modifiers&&v.value.modifiers.forEach(C=>{E.add(C)}),hl(v,c)),v.modifiers=[...E],v}function hl(o,c){if(!!c){var{$wxsModules:v}=c;if(!!v){var E=o.value.toString();!v.find(C=>E.indexOf("."+C+".")>-1)||(o.wxsEvent=o.value())}}}function Rs(o,c,v){if(!!v){f.isString(v)&&(v=f.parseStringStyle(v));var E={},C=c&&!f.isString(c);if(C){for(var T in c)v[T]==null&&(E[f.camelize(T)]="");for(var F in v){var Y=v[F];Y!==c[F]&&(E[f.camelize(F)]=Y)}}else for(var G in v)E[f.camelize(G)]=v[G];o.setStyles(E)}}var ko=["u-input","u-textarea"],ua=function(o,c,v,E){var C=arguments.length>6?arguments[6]:void 0;c==="class"?xa(o,v,E,C):c==="style"?Rs(o,v,E):f.isOn(c)?f.isModelListener(c)||Wl(o,c,v,E,C):c==="modelValue"&&ko.includes(o.type)?o.setAttrs({modelValue:E,value:E}):sl(o,c,E,C)};function gl(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=un();if(!c)return f.EMPTY_OBJ;var v=c.type.__cssModules;if(!v)return f.EMPTY_OBJ;var E=v[o];return E||f.EMPTY_OBJ}}function Gl(o){var c=un();if(!!c){var v=()=>hs(c.subTree,o(c.proxy));Hi(()=>ci(v,{flush:"post"})),ui(v)}}function hs(o,c){if(o.shapeFlag&128){var v=o.suspense;o=v.activeBranch,v.pendingBranch&&!v.isHydrating&&v.effects.push(()=>{hs(v.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var E=o.el.style;for(var C in c)E.setProperty("--".concat(C),c[C])}else o.type===ie&&o.children.forEach(T=>hs(T,c))}var pl=["ctrl","shift","alt","meta"],vl={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>pl.some(v=>o["".concat(v,"Key")]&&!c.includes(v))},ml=(o,c)=>function(v){for(var E=0;E<c.length;E++){var C=vl[c[E]];if(C&&C(v,c))return}for(var T=arguments.length,F=new Array(T>1?T-1:0),Y=1;Y<T;Y++)F[Y-1]=arguments[Y];return o(v,...F)},_l=(o,c)=>v=>{if("key"in v){var E=f.hyphenate(v.key);if(c.some(C=>C===E))return o(v)}},bl=f.extend({patchProp:ua},Ya),xs;function El(){return xs||(xs=or(bl))}var Yl=function(){El().render(...arguments)},ql=function(){var o=El().createApp(...arguments),{mount:c}=o;return o.mount=v=>c(v),o};return Object.defineProperty(I,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(I,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(I,"hyphenate",{enumerable:!0,get:function(){return f.hyphenate}}),Object.defineProperty(I,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(I,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(I,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(I,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(I,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(I,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(I,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(I,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(I,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(I,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(I,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(I,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(I,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(I,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(I,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(I,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(I,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(I,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(I,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(I,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(I,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(I,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(I,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(I,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(I,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(I,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(I,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(I,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(I,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(I,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(I,"unref",{enumerable:!0,get:function(){return P.unref}}),I.BaseTransition=Fo,I.Comment=me,I.Fragment=ie,I.KeepAlive=Vo,I.Static=be,I.Suspense=Zr,I.Teleport=As,I.Text=se,I.callWithAsyncErrorHandling=Q,I.callWithErrorHandling=ne,I.cloneVNode=hi,I.compatUtils=Ga,I.computed=Yi,I.createApp=ql,I.createBlock=cn,I.createCommentVNode=oa,I.createElementBlock=xt,I.createElementVNode=gn,I.createHydrationRenderer=mo,I.createPropsRestProxy=el,I.createRenderer=or,I.createSlots=Ua,I.createStaticVNode=Go,I.createTextVNode=gr,I.createVNode=Et,I.defineAsyncComponent=$i,I.defineComponent=Wn,I.defineEmits=Jo,I.defineExpose=ja,I.defineProps=yo,I.getCurrentInstance=un,I.getTransitionRawChildren=Un,I.guardReactiveProps=ia,I.h=nl,I.handleError=En,I.initCustomFormatter=jl,I.inject=Ai,I.injectHook=Ti,I.isMemoSame=il,I.isRuntimeOnly=ss,I.isVNode=vt,I.mergeDefaults=ls,I.mergeProps=bo,I.nextTick=_t,I.onActivated=Ui,I.onBeforeMount=Lr,I.onBeforeUnmount=fi,I.onBeforeUpdate=Yr,I.onDeactivated=fr,I.onErrorCaptured=ee,I.onMounted=Hi,I.onRenderTracked=B,I.onRenderTriggered=Io,I.onServerPrefetch=Pi,I.onUnmounted=di,I.onUpdated=ui,I.openBlock=Ke,I.parseClassList=Ps,I.parseClassStyles=ao,I.popScopeId=wi,I.provide=Br,I.pushScopeId=Zi,I.queuePostFlushCb=Mi,I.registerRuntimeCompiler=Eo,I.render=Yl,I.renderList=Fr,I.renderSlot=aa,I.resolveComponent=m,I.resolveDirective=U,I.resolveDynamicComponent=j,I.resolveFilter=Na,I.resolveTransitionHooks=Ci,I.setBlockTracking=ut,I.setDevtoolsHook=Di,I.setTransitionHooks=Jt,I.ssrContextKey=za,I.toHandlers=gi,I.transformVNodeArgs=Dt,I.useAttrs=Os,I.useCssModule=gl,I.useCssStyles=ka,I.useCssVars=Gl,I.useSSRContext=Wa,I.useSlots=la,I.useTransitionState=Dr,I.version=oo,I.warn=vn,I.watch=Bt,I.watchEffect=ci,I.watchPostEffect=Kn,I.watchSyncEffect=Mr,I.withAsyncContext=tl,I.withCtx=Si,I.withDefaults=Xs,I.withDirectives=Ss,I.withKeys=_l,I.withMemo=rl,I.withModifiers=ml,I.withScopeId=Xi,Object.defineProperty(I,"__esModule",{value:!0}),I}({},A,k,_);return y.__TYPE__="nvue",y}var np=aP(fP);var uc={};tP(uc,{EMPTY_ARR:()=>AP,EMPTY_OBJ:()=>SP,NO:()=>OP,NOOP:()=>CP,camelize:()=>VP,capitalize:()=>Qc,def:()=>zP,extend:()=>Kr,getGlobalThis:()=>GP,hasChanged:()=>HP,hasOwn:()=>zs,hyphenate:()=>Xu,invokeArrayFns:()=>jP,isArray:()=>bi,isBuiltInDirective:()=>LP,isFunction:()=>Fn,isGloballyWhitelisted:()=>gP,isHTMLTag:()=>EP,isIntegerKey:()=>MP,isMap:()=>op,isModelListener:()=>IP,isObject:()=>Vl,isOn:()=>PP,isPlainObject:()=>$l,isPromise:()=>xP,isReservedProp:()=>DP,isSVGTag:()=>yP,isSet:()=>ap,isString:()=>Ei,isSymbol:()=>RP,makeMap:()=>Fl,normalizeClass:()=>Zu,normalizeProps:()=>mP,normalizeStyle:()=>Ju,parseStringStyle:()=>rp,remove:()=>NP,toDisplayString:()=>wP,toHandlerKey:()=>UP,toNumber:()=>WP,toRawType:()=>BP,toTypeString:()=>ns});function Fl(p,s){let _=Object.create(null),A=p.split(",");for(let k=0;k<A.length;k++)_[A[k]]=!0;return s?k=>!!_[k.toLowerCase()]:k=>!!_[k]}var hP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",gP=Fl(hP);function Ju(p){if(bi(p)){let s={};for(let _=0;_<p.length;_++){let A=p[_],k=Ei(A)?rp(A):Ju(A);if(k)for(let y in k)s[y]=k[y]}return s}else{if(Ei(p))return p;if(Vl(p))return p}}var pP=/;(?![^(]*\))/g,vP=/:(.+)/;function rp(p){let s={};return p.split(pP).forEach(_=>{if(_){let A=_.split(vP);A.length>1&&(s[A[0].trim()]=A[1].trim())}}),s}function Zu(p){let s="";if(Ei(p))s=p;else if(bi(p))for(let _=0;_<p.length;_++){let A=Zu(p[_]);A&&(s+=A+" ")}else if(Vl(p))for(let _ in p)p[_]&&(s+=_+" ");return s.trim()}function mP(p){if(!p)return null;let{class:s,style:_}=p;return s&&!Ei(s)&&(p.class=Zu(s)),_&&(p.style=Ju(_)),p}var _P="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",bP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",EP=Fl(_P),yP=Fl(bP),wP=p=>Ei(p)?p:p==null?"":bi(p)||Vl(p)&&(p.toString===sp||!Fn(p.toString))?JSON.stringify(p,ip,2):String(p),ip=(p,s)=>s&&s.__v_isRef?ip(p,s.value):op(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((_,[A,k])=>(_[`${A} =>`]=k,_),{})}:ap(s)?{[`Set(${s.size})`]:[...s.values()]}:Vl(s)&&!bi(s)&&!$l(s)?String(s):s,SP={},AP=[],CP=()=>{},OP=()=>!1,TP=/^on[^a-z]/,PP=p=>TP.test(p),IP=p=>p.startsWith("onUpdate:"),Kr=Object.assign,NP=(p,s)=>{let _=p.indexOf(s);_>-1&&p.splice(_,1)},kP=Object.prototype.hasOwnProperty,zs=(p,s)=>kP.call(p,s),bi=Array.isArray,op=p=>ns(p)==="[object Map]",ap=p=>ns(p)==="[object Set]",Fn=p=>typeof p=="function",Ei=p=>typeof p=="string",RP=p=>typeof p=="symbol",Vl=p=>p!==null&&typeof p=="object",xP=p=>Vl(p)&&Fn(p.then)&&Fn(p.catch),sp=Object.prototype.toString,ns=p=>sp.call(p),BP=p=>ns(p).slice(8,-1),$l=p=>ns(p)==="[object Object]",MP=p=>Ei(p)&&p!=="NaN"&&p[0]!=="-"&&""+parseInt(p,10)===p,DP=Fl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),LP=Fl("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Xc=p=>{let s=Object.create(null);return _=>s[_]||(s[_]=p(_))},FP=/-(\w)/g,VP=Xc(p=>p.replace(FP,(s,_)=>_?_.toUpperCase():"")),$P=/\B([A-Z])/g,Xu=Xc(p=>p.replace($P,"-$1").toLowerCase()),Qc=Xc(p=>p.charAt(0).toUpperCase()+p.slice(1)),UP=Xc(p=>p?`on${Qc(p)}`:""),HP=(p,s)=>!Object.is(p,s),jP=(p,s)=>{for(let _=0;_<p.length;_++)p[_](s)},zP=(p,s,_)=>{Object.defineProperty(p,s,{configurable:!0,enumerable:!1,value:_})},WP=p=>{let s=parseFloat(p);return isNaN(s)?p:s},lp,GP=()=>lp||(lp=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function cp(p){var s=function(_,A){"use strict";function k(B,...ee){console.warn(`[Vue warn] ${B}`,...ee)}let y;class I{constructor(ee=!1){this.active=!0,this.effects=[],this.cleanups=[],!ee&&y&&(this.parent=y,this.index=(y.scopes||(y.scopes=[])).push(this)-1)}run(ee){if(this.active){let ce=y;try{return y=this,ee()}finally{y=ce}}}on(){y=this}off(){y=this.parent}stop(ee){if(this.active){let ce,ze;for(ce=0,ze=this.effects.length;ce<ze;ce++)this.effects[ce].stop();for(ce=0,ze=this.cleanups.length;ce<ze;ce++)this.cleanups[ce]();if(this.scopes)for(ce=0,ze=this.scopes.length;ce<ze;ce++)this.scopes[ce].stop(!0);if(this.parent&&!ee){let z=this.parent.scopes.pop();z&&z!==this&&(this.parent.scopes[this.index]=z,z.index=this.index)}this.active=!1}}}function f(B){return new I(B)}function P(B,ee=y){ee&&ee.active&&ee.effects.push(B)}function Ue(){return y}function Rt(B){y&&y.cleanups.push(B)}let vn=B=>{let ee=new Set(B);return ee.w=0,ee.n=0,ee},x=B=>(B.w&Q)>0,Mt=B=>(B.n&Q)>0,jn=({deps:B})=>{if(B.length)for(let ee=0;ee<B.length;ee++)B[ee].w|=Q},In=B=>{let{deps:ee}=B;if(ee.length){let ce=0;for(let ze=0;ze<ee.length;ze++){let z=ee[ze];x(z)&&!Mt(z)?z.delete(B):ee[ce++]=z,z.w&=~Q,z.n&=~Q}ee.length=ce}},ft=new WeakMap,ne=0,Q=1,En=30,yn,an=Symbol(""),Vn=Symbol("");class nn{constructor(ee,ce=null,ze){this.fn=ee,this.scheduler=ce,this.active=!0,this.deps=[],this.parent=void 0,P(this,ze)}run(){if(!this.active)return this.fn();let ee=yn,ce=rn;for(;ee;){if(ee===this)return;ee=ee.parent}try{return this.parent=yn,yn=this,rn=!0,Q=1<<++ne,ne<=En?jn(this):xn(this),this.fn()}finally{ne<=En&&In(this),Q=1<<--ne,yn=this.parent,rn=ce,this.parent=void 0,this.deferStop&&this.stop()}}stop(){yn===this?this.deferStop=!0:this.active&&(xn(this),this.onStop&&this.onStop(),this.active=!1)}}function xn(B){let{deps:ee}=B;if(ee.length){for(let ce=0;ce<ee.length;ce++)ee[ce].delete(B);ee.length=0}}function $n(B,ee){B.effect&&(B=B.effect.fn);let ce=new nn(B);ee&&(A.extend(ce,ee),ee.scope&&P(ce,ee.scope)),(!ee||!ee.lazy)&&ce.run();let ze=ce.run.bind(ce);return ze.effect=ce,ze}function mn(B){B.effect.stop()}let rn=!0,_n=[];function Bn(){_n.push(rn),rn=!1}function Rr(){_n.push(rn),rn=!0}function Jr(){let B=_n.pop();rn=B===void 0?!0:B}function $e(B,ee,ce){if(rn&&yn){let ze=ft.get(B);ze||ft.set(B,ze=new Map);let z=ze.get(ce);z||ze.set(ce,z=vn()),st(z,void 0)}}function st(B,ee){let ce=!1;ne<=En?Mt(B)||(B.n|=Q,ce=!x(B)):ce=!B.has(yn),ce&&(B.add(yn),yn.deps.push(B))}function _t(B,ee,ce,ze,z,$){let Z=ft.get(B);if(!Z)return;let ve=[];if(ee==="clear")ve=[...Z.values()];else if(ce==="length"&&A.isArray(B))Z.forEach((at,Cn)=>{(Cn==="length"||Cn>=ze)&&ve.push(at)});else switch(ce!==void 0&&ve.push(Z.get(ce)),ee){case"add":A.isArray(B)?A.isIntegerKey(ce)&&ve.push(Z.get("length")):(ve.push(Z.get(an)),A.isMap(B)&&ve.push(Z.get(Vn)));break;case"delete":A.isArray(B)||(ve.push(Z.get(an)),A.isMap(B)&&ve.push(Z.get(Vn)));break;case"set":A.isMap(B)&&ve.push(Z.get(an));break}let pe=void 0;if(ve.length===1)ve[0]&&qt(ve[0]);else{let at=[];for(let Cn of ve)Cn&&at.push(...Cn);qt(vn(at))}}function qt(B,ee){for(let ce of A.isArray(B)?B:[...B])(ce!==yn||ce.allowRecurse)&&(ce.scheduler?ce.scheduler():ce.run())}let sn=A.makeMap("__proto__,__v_isRef,__isVue"),on=new Set(Object.getOwnPropertyNames(Symbol).map(B=>Symbol[B]).filter(A.isSymbol)),lr=_r(),cr=_r(!1,!0),Bi=_r(!0),Mi=_r(!0,!0),Mn=Hr();function Hr(){let B={};return["includes","indexOf","lastIndexOf"].forEach(ee=>{B[ee]=function(...ce){let ze=Wt(this);for(let $=0,Z=this.length;$<Z;$++)$e(ze,"get",$+"");let z=ze[ee](...ce);return z===-1||z===!1?ze[ee](...ce.map(Wt)):z}}),["push","pop","shift","unshift","splice"].forEach(ee=>{B[ee]=function(...ce){Bn();let ze=Wt(this)[ee].apply(this,ce);return Jr(),ze}}),B}function _r(B=!1,ee=!1){return function(ze,z,$){if(z==="__v_isReactive")return!B;if(z==="__v_isReadonly")return B;if(z==="__v_isShallow")return ee;if(z==="__v_raw"&&$===(B?ee?Kn:ci:ee?Ai:Br).get(ze))return ze;let Z=A.isArray(ze);if(!B&&Z&&A.hasOwn(Mn,z))return Reflect.get(Mn,z,$);let ve=Reflect.get(ze,z,$);return(A.isSymbol(z)?on.has(z):sn(z))||(B||$e(ze,"get",z),ee)?ve:Wn(ve)?!Z||!A.isIntegerKey(z)?ve.value:ve:A.isObject(ve)?B?Qr(ve):Bt(ve):ve}}let yi=Di(),Ji=Di(!0);function Di(B=!1){return function(ce,ze,z,$){let Z=ce[ze];if(Nn(Z)&&Wn(Z)&&!Wn(z))return!1;if(!B&&!Nn(z)&&(Qn(z)||(z=Wt(z),Z=Wt(Z)),!A.isArray(ce)&&Wn(Z)&&!Wn(z)))return Z.value=z,!0;let ve=A.isArray(ce)&&A.isIntegerKey(ze)?Number(ze)<ce.length:A.hasOwn(ce,ze),pe=Reflect.set(ce,ze,z,$);return ce===Wt($)&&(ve?A.hasChanged(z,Z)&&_t(ce,"set",ze,z,Z):_t(ce,"add",ze,z)),pe}}function Lo(B,ee){let ce=A.hasOwn(B,ee),ze=B[ee],z=Reflect.deleteProperty(B,ee);return z&&ce&&_t(B,"delete",ee,void 0,ze),z}function Oo(B,ee){let ce=Reflect.has(B,ee);return(!A.isSymbol(ee)||!on.has(ee))&&$e(B,"has",ee),ce}function br(B){return $e(B,"iterate",A.isArray(B)?"length":an),Reflect.ownKeys(B)}let Sn={get:lr,set:yi,deleteProperty:Lo,has:Oo,ownKeys:br},An={get:Bi,set(B,ee){return!0},deleteProperty(B,ee){return!0}},ai=A.extend({},Sn,{get:cr,set:Ji}),Zi=A.extend({},An,{get:Mi}),wi=B=>B,Xi=B=>Reflect.getPrototypeOf(B);function Si(B,ee,ce=!1,ze=!1){B=B.__v_raw;let z=Wt(B),$=Wt(ee);ee!==$&&!ce&&$e(z,"get",ee),!ce&&$e(z,"get",$);let{has:Z}=Xi(z),ve=ze?wi:ce?Vi:Cr;if(Z.call(z,ee))return ve(B.get(ee));if(Z.call(z,$))return ve(B.get($));B!==z&&B.get(ee)}function ur(B,ee=!1){let ce=this.__v_raw,ze=Wt(ce),z=Wt(B);return B!==z&&!ee&&$e(ze,"has",B),!ee&&$e(ze,"has",z),B===z?ce.has(B):ce.has(B)||ce.has(z)}function jr(B,ee=!1){return B=B.__v_raw,!ee&&$e(Wt(B),"iterate",an),Reflect.get(B,"size",B)}function zr(B){B=Wt(B);let ee=Wt(this);return Xi(ee).has.call(ee,B)||(ee.add(B),_t(ee,"add",B,B)),this}function Er(B,ee){ee=Wt(ee);let ce=Wt(this),{has:ze,get:z}=Xi(ce),$=ze.call(ce,B);$||(B=Wt(B),$=ze.call(ce,B));let Z=z.call(ce,B);return ce.set(B,ee),$?A.hasChanged(ee,Z)&&_t(ce,"set",B,ee,Z):_t(ce,"add",B,ee),this}function To(B){let ee=Wt(this),{has:ce,get:ze}=Xi(ee),z=ce.call(ee,B);z||(B=Wt(B),z=ce.call(ee,B));let $=ze?ze.call(ee,B):void 0,Z=ee.delete(B);return z&&_t(ee,"delete",B,void 0,$),Z}function Po(){let B=Wt(this),ee=B.size!==0,ce=void 0,ze=B.clear();return ee&&_t(B,"clear",void 0,void 0,ce),ze}function Li(B,ee){return function(ze,z){let $=this,Z=$.__v_raw,ve=Wt(Z),pe=ee?wi:B?Vi:Cr;return!B&&$e(ve,"iterate",an),Z.forEach((at,Cn)=>ze.call(z,pe(at),pe(Cn),$))}}function xr(B,ee,ce){return function(...ze){let z=this.__v_raw,$=Wt(z),Z=A.isMap($),ve=B==="entries"||B===Symbol.iterator&&Z,pe=B==="keys"&&Z,at=z[B](...ze),Cn=ce?wi:ee?Vi:Cr;return!ee&&$e($,"iterate",pe?Vn:an),{next(){let{value:Jn,done:ei}=at.next();return ei?{value:Jn,done:ei}:{value:ve?[Cn(Jn[0]),Cn(Jn[1])]:Cn(Jn),done:ei}},[Symbol.iterator](){return this}}}}function qn(B){return function(...ee){return B==="delete"?!1:this}}function uo(){let B={get($){return Si(this,$)},get size(){return jr(this)},has:ur,add:zr,set:Er,delete:To,clear:Po,forEach:Li(!1,!1)},ee={get($){return Si(this,$,!1,!0)},get size(){return jr(this)},has:ur,add:zr,set:Er,delete:To,clear:Po,forEach:Li(!1,!0)},ce={get($){return Si(this,$,!0)},get size(){return jr(this,!0)},has($){return ur.call(this,$,!0)},add:qn("add"),set:qn("set"),delete:qn("delete"),clear:qn("clear"),forEach:Li(!0,!1)},ze={get($){return Si(this,$,!0,!0)},get size(){return jr(this,!0)},has($){return ur.call(this,$,!0)},add:qn("add"),set:qn("set"),delete:qn("delete"),clear:qn("clear"),forEach:Li(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach($=>{B[$]=xr($,!1,!1),ce[$]=xr($,!0,!1),ee[$]=xr($,!1,!0),ze[$]=xr($,!0,!0)}),[B,ce,ee,ze]}let[Zr,zn,Wr,Qi]=uo();function Xr(B,ee){let ce=ee?B?Qi:Wr:B?zn:Zr;return(ze,z,$)=>z==="__v_isReactive"?!B:z==="__v_isReadonly"?B:z==="__v_raw"?ze:Reflect.get(A.hasOwn(ce,z)&&z in ze?ce:ze,z,$)}let si={get:Xr(!1,!1)},fo={get:Xr(!1,!0)},ho={get:Xr(!0,!1)},go={get:Xr(!0,!0)};function li(B,ee,ce){let ze=Wt(ce);if(ze!==ce&&ee.call(B,ze)){let z=A.toRawType(B);console.warn(`Reactive ${z} contains both the raw and reactive versions of the same object${z==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Br=new WeakMap,Ai=new WeakMap,ci=new WeakMap,Kn=new WeakMap;function Mr(B){switch(B){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Fi(B){return B.__v_skip||!Object.isExtensible(B)?0:Mr(A.toRawType(B))}function Bt(B){return Nn(B)?B:yr(B,!1,Sn,si,Br)}function we(B){return yr(B,!1,ai,fo,Ai)}function Qr(B){return yr(B,!0,An,ho,ci)}function po(B){return yr(B,!0,Zi,go,Kn)}function yr(B,ee,ce,ze,z){if(!A.isObject(B)||B.__v_raw&&!(ee&&B.__v_isReactive))return B;let $=z.get(B);if($)return $;let Z=Fi(B);if(Z===0)return B;let ve=new Proxy(B,Z===2?ze:ce);return z.set(B,ve),ve}function Dr(B){return Nn(B)?Dr(B.__v_raw):!!(B&&B.__v_isReactive)}function Nn(B){return!!(B&&B.__v_isReadonly)}function Qn(B){return!!(B&&B.__v_isShallow)}function Fo(B){return Dr(B)||Nn(B)}function Wt(B){let ee=B&&B.__v_raw;return ee?Wt(ee):B}function Ci(B){return A.def(B,"__v_skip",!0),B}let Cr=B=>A.isObject(B)?Bt(B):B,Vi=B=>A.isObject(B)?Qr(B):B;function Jt(B){rn&&yn&&(B=Wt(B),st(B.dep||(B.dep=vn())))}function Un(B,ee){B=Wt(B),B.dep&&qt(B.dep)}function Wn(B){return!!(B&&B.__v_isRef===!0)}function Gr(B){return vo(B,!1)}function $i(B){return vo(B,!0)}function vo(B,ee){return Wn(B)?B:new Oi(B,ee)}class Oi{constructor(ee,ce){this.__v_isShallow=ce,this.dep=void 0,this.__v_isRef=!0,this._rawValue=ce?ee:Wt(ee),this._value=ce?ee:Cr(ee)}get value(){return Jt(this),this._value}set value(ee){ee=this.__v_isShallow?ee:Wt(ee),A.hasChanged(ee,this._rawValue)&&(this._rawValue=ee,this._value=this.__v_isShallow?ee:Cr(ee),Un(this,ee))}}function eo(B){Un(B,void 0)}function Vo(B){return Wn(B)?B.value:B}let to={get:(B,ee,ce)=>Vo(Reflect.get(B,ee,ce)),set:(B,ee,ce,ze)=>{let z=B[ee];return Wn(z)&&!Wn(ce)?(z.value=ce,!0):Reflect.set(B,ee,ce,ze)}};function Ui(B){return Dr(B)?B:new Proxy(B,to)}class fr{constructor(ee){this.dep=void 0,this.__v_isRef=!0;let{get:ce,set:ze}=ee(()=>Jt(this),()=>Un(this));this._get=ce,this._set=ze}get value(){return this._get()}set value(ee){this._set(ee)}}function wr(B){return new fr(B)}function er(B){let ee=A.isArray(B)?new Array(B.length):{};for(let ce in B)ee[ce]=tr(B,ce);return ee}class Or{constructor(ee,ce,ze){this._object=ee,this._key=ce,this._defaultValue=ze,this.__v_isRef=!0}get value(){let ee=this._object[this._key];return ee===void 0?this._defaultValue:ee}set value(ee){this._object[this._key]=ee}}function tr(B,ee,ce){let ze=B[ee];return Wn(ze)?ze:new Or(B,ee,ce)}class Ti{constructor(ee,ce,ze,z){this._setter=ce,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new nn(ee,()=>{this._dirty||(this._dirty=!0,Un(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!z,this.__v_isReadonly=ze}get value(){let ee=Wt(this);return Jt(ee),(ee._dirty||!ee._cacheable)&&(ee._dirty=!1,ee._value=ee.effect.run()),ee._value}set value(ee){this._setter(ee)}}function dr(B,ee,ce=!1){let ze,z,$=A.isFunction(B);return $?(ze=B,z=A.NOOP):(ze=B.get,z=B.set),new Ti(ze,z,$||!z,ce)}var Lr;let Hi=Promise.resolve(),Yr=[],ui=!1,fi=B=>{Yr.push(B),ui||(ui=!0,Hi.then(di))},di=()=>{for(let B=0;B<Yr.length;B++)Yr[B]();Yr.length=0,ui=!1};class Pi{constructor(ee){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[Lr]=!0;let ce,ze=!1,z=!1;this.effect=new nn(ee,$=>{if(this.dep){if($)ce=this._value,ze=!0;else if(!z){let Z=ze?ce:this._value;z=!0,ze=!1,fi(()=>{this.effect.active&&this._get()!==Z&&Un(this),z=!1})}for(let Z of this.dep)Z.computed instanceof Pi&&Z.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return Jt(this),Wt(this)._get()}}Lr="__v_isReadonly";function Io(B){return new Pi(B)}return _.EffectScope=I,_.ITERATE_KEY=an,_.ReactiveEffect=nn,_.computed=dr,_.customRef=wr,_.deferredComputed=Io,_.effect=$n,_.effectScope=f,_.enableTracking=Rr,_.getCurrentScope=Ue,_.isProxy=Fo,_.isReactive=Dr,_.isReadonly=Nn,_.isRef=Wn,_.isShallow=Qn,_.markRaw=Ci,_.onScopeDispose=Rt,_.pauseTracking=Bn,_.proxyRefs=Ui,_.reactive=Bt,_.readonly=Qr,_.ref=Gr,_.resetTracking=Jr,_.shallowReactive=we,_.shallowReadonly=po,_.shallowRef=$i,_.stop=mn,_.toRaw=Wt,_.toRef=tr,_.toRefs=er,_.track=$e,_.trigger=_t,_.triggerRef=eo,_.unref=Vo,Object.defineProperty(_,"__esModule",{value:!0}),_}({},p);return s}function up(p){var s=function(_){"use strict";let A=`
`,k=44,y=50,I=50,f=["%","%"],P="#007aff",Ue="#f7f7f7",Rt=/^([a-z-]+:)?\/\//i,vn=/^data:.*,.*/,x="WEB_INVOKE_APPSERVICE",Mt="wxs://",jn="json://",In="wxsModules",ft="renderjsModules",ne="onShow",Q="onHide",En="onLaunch",yn="onError",an="onThemeChange",Vn="onKeyboardHeightChange",nn="onPageNotFound",xn="onUnhandledRejection",$n="onLoad",mn="onReady",rn="onUnload",_n="onInit",Bn="onSaveExitState",Rr="onResize",Jr="onBackPress",$e="onPageScroll",st="onTabItemTap",_t="onReachBottom",qt="onPullDownRefresh",sn="onShareTimeline",on="onAddToFavorites",lr="onShareAppMessage",cr="onNavigationBarButtonTap",Bi="onNavigationBarSearchInputClicked",Mi="onNavigationBarSearchInputChanged",Mn="onNavigationBarSearchInputConfirmed",Hr="onNavigationBarSearchInputFocusChanged",_r="onAppEnterForeground",yi="onAppEnterBackground",Ji="onWxsInvokeCallMethod";function Di(z){return!!z.appContext}function Lo(z){return z&&(Di(z)?z.proxy:z)}function Oo(z){return z.nodeType===1}function br(z){let{vnode:$}=z;if(Oo($.el))return $.el;let{subTree:Z}=z;if(Z.shapeFlag&16){let ve=Z.children.find(pe=>pe.el&&Oo(pe.el));if(ve)return ve.el}return $.el}let Sn=0;function An(z,...$){let Z=Date.now(),ve=Sn?Z-Sn:0;return Sn=Z,`[${Z}][${ve}ms][${z}]\uFF1A${$.map(pe=>JSON.stringify(pe)).join(" ")}`}function ai(z){let $=Object.create(null);return Z=>$[Z]||($[Z]=z(Z))}function Zi(z){return ai(z)}function wi(z=""){return(""+z).replace(/[^\x00-\xff]/g,"**").length}function Xi(z){return z.indexOf("/")===0}function Si(z){return Xi(z)?z:"/"+z}function ur(z){return Xi(z)?z.slice(1):z}let jr=(z,$)=>{let Z;for(let ve=0;ve<z.length;ve++)Z=z[ve]($);return Z};function zr(z,$=null){let Z;return(...ve)=>(z&&(Z=z.apply($,ve),z=null),Z)}function Er(z,$){z=z||{},typeof $=="string"&&($={errMsg:$}),/:ok$/.test($.errMsg)?typeof z.success=="function"&&z.success($):typeof z.fail=="function"&&z.fail($),typeof z.complete=="function"&&z.complete($)}function To(z){let $={};return _.isPlainObject(z)&&Object.keys(z).sort().forEach(Z=>{let ve=Z;$[ve]=z[ve]}),Object.keys($)?$:z}let Po=encodeURIComponent;function Li(z,$=Po){let Z=z?Object.keys(z).map(ve=>{let pe=z[ve];return typeof pe===void 0||pe===null?pe="":_.isPlainObject(pe)&&(pe=JSON.stringify(pe)),$(ve)+"="+$(pe)}).filter(ve=>ve.length>0).join("&"):null;return Z?`?${Z}`:""}function xr(z){try{return decodeURIComponent(""+z)}catch($){}return""+z}let qn=/\+/g;function uo(z){let $={};if(z===""||z==="?")return $;let ve=(z[0]==="?"?z.slice(1):z).split("&");for(let pe=0;pe<ve.length;++pe){let at=ve[pe].replace(qn," "),Cn=at.indexOf("="),Jn=xr(Cn<0?at:at.slice(0,Cn)),ei=Cn<0?null:xr(at.slice(Cn+1));if(Jn in $){let hn=$[Jn];_.isArray(hn)||(hn=$[Jn]=[hn]),hn.push(ei)}else $[Jn]=ei}return $}function Zr(z){let[$,Z]=z.split("?",2);return{path:$,query:uo(Z||"")}}function zn(z){let $={};return z&&Object.keys(z).forEach(Z=>{Z.indexOf("data-")===0&&($[Z.replace("data-","")]=z[Z])}),$}class Wr extends Error{constructor($){super($);this.name="DOMException"}}function Qi(z,$){return $&&($.capture&&(z+="Capture"),$.once&&(z+="Once"),$.passive&&(z+="Passive")),`on${_.capitalize(_.camelize(z))}`}class Xr{constructor($,Z){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=$,this.bubbles=!!Z.bubbles,this.cancelable=!!Z.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function si(z){if(z instanceof Xr)return z;let[$]=go(z.type),Z=new Xr($,{bubbles:!1,cancelable:!1});return _.extend(Z,z),Z}class fo{constructor(){this.listeners=Object.create(null)}dispatchEvent($){let Z=this.listeners[$.type];if(!Z)return!1;let ve=si($),pe=Z.length;for(let at=0;at<pe&&(Z[at].call(this,ve),!ve._end);at++);return ve.cancelable&&ve.defaultPrevented}addEventListener($,Z,ve){$=Qi($,ve),(this.listeners[$]||(this.listeners[$]=[])).push(Z)}removeEventListener($,Z,ve){$=Qi($,ve);let pe=this.listeners[$];if(!pe)return;let at=pe.indexOf(Z);at>-1&&pe.splice(at,1)}}let ho=/(?:Once|Passive|Capture)$/;function go(z){let $;if(ho.test(z)){$={};let Z;for(;Z=z.match(ho);)z=z.slice(0,z.length-Z[0].length),$[Z[0].toLowerCase()]=!0}return[_.hyphenate(z.slice(2)),$]}let li=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function Br(z){let $=0;return z.includes("stop")&&($|=li.stop),z.includes("prevent")&&($|=li.prevent),z.includes("self")&&($|=li.self),$}let Ai=0,ci=1,Kn=3,Mr=8;function Fi(z,$){let{parentNode:Z}=z;if(!Z)return null;let{childNodes:ve}=Z;return ve[ve.indexOf(z)+($==="n"?1:-1)]||null}function Bt(z){let{parentNode:$}=z;$&&$.removeChild(z)}function we(z){!z.nodeId&&z.pageNode&&(z.nodeId=z.pageNode.genId())}class Qr extends fo{constructor($,Z,ve){super();if(this.pageNode=null,this.parentNode=null,this._text=null,ve){let{pageNode:pe}=ve;pe&&(this.pageNode=pe,this.nodeId=pe.genId(),!pe.isUnmounted&&pe.onCreate(this,Z))}this.nodeType=$,this.nodeName=Z,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:$}=this,Z=$.length;return Z?$[Z-1]:null}get nextSibling(){return Fi(this,"n")}get nodeValue(){return null}set nodeValue($){}get textContent(){return this._text||""}set textContent($){this._text=$,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,$)}get parentElement(){let{parentNode:$}=this;return $&&$.nodeType===ci?$:null}get previousSibling(){return Fi(this,"p")}appendChild($){return this.insertBefore($,null)}cloneNode($){let Z=_.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:ve}=Z;return ve&&(Z.attributes=_.extend({},ve)),$&&(Z.childNodes=Z.childNodes.map(pe=>pe.cloneNode(!0))),Z}insertBefore($,Z){Bt($),$.pageNode=this.pageNode,$.parentNode=this,we($);let{childNodes:ve}=this;if(Z){let pe=ve.indexOf(Z);if(pe===-1)throw new Wr("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");ve.splice(pe,0,$)}else ve.push($);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,$,Z):$}removeChild($){let{childNodes:Z}=this,ve=Z.indexOf($);if(ve===-1)throw new Wr("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return $.parentNode=null,Z.splice(ve,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild($):$}}let po="class",yr="style",Dr=".vOwnerId",Nn=".vRenderjs";class Qn extends Qr{constructor($,Z,ve){super($,Z,ve);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[po]||""}set className($){this.setAttribute(po,$)}get innerHTML(){return""}set innerHTML($){this._html=$}addEventListener($,Z,ve){super.addEventListener($,Z,ve),this.pageNode&&!this.pageNode.isUnmounted&&(Z.wxsEvent?this.pageNode.onAddWxsEvent(this,Qi($,ve),Z.wxsEvent,Br(Z.modifiers||[])):this.pageNode.onAddEvent(this,Qi($,ve),Br(Z.modifiers||[])))}removeEventListener($,Z,ve){super.removeEventListener($,Z,ve),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,Qi($,ve))}getAttribute($){return $===yr?this.style:this.attributes[$]}removeAttribute($){$==yr?this.style=null:delete this.attributes[$],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,$)}setAttribute($,Z){$===yr?this.style=Z:this.attributes[$]=Z,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,$,Z)}toJSON({attr:$,normalize:Z}={}){let{attributes:ve,style:pe,listeners:at,_text:Cn}=this,Jn={};Object.keys(ve).length&&(Jn.a=Z?Z(ve):ve);let ei=Object.keys(at);if(ei.length){let hn,kn={};ei.forEach(Ii=>{let ma=at[Ii];if(ma.length){let{wxsEvent:ea,modifiers:_a}=ma[0],No=Br(_a||[]);ea?(hn||(hn={}),hn[Ii]=[Z?Z(ea):ea,No]):kn[Ii]=No}}),Jn.e=Z?Z(kn,!1):kn,hn&&(Jn.w=Z?Z(hn,!1):hn)}return pe!==null&&(Jn.s=Z?Z(pe):pe),$||(Jn.i=this.nodeId,Jn.n=this.nodeName),Cn!==null&&(Jn.t=Z?Z(Cn):Cn),Jn}}class Fo extends Qr{constructor($,Z){super(Mr,"#comment",Z);this._text=""}toJSON($={}){return $.attr?{}:{i:this.nodeId}}}class Wt extends Qn{constructor($,Z){super(ci,$.toUpperCase(),Z);this.tagName=this.nodeName}}class Ci extends Wt{get value(){return this.getAttribute("value")}set value($){this.setAttribute("value",$)}}class Cr extends Ci{}class Vi extends Qn{constructor($,Z){super(Kn,"#text",Z);this._text=$}get nodeValue(){return this._text||""}set nodeValue($){this._text=$,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,$)}}let Jt={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},Un=["animation"],Wn=(z,$)=>{if(Un.indexOf($)>-1)return!0;let Z=Jt[z.nodeName];return!!(Z&&Z.indexOf($)>-1)},Gr=1,$i=2,vo=3,Oi=4,eo=5,Vo=6,to=7,Ui=8,fr=9,wr=10,er=12,Or=15,tr=20;function Ti(z,$,{clearTimeout:Z,setTimeout:ve}){let pe,at=function(){Z(pe),pe=ve(()=>z.apply(this,arguments),$)};return at.cancel=function(){Z(pe)},at}class dr{constructor($,Z){this.id=$,this.listener={},this.emitCache={},Z&&Object.keys(Z).forEach(ve=>{this.on(ve,Z[ve])})}emit($,...Z){let ve=this.listener[$];if(!ve)return(this.emitCache[$]||(this.emitCache[$]=[])).push(Z);ve.forEach(pe=>{pe.fn.apply(pe.fn,Z)}),this.listener[$]=ve.filter(pe=>pe.type!=="once")}on($,Z){this._addListener($,"on",Z),this._clearCache($)}once($,Z){this._addListener($,"once",Z),this._clearCache($)}off($,Z){let ve=this.listener[$];if(!!ve)if(Z)for(let pe=0;pe<ve.length;)ve[pe].fn===Z&&(ve.splice(pe,1),pe--),pe++;else delete this.listener[$]}_clearCache($){let Z=this.emitCache[$];if(Z)for(;Z.length>0;)this.emit.apply(this,[$,...Z.shift()])}_addListener($,Z,ve){(this.listener[$]||(this.listener[$]=[])).push({fn:ve,type:Z})}}let Lr=[_n,$n,ne,Q,rn,Jr,$e,st,_t,qt,sn,lr,on,Bn,cr,Bi,Mi,Mn,Hr],Hi=[$n,ne];function Yr(z){return Hi.indexOf(z)>-1}function ui(z){return Lr.indexOf(z)>-1}let fi=[ne,Q,En,yn,an,nn,xn,_n,$n,mn,rn,Rr,Jr,$e,st,_t,qt,sn,on,lr,Bn,cr,Bi,Mi,Mn,Hr],di,Pi=[];function Io(z){if(di)return z(di);Pi.push(z)}function B(z){di=z,Pi.forEach($=>$(z))}let ee=function(){};ee.prototype={on:function(z,$,Z){var ve=this.e||(this.e={});return(ve[z]||(ve[z]=[])).push({fn:$,ctx:Z}),this},once:function(z,$,Z){var ve=this;function pe(){ve.off(z,pe),$.apply(Z,arguments)}return pe._=$,this.on(z,pe,Z)},emit:function(z){var $=[].slice.call(arguments,1),Z=((this.e||(this.e={}))[z]||[]).slice(),ve=0,pe=Z.length;for(ve;ve<pe;ve++)Z[ve].fn.apply(Z[ve].ctx,$);return this},off:function(z,$){var Z=this.e||(this.e={}),ve=Z[z],pe=[];if(ve&&$)for(var at=0,Cn=ve.length;at<Cn;at++)ve[at].fn!==$&&ve[at].fn._!==$&&pe.push(ve[at]);return pe.length?Z[z]=pe:delete Z[z],this}};var ce=ee,ze={invokeArrayFns:jr,ON_LOAD:$n,ON_SHOW:ne,LINEFEED:A,RENDERJS_MODULES:ft,WXS_PROTOCOL:Mt,formatLog:An,WXS_MODULES:In,UniLifecycleHooks:fi,ON_ERROR:yn,invokeCreateVueAppHook:B,parseNVueDataset:zn,once:zr,I18N_JSON_DELIMITERS:f,Emitter:ce,addLeadingSlash:Si,resolveComponentInstance:Lo,ON_RESIZE:Rr,ON_APP_ENTER_FOREGROUND:_r,ON_APP_ENTER_BACKGROUND:yi,ON_HIDE:Q,ON_PAGE_SCROLL:$e,ON_REACH_BOTTOM:_t,SCHEME_RE:Rt,DATA_RE:vn,cacheStringFunction:Zi,parseQuery:uo,callOptions:Er,ON_UNHANDLE_REJECTION:xn,ON_PAGE_NOT_FOUND:nn,PRIMARY_COLOR:P,removeLeadingSlash:ur,getLen:wi,TABBAR_HEIGHT:y,NAVBAR_HEIGHT:k,sortObject:To,ON_THEME_CHANGE:an,ON_KEYBOARD_HEIGHT_CHANGE:Vn,BACKGROUND_COLOR:Ue,ON_NAVIGATION_BAR_BUTTON_TAP:cr,stringifyQuery:Li,debounce:Ti,ON_PULL_DOWN_REFRESH:qt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:Mi,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:Mn,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Bi,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Hr,ON_BACK_PRESS:Jr,UniNode:Qr,NODE_TYPE_PAGE:Ai,ACTION_TYPE_PAGE_CREATE:Gr,ACTION_TYPE_PAGE_CREATED:$i,ACTION_TYPE_PAGE_SCROLL:Or,ACTION_TYPE_INSERT:Oi,ACTION_TYPE_CREATE:vo,ACTION_TYPE_REMOVE:eo,ACTION_TYPE_ADD_EVENT:Ui,ACTION_TYPE_ADD_WXS_EVENT:er,ACTION_TYPE_REMOVE_EVENT:fr,ACTION_TYPE_SET_ATTRIBUTE:Vo,ACTION_TYPE_REMOVE_ATTRIBUTE:to,ACTION_TYPE_SET_TEXT:wr,ON_READY:mn,ON_UNLOAD:rn,EventChannel:dr,ON_REACH_BOTTOM_DISTANCE:I,parseUrl:Zr,onCreateVueApp:Io,ON_TAB_ITEM_TAP:st,ON_LAUNCH:En,ACTION_TYPE_EVENT:tr,createUniEvent:si,ON_WXS_INVOKE_CALL_METHOD:Ji,WEB_INVOKE_APPSERVICE:x,isRootHook:ui,isRootImmediateHook:Yr,UniInputElement:Ci,UniTextAreaElement:Cr,UniElement:Wt,UniTextNode:Vi,UniCommentNode:Fo,forcePatchProp:Wn,resolveOwnerEl:br,ATTR_V_OWNER_ID:Dr,ATTR_V_RENDERJS:Nn,JSON_PROTOCOL:jn};return ze}(p);return s}var YP=1;function fp(){return(YP++).toString()}var Qu=p=>p&&JSON.parse(JSON.stringify(p))||p;function fc(p){let s=ns(p);return s.substring(8,s.length-1)}function ef(p){if(!Fn(btoa))return"";let s=Array.prototype.map.call(new Uint8Array(p),_=>String.fromCharCode(_)).join("");return btoa(s)}function dc(p){if(!p||typeof p!="object")return!0;for(let s in p)if(zs(p,s))return!1;return!0}var eu=["off","error","warn","info","log","debug"],tu={};function dp(){eu.forEach(p=>{let s=eu.indexOf(p);tu[p]={},eu.forEach(_=>{eu.indexOf(_)<=s&&(tu[p][_]=!0)})})}function Yn(p){let s=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return tu[s]&&tu[s][p]}function xi(p){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+p,"__DEBUG")}function hp(p,s,_){return`${s}@${_}#${p}`}var nu=class{constructor(s){this.instanceId=String(s),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(s){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=s,this.lastCallbackId}remove(s){let _=this.callbacks[s];return delete this.callbacks[s],_}registerHook(s,_,A,k){let y=hp(s,_,A);this.hooks[y]&&console.warn(`[JS Framework] Override an existing component hook "${y}".`),this.hooks[y]=k}triggerHook(s,_,A,k){let y=hp(s,_,A),I=this.hooks[y];if(!Fn(I))return console.error(`[JS Framework] Invalid hook function type (${typeof I}) on "${y}".`),null;let f=null;try{f=I.apply(null,k||[])}catch(P){throw console.error(`[JS Framework] Failed to execute the hook function on "${y}".`),P}return f}consume(s,_,A){let k=this.callbacks[s];if((typeof A=="undefined"||A===!1)&&delete this.callbacks[s],Fn(k))try{return k.call(null,_,A)}catch(y){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${y.toString()}`),y}return new Error(`invalid callback id "${s}"`)}close(){this.callbacks={},this.hooks={}}};var ru={};function gp(p,s){p&&(ru[p]=s)}function rs(p){return ru[p]}function pp(p){delete ru[p]}function kr(p){if(p){let s=ru[p];if(s&&s.taskCenter)return s.taskCenter}return null}function qP(p){p.calcClassList&&p.calcClassList()}function tf(p,s,_){let{documentElement:A}=p;if(A.pureChildren.length>0||s.parentNode)return;let k=A.children,y=_?k.indexOf(_):-1;y<0?k.push(s):k.splice(y,0,s),s.nodeType===1?(s.role==="body"?(s.docId=p.id,s.ownerDocument=p,s.parentNode=A,Ws(s,A)):(s.children.forEach(I=>{I.parentNode=s}),nf(p,s),Ws(s,A),delete p.nodeMap[s.nodeId]),A.pureChildren.push(s),KP(p,s)):(s.parentNode=A,p.nodeMap[s.ref]=s)}function KP(p,s){let _=s.toJSON();p&&p.taskCenter&&Fn(p.taskCenter.send)&&p.taskCenter.send("dom",{action:"createBody"},[_])}function nf(p,s){s.role="body",s.depth=1,delete p.nodeMap[s.nodeId],s.ref="_root",p.nodeMap._root=s,p.body=s}function Ws(p,s){p.parentNode=s,qP(p),s.docId&&(p.docId=s.docId,p.ownerDocument=s.ownerDocument,p.ownerDocument.nodeMap[p.nodeId]=p,p.depth=s.depth+1),p.children.forEach(_=>{Ws(_,p)})}function rf(p){for(;p;){if(p.nodeType===1)return p;p=p.nextSibling}}function of(p){for(;p;){if(p.nodeType===1)return p;p=p.previousSibling}}function Gs(p,s,_,A=!1){_<0&&(_=0);let k=s[_-1],y=s[_];return s.splice(_,0,p),A&&(k&&(k.nextSibling=p),p.previousSibling=k,p.nextSibling=y,y&&(y.previousSibling=p)),_}function Ys(p,s,_,A=!1){let k=s.indexOf(p);if(k<0)return-1;if(A){let P=s[k-1],Ue=s[k+1];P&&(P.nextSibling=Ue),Ue&&(Ue.previousSibling=P)}s.splice(k,1);let y=_;k<=_&&(y=_-1);let I=s[y-1],f=s[y];return s.splice(y,0,p),A&&(I&&(I.nextSibling=p),p.previousSibling=I,p.nextSibling=f,f&&(f.previousSibling=p)),k===y?-1:_}function af(p,s,_=!1){let A=s.indexOf(p);if(!(A<0)){if(_){let k=s[A-1],y=s[A+1];k&&(k.nextSibling=y),y&&(y.previousSibling=k)}s.splice(A,1)}}var qs=class{constructor(){this.depth=0;this.nodeId=fp(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let s=rs(this.docId);s&&(delete this.docId,delete s.nodeMap[this.nodeId]),this.children.forEach(_=>{_.destroy()})}};var vp={};function sf(p,s){if(!bi(s)||!s.length)return;class _ extends Ki{}s.forEach(A=>{_.prototype[A]=function(...k){let y=kr(this.docId);if(y)return y.send("component",{ref:this.ref,component:p,method:A},k)}}),vp[p]=_}function mp(p){return vp[p]}function Ar(p,s,_,A,k){return{type:"decl",prop:p,value:s+(_?" !important":""),raws:A,source:k}}var JP="backgroundColor",ZP="backgroundImage",XP=p=>{let{value:s,important:_,raws:A,source:k}=p;return/^#?\S+$/.test(s)||/^rgba?(.+)$/.test(s)?[Ar(JP,s,_,A,k)]:/^linear-gradient(.+)$/.test(s)?[Ar(ZP,s,_,A,k)]:[p]},QP="Width",e1="Style",t1="Color",hc=p=>{let{prop:s,value:_,important:A,raws:k,source:y}=p,I=_.replace(/\s*,\s*/g,",").split(/\s+/),f=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(P=>{let Ue=I.findIndex(Rt=>P.test(Rt));return Ue<0?null:I.splice(Ue,1)[0]});return I.length?[p]:[Ar(s+QP,(f[0]||"0").trim(),A,k,y),Ar(s+e1,(f[1]||"solid").trim(),A,k,y),Ar(s+t1,(f[2]||"#000000").trim(),A,k,y)]},n1="borderTop",r1="borderRight",i1="borderBottom",o1="borderLeft",lf=p=>{let{prop:s,value:_,important:A,raws:k,source:y}=p,I=Xu(s).split("-")[1];I=Qc(I);let f=_.replace(/\s*,\s*/g,",").split(/\s+/);switch(f.length){case 1:return[p];case 2:f.push(f[0],f[1]);break;case 3:f.push(f[1]);break}return[Ar(n1+I,f[0],A,k,y),Ar(r1+I,f[1],A,k,y),Ar(i1+I,f[2],A,k,y),Ar(o1+I,f[3],A,k,y)]},a1="borderTopLeftRadius",s1="borderTopRightRadius",l1="borderBottomRightRadius",c1="borderBottomLeftRadius",u1=p=>{let{value:s,important:_,raws:A,source:k}=p,y=s.split(/\s+/);if(s.includes("/"))return[p];switch(y.length){case 1:return[p];case 2:y.push(y[0],y[1]);break;case 3:y.push(y[1]);break}return[Ar(a1,y[0],_,A,k),Ar(s1,y[1],_,A,k),Ar(l1,y[2],_,A,k),Ar(c1,y[3],_,A,k)]},f1=lf,d1=lf,h1="flexDirection",g1="flexWrap",p1=p=>{let{value:s,important:_,raws:A,source:k}=p,y=s.split(/\s+/),I=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(f=>{let P=y.findIndex(Ue=>f.test(Ue));return P<0?null:y.splice(P,1)[0]});return y.length?[p]:[Ar(h1,I[0]||"column",_,A,k),Ar(g1,I[1]||"nowrap",_,A,k)]},v1="Top",m1="Right",_1="Bottom",b1="Left",_p=p=>s=>{let{value:_,important:A,raws:k,source:y}=s,I=_.split(/\s+/);switch(I.length){case 1:I.push(I[0],I[0],I[0]);break;case 2:I.push(I[0],I[1]);break;case 3:I.push(I[1]);break}return[Ar(p+v1,I[0],A,k,y),Ar(p+m1,I[1],A,k,y),Ar(p+_1,I[2],A,k,y),Ar(p+b1,I[3],A,k,y)]},E1=_p("margin"),y1=_p("padding"),w1="transitionProperty",S1="transitionDuration",A1="transitionTimingFunction",C1="transitionDelay",O1=p=>{let s=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:_,important:A,raws:k,source:y}=p,I=[],f=_.match(s);return f&&(f[1]&&I.push(Ar(w1,f[1],A,k,y)),f[2]&&I.push(Ar(S1,f[2],A,k,y)),f[3]&&I.push(Ar(A1,f[3],A,k,y)),f[4]&&I.push(Ar(C1,f[4],A,k,y))),I},bp={transition:O1,margin:E1,padding:y1,border:hc,background:XP};Kr(bp,{borderTop:hc,borderRight:hc,borderBottom:hc,borderLeft:hc,borderStyle:f1,borderWidth:d1,borderColor:lf,borderRadius:u1,flexFlow:p1});var Ep=Symbol("expanded"),yp={postcssPlugin:"nvue:expand",Declaration(p){if(p[Ep])return;let s=bp[p.prop];if(s){let _=s(p);_.length===1&&_[0]===p||p.replaceWith(_)}p[Ep]=!0}};var T1=yp.Declaration;function cf(p,s){let _=Kr({replaceWith(k){A=k}},P1(p,s)),A=[_];return T1(_),A}function P1(p,s){let _=s+"";return _.includes("!important")?{prop:p,value:_.replace(/\s*!important/,""),important:!0}:{prop:p,value:_,important:!1}}var I1="view",N1=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function uf(p,s){let _=rs(p);_.nodeMap[s.nodeId]=s}var ff;function wp(p){ff||(ff=p)}var Ki=class extends qs{constructor(s=I1,_={},A){super();let k=mp(s);if(k&&!A)return new k(s,_,!0);this.nodeType=1,this.type=s,this.attr=_.attr||{},this.style=_.style||{},this.classStyle=_.classStyle||{},this.classList=_.classList||[],this.styleSheet=_.styleSheet||{},this.event={}}appendChild(s){if(!(s.parentNode&&s.parentNode!==this)){if(s.parentNode){if(Yn("debug")&&xi(`[appendChild](${this.docId},${s.type},${s.ref}) Move <${s.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),Ys(s,this.children,this.children.length,!0),s.nodeType===1){let _=Ys(s,this.pureChildren,this.pureChildren.length),A=kr(this.docId);if(A&&_>=0)return A.send("dom",{action:"moveElement"},[s.ref,this.ref,_])}}else if(Yn("debug")&&xi(`[appendChild](${this.docId},${s.type},${s.ref}) Append <${s.type}> to <${this.type}> (${this.ref}).`),Ws(s,this),Gs(s,this.children,this.children.length,!0),this.docId&&uf(this.docId,s),s.nodeType===1){Gs(s,this.pureChildren,this.pureChildren.length);let _=kr(this.docId);if(_)return _.send("dom",{action:"addElement"},[this.ref,s.toJSON(),-1])}}}insertBefore(s,_){if(!(s.parentNode&&s.parentNode!==this)&&!(s===_||s.nextSibling&&s.nextSibling===_)){if(s.parentNode){if(Ys(s,this.children,this.children.indexOf(_),!0),s.nodeType===1){let A=rf(_),k=Ys(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),y=kr(this.docId);if(y&&k>=0)return y.send("dom",{action:"moveElement"},[s.ref,this.ref,k])}}else if(Yn("debug")&&xi(`[insertBefore](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), before (${_.ref}).`),Ws(s,this),Gs(s,this.children,this.children.indexOf(_),!0),this.docId&&uf(this.docId,s),s.nodeType===1){let A=rf(_),k=Gs(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),y=kr(this.docId);if(y)return y.send("dom",{action:"addElement"},[this.ref,s.toJSON(),k])}}}insertAfter(s,_){if(!(s.parentNode&&s.parentNode!==this)&&!(s===_||s.previousSibling&&s.previousSibling===_)){if(s.parentNode){if(Ys(s,this.children,this.children.indexOf(_)+1,!0),s.nodeType===1){let A=Ys(s,this.pureChildren,this.pureChildren.indexOf(of(_))+1),k=kr(this.docId);if(k&&A>=0)return k.send("dom",{action:"moveElement"},[s.ref,this.ref,A])}}else if(Yn("debug")&&xi(`[insertAfter](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), after (${_.ref}).`),Ws(s,this),Gs(s,this.children,this.children.indexOf(_)+1,!0),this.docId&&uf(this.docId,s),s.nodeType===1){let A=Gs(s,this.pureChildren,this.pureChildren.indexOf(of(_))+1),k=kr(this.docId);if(k)return k.send("dom",{action:"addElement"},[this.ref,s.toJSON(),A])}}}removeChild(s,_){if(s.parentNode&&(af(s,this.children,!0),s.nodeType===1)){Yn("debug")&&xi(`[removeChild](${this.docId},${s.type},${s.ref}) Remove <${s.type}> from <${this.type}> (${this.ref}).`),af(s,this.pureChildren);let A=kr(this.docId);A&&A.send("dom",{action:"removeElement"},[s.ref])}_||s.destroy()}clear(){let s=kr(this.docId);s&&this.pureChildren.forEach(_=>{s.send("dom",{action:"removeElement"},[_.ref])}),this.children.forEach(_=>{_.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(s,_,A){if(this.attr[s]===_&&A!==!1)return;this.attr[s]=_;let k=kr(this.docId);!A&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,{[s]:_}])}setAttrs(s,_){if(dc(s))return;let A={};for(let k in s)this.attr[k]!==s[k]&&(this.attr[k]=s[k],A[k]=s[k]);if(!dc(A)){let k=kr(this.docId);!_&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,A])}}setStyle(s,_,A){cf(s,_).forEach(({prop:k,value:y})=>{if(this.style[k]===y&&A!==!1)return;this.style[k]=y;let I=kr(this.docId);!A&&I&&I.send("dom",{action:"updateStyle"},[this.ref,{[k]:y}])})}setStyles(s,_){if(dc(s))return;let A={};for(let k in s)cf(k,s[k]).forEach(({prop:y,value:I})=>{this.style[y]!==I&&(this.style[y]=I,A[y]=I)});if(!dc(A)){let k=kr(this.docId);!_&&k&&k.send("dom",{action:"updateStyle"},[this.ref,A])}}setClassStyle(s){for(let A in this.classStyle)this.classStyle[A]="";Kr(this.classStyle,s);let _=kr(this.docId);_&&_.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(s){s.length===this.classList.length&&s.filter(_=>!this.classList.includes(_)).length===0||(this.classList=s,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(ff(this))}setStyleSheet(s){this.styleSheet=s}addEvent(s,_,A){if(this.event||(this.event={}),!this.event[s]){Yn("debug")&&xi(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${s}" event on <${this.type}> (${this.ref}).`),this.event[s]={handler:_,params:A};let k=kr(this.docId);k&&k.send("dom",{action:"addEvent"},[this.ref,s])}}removeEvent(s){if(this.event&&this.event[s]){Yn("debug")&&xi(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${s}" event on <${this.type}> (${this.ref}).`),delete this.event[s];let _=kr(this.docId);_&&_.send("dom",{action:"removeEvent"},[this.ref,s])}}fireEvent(s,_,A,k){let y=null,I=!1,f=this.event[s];if(f&&_){Yn("debug")&&xi(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${s}" event on <${this.type}> (${this.ref}).`);let P=f.handler;_.stopPropagation=()=>{I=!0},_.preventDefault=()=>{};try{k&&k.params?y=P.call(this,...k.params,_):y=P.call(this,_)}catch(Ue){throw console.error(`[JS Framework] Failed to invoke the event handler of "${s}" on ${this.type} (${this.ref}):
 ${Ue.toString()}`),Ue}}return!I&&A&&N1.indexOf(s)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(_.currentTarget=this.parentNode,this.parentNode.fireEvent(s,_,A)),y}toStyle(){return Kr({},this.classStyle,this.style)}toJSON(s=!1){let _={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},A=[];for(let k in this.event){let{params:y}=this.event[k];y?A.push({type:k,params:y}):A.push(k)}return A.length&&(_.event=A),!s&&this.pureChildren.length&&(_.children=this.pureChildren.map(k=>k.toJSON())),_}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(s=>s.toString()).join("")+"</"+this.type+">"}};function Sp(p){let s=p&&p.__v_raw;return s?Sp(s):p}function Ap(p){let s=fc(p);switch(s){case"Undefined":case"Null":return"";case"RegExp":return p.toString();case"Date":return p.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return Sp(p);case"ArrayBuffer":return{"@type":"binary",dataType:s,base64:ef(p)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:s,base64:ef(p.buffer)};default:return JSON.stringify(p)}}var iu=function(){},Ul=class{constructor(s,_){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(s)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new nu(s)}),iu=_||function(){}}callback(s,_,A){return this.callbackManager.consume(s,_,A)}registerHook(s,_,A,k){return this.callbackManager.registerHook(s,_,A,k)}triggerHook(s,_,A,k){return this.callbackManager.triggerHook(s,_,A,k)}updateData(s,_,A){this.send("module",{module:"dom",method:"updateComponentData"},[s,_,A])}destroyCallback(){return this.callbackManager.close()}normalize(s,_=!1){let A=fc(s);if(s&&s instanceof Ki)return s.ref;if(s&&s.$el instanceof Ki)return s.$el.ref;if(A==="Function")return this.callbackManager.add(s).toString();if(_){if(A==="Object"){let k={};for(let y in s)k[y]=this.normalize(s[y],!0);return k}if(A==="Array")return s.map(k=>this.normalize(k,!0))}return s&&s.ref&&s["[[VirtualElement]]"]?s.ref:Ap(s)}send(s,_,A,k){let{action:y,component:I,ref:f,module:P,method:Ue}=_;switch(A=A.map(Rt=>this.normalize(Rt,s!=="module")),fc(k)==="Object"&&(k=this.normalize(k,!0)),s){case"dom":return Yn("debug")&&xi(`[task](${this.instanceId},${s},${y}) ${JSON.stringify(A)}`),this[y](this.instanceId,A);case"component":return this.componentHandler(this.instanceId,f,Ue,A,Kr({component:I},k));default:return Yn("debug")&&xi(`[task](${this.instanceId},${P},${Ue}) ${JSON.stringify(A)}`),this.moduleHandler(this.instanceId,P,Ue,A,k)}}callDOM(s,_){return this[s](this.instanceId,_)}callComponent(s,_,A,k){return this.componentHandler(this.instanceId,s,_,A,k)}callModule(s,_,A,k){return this.moduleHandler(this.instanceId,s,_,A,k)}};function Cp(){let p={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},s=Ul.prototype;for(let _ in p){let A=p[_];s[_]=A?(k,y)=>A(k,...y):(k,y)=>iu(k,[{module:"dom",method:_,args:y}],"-1")}s.componentHandler=global.callNativeComponent||((_,A,k,y,I)=>iu(_,[{component:I.component,ref:A,method:k,args:y}])),s.moduleHandler=global.callNativeModule||((_,A,k,y)=>iu(_,[{module:A,method:k,args:y}]))}function k1(p,s,_,A,k,y){let I=p.getRef(s);if(I)return p.fireEvent(I,_,A,k,y);if(A)return A._nodeId=s,p.fireEvent(p.getRef("_documentElement"),_,A,k,y)}function R1(p,s,_,A){return p.taskCenter.callback(s,_,A)}function x1(p,s,_,A,k){if(!p||!p.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let y=null;try{y=p.taskCenter.triggerHook(s,_,A,k)}catch(I){throw console.error(`[JS Framework] Failed to trigger the "${_}@${A}" hook on ${s}.`),I}return y}function df(p,s){let _=rs(p);if(!_)return new Error(`[JS Framework] Failed to receiveTasks, instance (${p}) is not available.`);if(bi(s))return s.map(A=>{switch(A.method){case"callback":return R1(_,...A.args);case"fireEventSync":case"fireEvent":return k1(_,...A.args);case"componentHook":return x1(_,...A.args)}})}var Es={};function Op(p={}){for(let s in p)zs(Es,s)||(Es[s]={}),!!bi(p[s])&&p[s].forEach(_=>{Ei(_)?Es[s][_]=!0:$l(_)&&Ei(_.name)&&(Es[s][_.name]=_.args||[])})}function ou(p,s){return Ei(s)?!!(Es[p]&&Es[p][s]):!!Es[p]}function Tp(p){return Es[p]}var hf={};function Pp(p){!bi(p)||p.forEach(s=>{!s||(Ei(s)?hf[s]=!0:$l(s)&&Ei(s.type)&&(hf[s.type]=s,sf(s.type,s.methods)))})}function gf(p){return!!hf[p]}var ys=[];function au(p,s){pf(p)?console.warn(`Service "${p}" has been registered already!`):(s=Kr({},s),ys.push({name:p,options:s}))}function su(p){ys.some((s,_)=>{if(s.name===p)return ys.splice(_,1),!0})}function pf(p){return B1(p)>=0}function B1(p){return ys.map(s=>s.name).indexOf(p)}function M1(p){return s=>{let _=Jc(p,s),{createApp:A}=_;_.createVueApp=_.createApp=(k,y)=>A(k,y).use(D1,s),s.Vue=_}}var D1={install(p,s){L1(p,s),cc(s).initApp(p)}};function L1(p,s){let{mount:_}=p;p.mount=A=>{let k=_(A);return A==="#app"&&s.__registerApp(k),k}}function F1(p){let{UniShared:s,VueShared:_,VueReactivity:A}=p;var k=function(y,I,f,P){"use strict";var Ue=[];function Rt(i){P.pauseTracking();for(var l=Ue.length?Ue[Ue.length-1].component:null,d=l&&l.appContext.config.warnHandler,h=vn(),w=arguments.length,S=new Array(w>1?w-1:0),N=1;N<w;N++)S[N-1]=arguments[N];if(d)ft(d,l,11,[i+S.join(""),l&&l.proxy,h.map(M=>{var{vnode:X}=M;return"at <".concat(Gi(l,X.type),">")}).join(`
`),h]);else{var L=["[Vue warn]: ".concat(i),...S];h.length&&L.push(`
`,...x(h)),console.warn(...L)}P.resetTracking()}function vn(){var i=Ue[Ue.length-1];if(!i)return[];for(var l=[];i;){var d=l[0];d&&d.vnode===i?d.recurseCount++:l.push({vnode:i,recurseCount:0});var h=i.component&&i.component.parent;i=h&&h.vnode}return l}function x(i){var l=[];return i.forEach((d,h)=>{l.push(...h===0?[]:[`
`],...Mt(d))}),l}function Mt(i){var{vnode:l,recurseCount:d}=i,h=d>0?"... (".concat(d," recursive calls)"):"",w=l.component?l.component.parent==null:!1,S=" at <".concat(Gi(l.component,l.type,w)),N=">"+h;return l.props?[S,...jn(l.props),N]:[S+N]}function jn(i){var l=[],d=Object.keys(i);return d.slice(0,3).forEach(h=>{l.push(...In(h,i[h]))}),d.length>3&&l.push(" ..."),l}function In(i,l,d){return f.isString(l)?(l=JSON.stringify(l),d?l:["".concat(i,"=").concat(l)]):typeof l=="number"||typeof l=="boolean"||l==null?d?l:["".concat(i,"=").concat(l)]:P.isRef(l)?(l=In(i,P.toRaw(l.value),!0),d?l:["".concat(i,"=Ref<"),l,">"]):f.isFunction(l)?["".concat(i,"=fn").concat(l.name?"<".concat(l.name,">"):"")]:(l=P.toRaw(l),d?l:["".concat(i,"="),l])}function ft(i,l,d,h){var w;try{w=h?i(...h):i()}catch(S){Q(S,l,d)}return w}function ne(i,l,d,h){if(f.isFunction(i)){var w=ft(i,l,d,h);return w&&f.isPromise(w)&&w.catch(L=>{Q(L,l,d)}),w}for(var S=[],N=0;N<i.length;N++)S.push(ne(i[N],l,d,h));return S}function Q(i,l,d){if(l&&l.vnode,l){for(var h=l.parent,w=l.proxy,S=d;h;){var N=h.ec;if(N){for(var L=0;L<N.length;L++)if(N[L](i,w,S)===!1)return}h=h.parent}var M=l.appContext.config.errorHandler;if(M){ft(M,null,10,[i,w,S]);return}}En(i)}function En(i,l,d){console.error(i)}var yn=!1,an=!1,Vn=[],nn=0,xn=[],$n=null,mn=0,rn=[],_n=null,Bn=0,Rr={then(i){setTimeout(()=>i(),0)}},Jr=y.platform==="iOS",$e=Jr?Rr:Promise.resolve(),st=null,_t=null;function qt(i){var l=st||$e;return i?l.then(this?i.bind(this):i):l}function sn(i){for(var l=nn+1,d=Vn.length;l<d;){var h=l+d>>>1,w=yi(Vn[h]);w<i?l=h+1:d=h}return l}function on(i){(!Vn.length||!Vn.includes(i,yn&&i.allowRecurse?nn+1:nn))&&i!==_t&&(i.id==null?Vn.push(i):Vn.splice(sn(i.id),0,i),lr())}function lr(){!yn&&!an&&(an=!0,st=$e.then(Ji))}function cr(i){var l=Vn.indexOf(i);l>nn&&Vn.splice(l,1)}function Bi(i,l,d,h){f.isArray(i)?d.push(...i):(!l||!l.includes(i,i.allowRecurse?h+1:h))&&d.push(i),lr()}function Mi(i){Bi(i,$n,xn,mn)}function Mn(i){Bi(i,_n,rn,Bn)}function Hr(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(xn.length){for(_t=l,$n=[...new Set(xn)],xn.length=0,mn=0;mn<$n.length;mn++)$n[mn]();$n=null,mn=0,_t=null,Hr(i,l)}}function _r(i){if(rn.length){var l=[...new Set(rn)];if(rn.length=0,_n){_n.push(...l);return}for(_n=l,_n.sort((d,h)=>yi(d)-yi(h)),Bn=0;Bn<_n.length;Bn++)_n[Bn]();_n=null,Bn=0}}var yi=i=>i.id==null?1/0:i.id;function Ji(i){an=!1,yn=!0,Hr(i),Vn.sort((h,w)=>yi(h)-yi(w));var l=f.NOOP;try{for(nn=0;nn<Vn.length;nn++){var d=Vn[nn];d&&d.active!==!1&&ft(d,null,14)}}finally{nn=0,Vn.length=0,_r(),yn=!1,st=null,(Vn.length||xn.length||rn.length)&&Ji(i)}}y.devtools=void 0;var Di=[];function Lo(i,l){var d,h;if(y.devtools=i,y.devtools)y.devtools.enabled=!0,Di.forEach(S=>{var{event:N,args:L}=S;return y.devtools.emit(N,...L)}),Di=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((h=(d=window.navigator)===null||d===void 0?void 0:d.userAgent)===null||h===void 0?void 0:h.includes("jsdom"))){var w=l.__VUE_DEVTOOLS_HOOK_REPLAY__=l.__VUE_DEVTOOLS_HOOK_REPLAY__||[];w.push(S=>{Lo(S,l)}),setTimeout(()=>{y.devtools||(l.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Di=[])},3e3)}else Di=[]}function Oo(i,l){if(!i.isUnmounted){for(var d=i.vnode.props||f.EMPTY_OBJ,h=arguments.length,w=new Array(h>2?h-2:0),S=2;S<h;S++)w[S-2]=arguments[S];var N=w,L=l.startsWith("update:"),M=L&&l.slice(7);if(M&&M in d){var X="".concat(M==="modelValue"?"model":M,"Modifiers"),{number:fe,trim:Me}=d[X]||f.EMPTY_OBJ;Me?N=w.map(rt=>rt.trim()):fe&&(N=w.map(f.toNumber))}var re,de=d[re=f.toHandlerKey(l)]||d[re=f.toHandlerKey(f.camelize(l))];!de&&L&&(de=d[re=f.toHandlerKey(f.hyphenate(l))]),de&&ne(de,i,6,N);var xe=d[re+"Once"];if(xe){if(!i.emitted)i.emitted={};else if(i.emitted[re])return;i.emitted[re]=!0,ne(xe,i,6,N)}}}function br(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=l.emitsCache,w=h.get(i);if(w!==void 0)return w;var S=i.emits,N={},L=!1;if(!f.isFunction(i)){var M=X=>{var fe=br(X,l,!0);fe&&(L=!0,f.extend(N,fe))};!d&&l.mixins.length&&l.mixins.forEach(M),i.extends&&M(i.extends),i.mixins&&i.mixins.forEach(M)}return!S&&!L?(h.set(i,null),null):(f.isArray(S)?S.forEach(X=>N[X]=null):f.extend(N,S),h.set(i,N),N)}function Sn(i,l){return!i||!f.isOn(l)?!1:(l=l.slice(2).replace(/Once$/,""),f.hasOwn(i,l[0].toLowerCase()+l.slice(1))||f.hasOwn(i,f.hyphenate(l))||f.hasOwn(i,l))}var An=null,ai=null;function Zi(i){var l=An;return An=i,ai=i&&i.type.__scopeId||null,l}function wi(i){ai=i}function Xi(){ai=null}var Si=i=>ur;function ur(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:An;if(!l||i._n)return i;var d=function(){d._d&&lt(-1);var h=Zi(l),w=i(...arguments);return Zi(h),d._d&&lt(1),w};return d._n=!0,d._c=!0,d._d=!0,d}function jr(){}function zr(i){var{type:l,vnode:d,proxy:h,withProxy:w,props:S,propsOptions:[N],slots:L,attrs:M,emit:X,render:fe,renderCache:Me,data:re,setupState:de,ctx:xe,inheritAttrs:rt}=i,Pe,Se,Ie=Zi(i);try{if(d.shapeFlag&4){var Ce=w||h;Pe=Zn(fe.call(Ce,Ce,Me,S,de,re,xe)),Se=M}else{var Ye=l;Pe=Zn(Ye.length>1?Ye(S,{attrs:M,slots:L,emit:X}):Ye(S,null)),Se=l.props?M:To(M)}}catch(Xe){Ae.length=0,Q(Xe,i,1),Pe=Ht(be)}var He=Pe;if(Se&&rt!==!1){var it=Object.keys(Se),{shapeFlag:Fe}=He;it.length&&Fe&(1|6)&&(N&&it.some(f.isModelListener)&&(Se=Po(Se,N)),He=gr(He,Se))}return d.dirs&&(He.dirs=He.dirs?He.dirs.concat(d.dirs):d.dirs),d.transition&&(He.transition=d.transition),Pe=He,Zi(Ie),Pe}function Er(i){for(var l,d=0;d<i.length;d++){var h=i[d];if(nt(h)){if(h.type!==be||h.children==="v-if"){if(l)return;l=h}}else return}return l}var To=i=>{var l;for(var d in i)(d==="class"||d==="style"||f.isOn(d))&&((l||(l={}))[d]=i[d]);return l},Po=(i,l)=>{var d={};for(var h in i)(!f.isModelListener(h)||!(h.slice(9)in l))&&(d[h]=i[h]);return d};function Li(i,l,d){var{props:h,children:w,component:S}=i,{props:N,children:L,patchFlag:M}=l,X=S.emitsOptions;if(l.dirs||l.transition)return!0;if(d&&M>=0){if(M&1024)return!0;if(M&16)return h?xr(h,N,X):!!N;if(M&8)for(var fe=l.dynamicProps,Me=0;Me<fe.length;Me++){var re=fe[Me];if(N[re]!==h[re]&&!Sn(X,re))return!0}}else return(w||L)&&(!L||!L.$stable)?!0:h===N?!1:h?N?xr(h,N,X):!0:!!N;return!1}function xr(i,l,d){var h=Object.keys(l);if(h.length!==Object.keys(i).length)return!0;for(var w=0;w<h.length;w++){var S=h[w];if(l[S]!==i[S]&&!Sn(d,S))return!0}return!1}function qn(i,l){for(var{vnode:d,parent:h}=i;h&&h.subTree===d;)(d=h.vnode).el=l,h=h.parent}var uo=i=>i.__isSuspense,Zr={name:"Suspense",__isSuspense:!0,process(i,l,d,h,w,S,N,L,M,X){i==null?Qi(l,d,h,w,S,N,L,M,X):Xr(i,l,d,h,w,N,L,M,X)},hydrate:fo,create:si,normalize:ho},zn=Zr;function Wr(i,l){var d=i.props&&i.props[l];f.isFunction(d)&&d()}function Qi(i,l,d,h,w,S,N,L,M){var{p:X,o:{createElement:fe}}=M,Me=fe("div",l),re=i.suspense=si(i,w,h,l,Me,d,S,N,L,M);X(null,re.pendingBranch=i.ssContent,Me,null,h,re,S,N),re.deps>0?(Wr(i,"onPending"),Wr(i,"onFallback"),X(null,i.ssFallback,l,d,h,null,S,N),Br(re,i.ssFallback)):re.resolve()}function Xr(i,l,d,h,w,S,N,L,M){var{p:X,um:fe,o:{createElement:Me}}=M,re=l.suspense=i.suspense;re.vnode=l,l.el=i.el;var de=l.ssContent,xe=l.ssFallback,{activeBranch:rt,pendingBranch:Pe,isInFallback:Se,isHydrating:Ie}=re;if(Pe)re.pendingBranch=de,Dt(de,Pe)?(X(Pe,de,re.hiddenContainer,null,w,re,S,N,L),re.deps<=0?re.resolve():Se&&(X(rt,xe,d,h,w,null,S,N,L),Br(re,xe))):(re.pendingId++,Ie?(re.isHydrating=!1,re.activeBranch=Pe):fe(Pe,w,re),re.deps=0,re.effects.length=0,re.hiddenContainer=Me("div",d),Se?(X(null,de,re.hiddenContainer,null,w,re,S,N,L),re.deps<=0?re.resolve():(X(rt,xe,d,h,w,null,S,N,L),Br(re,xe))):rt&&Dt(de,rt)?(X(rt,de,d,h,w,re,S,N,L),re.resolve(!0)):(X(null,de,re.hiddenContainer,null,w,re,S,N,L),re.deps<=0&&re.resolve()));else if(rt&&Dt(de,rt))X(rt,de,d,h,w,re,S,N,L),Br(re,de);else if(Wr(l,"onPending"),re.pendingBranch=de,re.pendingId++,X(null,de,re.hiddenContainer,null,w,re,S,N,L),re.deps<=0)re.resolve();else{var{timeout:Ce,pendingId:Ye}=re;Ce>0?setTimeout(()=>{re.pendingId===Ye&&re.fallback(xe)},Ce):Ce===0&&re.fallback(xe)}}function si(i,l,d,h,w,S,N,L,M,X){var fe=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:Me,m:re,um:de,n:xe,o:{parentNode:rt,remove:Pe}}=X,Se=f.toNumber(i.props&&i.props.timeout),Ie={vnode:i,parent:l,parentComponent:d,isSVG:N,container:h,hiddenContainer:w,anchor:S,deps:0,pendingId:0,timeout:typeof Se=="number"?Se:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:fe,isUnmounted:!1,effects:[],resolve(){var Ce=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:Ye,activeBranch:He,pendingBranch:it,pendingId:Fe,effects:Xe,parentComponent:Ot,container:It}=Ie;if(Ie.isHydrating)Ie.isHydrating=!1;else if(!Ce){var Ft=He&&it.transition&&it.transition.mode==="out-in";Ft&&(He.transition.afterLeave=()=>{Fe===Ie.pendingId&&re(it,It,Nt,0)});var{anchor:Nt}=Ie;He&&(Nt=xe(He),de(He,Ot,Ie,!0)),Ft||re(it,It,Nt,0)}Br(Ie,it),Ie.pendingBranch=null,Ie.isInFallback=!1;for(var gt=Ie.parent,H=!1;gt;){if(gt.pendingBranch){gt.effects.push(...Xe),H=!0;break}gt=gt.parent}H||Mn(Xe),Ie.effects=[],Wr(Ye,"onResolve")},fallback(Ce){if(!!Ie.pendingBranch){var{vnode:Ye,activeBranch:He,parentComponent:it,container:Fe,isSVG:Xe}=Ie;Wr(Ye,"onFallback");var Ot=xe(He),It=()=>{!Ie.isInFallback||(Me(null,Ce,Fe,Ot,it,null,Xe,L,M),Br(Ie,Ce))},Ft=Ce.transition&&Ce.transition.mode==="out-in";Ft&&(He.transition.afterLeave=It),Ie.isInFallback=!0,de(He,it,null,!0),Ft||It()}},move(Ce,Ye,He){Ie.activeBranch&&re(Ie.activeBranch,Ce,Ye,He),Ie.container=Ce},next(){return Ie.activeBranch&&xe(Ie.activeBranch)},registerDep(Ce,Ye){var He=!!Ie.pendingBranch;He&&Ie.deps++;var it=Ce.vnode.el;Ce.asyncDep.catch(Fe=>{Q(Fe,Ce,0)}).then(Fe=>{if(!(Ce.isUnmounted||Ie.isUnmounted||Ie.pendingId!==Ce.suspenseId)){Ce.asyncResolved=!0;var{vnode:Xe}=Ce;io(Ce,Fe,!1),it&&(Xe.el=it);var Ot=!it&&Ce.subTree.el;Ye(Ce,Xe,rt(it||Ce.subTree.el),it?null:xe(Ce.subTree),Ie,N,M),Ot&&Pe(Ot),qn(Ce,Xe.el),He&&--Ie.deps===0&&Ie.resolve()}})},unmount(Ce,Ye){Ie.isUnmounted=!0,Ie.activeBranch&&de(Ie.activeBranch,d,Ce,Ye),Ie.pendingBranch&&de(Ie.pendingBranch,d,Ce,Ye)}};return Ie}function fo(i,l,d,h,w,S,N,L,M){var X=l.suspense=si(l,h,d,i.parentNode,document.createElement("div"),null,w,S,N,L,!0),fe=M(i,X.pendingBranch=l.ssContent,d,X,S,N);return X.deps===0&&X.resolve(),fe}function ho(i){var{shapeFlag:l,children:d}=i,h=l&32;i.ssContent=go(h?d.default:d),i.ssFallback=h?go(d.fallback):Ht(be)}function go(i){var l;if(f.isFunction(i)){var d=ut&&i._c;d&&(i._d=!1,bt()),i=i(),d&&(i._d=!0,l=Ke,jt())}if(f.isArray(i)){var h=Er(i);i=h}return i=Zn(i),l&&!i.dynamicChildren&&(i.dynamicChildren=l.filter(w=>w!==i)),i}function li(i,l){l&&l.pendingBranch?f.isArray(i)?l.effects.push(...i):l.effects.push(i):Mn(i)}function Br(i,l){i.activeBranch=l;var{vnode:d,parentComponent:h}=i,w=d.el=l.el;h&&h.subTree===d&&(h.vnode.el=w,qn(h,w))}function Ai(i,l){if(un){var d=un.provides,h=un.parent&&un.parent.provides;h===d&&(d=un.provides=Object.create(h)),d[i]=l,un.type.mpType==="app"&&un.appContext.app.provide(i,l)}}function ci(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=un||An;if(h){var w=h.parent==null?h.vnode.appContext&&h.vnode.appContext.provides:h.parent.provides;if(w&&i in w)return w[i];if(arguments.length>1)return d&&f.isFunction(l)?l.call(h.proxy):l}}function Kn(i,l){return Qr(i,null,l)}function Mr(i,l){return Qr(i,null,{flush:"post"})}function Fi(i,l){return Qr(i,null,{flush:"sync"})}var Bt={};function we(i,l,d){return Qr(i,l,d)}function Qr(i,l){var{immediate:d,deep:h,flush:w,onTrack:S,onTrigger:N}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,L=un,M,X=!1,fe=!1;if(P.isRef(i)?(M=()=>i.value,X=P.isShallow(i)):P.isReactive(i)?(M=()=>i,h=!0):f.isArray(i)?(fe=!0,X=i.some(P.isReactive),M=()=>i.map(Ie=>{if(P.isRef(Ie))return Ie.value;if(P.isReactive(Ie))return Dr(Ie);if(f.isFunction(Ie))return ft(Ie,L,2)})):f.isFunction(i)?l?M=()=>ft(i,L,2):M=()=>{if(!(L&&L.isUnmounted))return re&&re(),ne(i,L,3,[de])}:M=f.NOOP,l&&h){var Me=M;M=()=>Dr(Me())}var re,de=Ie=>{re=Se.onStop=()=>{ft(Ie,L,4)}};if(y.isInSSRComponentSetup)return de=f.NOOP,l?d&&ne(l,L,3,[M(),fe?[]:void 0,de]):M(),f.NOOP;var xe=fe?[]:Bt,rt=()=>{if(!!Se.active)if(l){var Ie=Se.run();(h||X||(fe?Ie.some((Ce,Ye)=>f.hasChanged(Ce,xe[Ye])):f.hasChanged(Ie,xe)))&&(re&&re(),ne(l,L,3,[Ie,xe===Bt?void 0:xe,de]),xe=Ie)}else Se.run()};rt.allowRecurse=!!l;var Pe;w==="sync"?Pe=rt:w==="post"?Pe=()=>or(rt,L&&L.suspense):Pe=()=>{!L||L.isMounted?Mi(rt):rt()};var Se=new P.ReactiveEffect(M,Pe);return l?d?rt():xe=Se.run():w==="post"?or(Se.run.bind(Se),L&&L.suspense):Se.run(),()=>{Se.stop(),L&&L.scope&&f.remove(L.scope.effects,Se)}}function po(i,l,d){var h=this.proxy,w=f.isString(i)?i.includes(".")?yr(h,i):()=>h[i]:i.bind(h,h),S;f.isFunction(l)?S=l:(S=l.handler,d=l);var N=un;Pr(this);var L=Qr(w,S.bind(h),d);return N?Pr(N):Wi(),L}function yr(i,l){var d=l.split(".");return()=>{for(var h=i,w=0;w<d.length&&h;w++)h=h[d[w]];return h}}function Dr(i,l){if(!f.isObject(i)||i.__v_skip||(l=l||new Set,l.has(i)))return i;if(l.add(i),P.isRef(i))Dr(i.value,l);else if(f.isArray(i))for(var d=0;d<i.length;d++)Dr(i[d],l);else if(f.isSet(i)||f.isMap(i))i.forEach(w=>{Dr(w,l)});else if(f.isPlainObject(i))for(var h in i)Dr(i[h],l);return i}function Nn(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Yr(()=>{i.isMounted=!0}),di(()=>{i.isUnmounting=!0}),i}var Qn=[Function,Array],Fo={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Qn,onEnter:Qn,onAfterEnter:Qn,onEnterCancelled:Qn,onBeforeLeave:Qn,onLeave:Qn,onAfterLeave:Qn,onLeaveCancelled:Qn,onBeforeAppear:Qn,onAppear:Qn,onAfterAppear:Qn,onAppearCancelled:Qn},setup(i,l){var{slots:d}=l,h=pr(),w=Nn(),S;return()=>{var N=d.default&&Wn(d.default(),!0);if(!(!N||!N.length)){var L=N[0];if(N.length>1){for(var M of N)if(M.type!==be){L=M;break}}var X=P.toRaw(i),{mode:fe}=X;if(w.isLeaving)return Vi(L);var Me=Jt(L);if(!Me)return Vi(L);var re=Cr(Me,X,w,h);Un(Me,re);var de=h.subTree,xe=de&&Jt(de),rt=!1,{getTransitionKey:Pe}=Me.type;if(Pe){var Se=Pe();S===void 0?S=Se:Se!==S&&(S=Se,rt=!0)}if(xe&&xe.type!==be&&(!Dt(Me,xe)||rt)){var Ie=Cr(xe,X,w,h);if(Un(xe,Ie),fe==="out-in")return w.isLeaving=!0,Ie.afterLeave=()=>{w.isLeaving=!1,h.update()},Vi(L);fe==="in-out"&&Me.type!==be&&(Ie.delayLeave=(Ce,Ye,He)=>{var it=Ci(w,xe);it[String(xe.key)]=xe,Ce._leaveCb=()=>{Ye(),Ce._leaveCb=void 0,delete re.delayedLeave},re.delayedLeave=He})}return L}}}},Wt=Fo;function Ci(i,l){var{leavingVNodes:d}=i,h=d.get(l.type);return h||(h=Object.create(null),d.set(l.type,h)),h}function Cr(i,l,d,h){var{appear:w,mode:S,persisted:N=!1,onBeforeEnter:L,onEnter:M,onAfterEnter:X,onEnterCancelled:fe,onBeforeLeave:Me,onLeave:re,onAfterLeave:de,onLeaveCancelled:xe,onBeforeAppear:rt,onAppear:Pe,onAfterAppear:Se,onAppearCancelled:Ie}=l,Ce=String(i.key),Ye=Ci(d,i),He=(Fe,Xe)=>{Fe&&ne(Fe,h,9,Xe)},it={mode:S,persisted:N,beforeEnter(Fe){var Xe=L;if(!d.isMounted)if(w)Xe=rt||L;else return;Fe._leaveCb&&Fe._leaveCb(!0);var Ot=Ye[Ce];Ot&&Dt(i,Ot)&&Ot.el._leaveCb&&Ot.el._leaveCb(),He(Xe,[Fe])},enter(Fe){var Xe=M,Ot=X,It=fe;if(!d.isMounted)if(w)Xe=Pe||M,Ot=Se||X,It=Ie||fe;else return;var Ft=!1,Nt=Fe._enterCb=gt=>{Ft||(Ft=!0,gt?He(It,[Fe]):He(Ot,[Fe]),it.delayedLeave&&it.delayedLeave(),Fe._enterCb=void 0)};Xe?(Xe(Fe,Nt),Xe.length<=1&&Nt()):Nt()},leave(Fe,Xe){var Ot=String(i.key);if(Fe._enterCb&&Fe._enterCb(!0),d.isUnmounting)return Xe();He(Me,[Fe]);var It=!1,Ft=Fe._leaveCb=Nt=>{It||(It=!0,Xe(),Nt?He(xe,[Fe]):He(de,[Fe]),Fe._leaveCb=void 0,Ye[Ot]===i&&delete Ye[Ot])};Ye[Ot]=i,re?(re(Fe,Ft),re.length<=1&&Ft()):Ft()},clone(Fe){return Cr(Fe,l,d,h)}};return it}function Vi(i){if(eo(i))return i=gr(i),i.children=null,i}function Jt(i){return eo(i)?i.children?i.children[0]:void 0:i}function Un(i,l){i.shapeFlag&6&&i.component?Un(i.component.subTree,l):i.shapeFlag&128?(i.ssContent.transition=l.clone(i.ssContent),i.ssFallback.transition=l.clone(i.ssFallback)):i.transition=l}function Wn(i){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,d=arguments.length>2?arguments[2]:void 0,h=[],w=0,S=0;S<i.length;S++){var N=i[S],L=d==null?N.key:String(d)+String(N.key!=null?N.key:S);N.type===se?(N.patchFlag&128&&w++,h=h.concat(Wn(N.children,l,L))):(l||N.type!==be)&&h.push(L!=null?gr(N,{key:L}):N)}if(w>1)for(var M=0;M<h.length;M++)h[M].patchFlag=-2;return h}function Gr(i){return f.isFunction(i)?{setup:i,name:i.name}:i}var $i=i=>!!i.type.__asyncLoader;function vo(i){f.isFunction(i)&&(i={loader:i});var{loader:l,loadingComponent:d,errorComponent:h,delay:w=200,timeout:S,suspensible:N=!0,onError:L}=i,M=null,X,fe=0,Me=()=>(fe++,M=null,re()),re=()=>{var de;return M||(de=M=l().catch(xe=>{if(xe=xe instanceof Error?xe:new Error(String(xe)),L)return new Promise((rt,Pe)=>{var Se=()=>rt(Me()),Ie=()=>Pe(xe);L(xe,Se,Ie,fe+1)});throw xe}).then(xe=>de!==M&&M?M:(xe&&(xe.__esModule||xe[Symbol.toStringTag]==="Module")&&(xe=xe.default),X=xe,xe)))};return Gr({name:"AsyncComponentWrapper",__asyncLoader:re,get __asyncResolved(){return X},setup(){var de=un;if(X)return()=>Oi(X,de);var xe=Ie=>{M=null,Q(Ie,de,13)};if(N&&de.suspense||y.isInSSRComponentSetup)return re().then(Ie=>()=>Oi(Ie,de)).catch(Ie=>(xe(Ie),()=>h?Ht(h,{error:Ie}):null));var rt=P.ref(!1),Pe=P.ref(),Se=P.ref(!!w);return w&&setTimeout(()=>{Se.value=!1},w),S!=null&&setTimeout(()=>{if(!rt.value&&!Pe.value){var Ie=new Error("Async component timed out after ".concat(S,"ms."));xe(Ie),Pe.value=Ie}},S),re().then(()=>{rt.value=!0,de.parent&&eo(de.parent.vnode)&&on(de.parent.update)}).catch(Ie=>{xe(Ie),Pe.value=Ie}),()=>{if(rt.value&&X)return Oi(X,de);if(Pe.value&&h)return Ht(h,{error:Pe.value});if(d&&!Se.value)return Ht(d)}}})}function Oi(i,l){var{vnode:{ref:d,props:h,children:w}}=l,S=Ht(i,h,w);return S.ref=d,S}var eo=i=>i.type.__isKeepAlive,Vo={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,l){var{slots:d}=l,h=pr(),w=h.ctx;if(!w.renderer)return d.default;var S=new Map,N=new Set,L=null,M=h.suspense,{renderer:{p:X,m:fe,um:Me,o:{createElement:re}}}=w,de=re("div",null);w.activate=(Ce,Ye,He,it,Fe)=>{var Xe=Ce.component;fe(Ce,Ye,He,0,M),X(Xe.vnode,Ce,Ye,He,Xe,M,it,Ce.slotScopeIds,Fe),or(()=>{Xe.isDeactivated=!1,Xe.a&&f.invokeArrayFns(Xe.a);var Ot=Ce.props&&Ce.props.onVnodeMounted;Ot&&Fr(Ot,Xe.parent,Ce)},M)},w.deactivate=Ce=>{var Ye=Ce.component;fe(Ce,de,null,1,M),or(()=>{Ye.da&&f.invokeArrayFns(Ye.da);var He=Ce.props&&Ce.props.onVnodeUnmounted;He&&Fr(He,Ye.parent,Ce),Ye.isDeactivated=!0},M)};function xe(Ce){tr(Ce),Me(Ce,h,M,!0)}function rt(Ce){S.forEach((Ye,He)=>{var it=Ir(Ye.type);it&&(!Ce||!Ce(it))&&Pe(He)})}function Pe(Ce){var Ye=S.get(Ce);!L||Ye.type!==L.type?xe(Ye):L&&tr(L),S.delete(Ce),N.delete(Ce)}we(()=>[i.include,i.exclude],Ce=>{var[Ye,He]=Ce;Ye&&rt(it=>Ui(Ye,it)),He&&rt(it=>!Ui(He,it))},{flush:"post",deep:!0});var Se=null,Ie=()=>{Se!=null&&S.set(Se,Ti(h.subTree))};return Yr(Ie),fi(Ie),di(()=>{S.forEach(Ce=>{var{subTree:Ye,suspense:He}=h,it=Ti(Ye);if(Ce.type===it.type){tr(it);var Fe=it.component.da;Fe&&or(Fe,He);return}xe(Ce)})}),()=>{if(Se=null,!d.default)return null;var Ce=d.default(),Ye=Ce[0];if(Ce.length>1)return L=null,Ce;if(!nt(Ye)||!(Ye.shapeFlag&4)&&!(Ye.shapeFlag&128))return L=null,Ye;var He=Ti(Ye),it=He.type,Fe=Ir($i(He)?He.type.__asyncResolved||{}:it),{include:Xe,exclude:Ot,max:It}=i;if(Xe&&(!Fe||!Ui(Xe,Fe))||Ot&&Fe&&Ui(Ot,Fe))return L=He,Ye;var Ft=He.key==null?it:He.key,Nt=S.get(Ft);return He.el&&(He=gr(He),Ye.shapeFlag&128&&(Ye.ssContent=He)),Se=Ft,Nt?(He.el=Nt.el,He.component=Nt.component,He.transition&&Un(He,He.transition),He.shapeFlag|=512,N.delete(Ft),N.add(Ft)):(N.add(Ft),It&&N.size>parseInt(It,10)&&Pe(N.values().next().value)),He.shapeFlag|=256,L=He,Ye}}},to=Vo;function Ui(i,l){return f.isArray(i)?i.some(d=>Ui(d,l)):f.isString(i)?i.split(",").includes(l):i.test?i.test(l):!1}function fr(i,l){er(i,"a",l)}function wr(i,l){er(i,"da",l)}function er(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:un,h=i.__wdc||(i.__wdc=()=>{for(var S=d;S;){if(S.isDeactivated)return;S=S.parent}return i()});if(dr(l,h,d),d)for(var w=d.parent;w&&w.parent;)eo(w.parent.vnode)&&Or(h,l,d,w),w=w.parent}function Or(i,l,d,h){var w=dr(l,i,h,!0);Pi(()=>{f.remove(h[l],w)},d)}function tr(i){var l=i.shapeFlag;l&256&&(l-=256),l&512&&(l-=512),i.shapeFlag=l}function Ti(i){return i.shapeFlag&128?i.ssContent:i}function dr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:un,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(d){if(I.isRootHook(i)&&d!==d.root&&(d=d.root,I.isRootImmediateHook(i))){var w=d.proxy;ne(l.bind(w),d,i,I.ON_LOAD===i?[w.$page.options]:[])}var{__page_container__:S}=d.root.vnode;S&&S.onInjectHook(i);var N=d[i]||(d[i]=[]),L=l.__weh||(l.__weh=function(){if(!d.isUnmounted){P.pauseTracking(),Pr(d);for(var M=arguments.length,X=new Array(M),fe=0;fe<M;fe++)X[fe]=arguments[fe];var Me=ne(l,d,i,X);return Wi(),P.resetTracking(),Me}});return h?N.unshift(L):N.push(L),L}}var Lr=i=>function(l){var d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:un;return(!y.isInSSRComponentSetup||i==="sp")&&dr(i,l,d)},Hi=Lr("bm"),Yr=Lr("m"),ui=Lr("bu"),fi=Lr("u"),di=Lr("bum"),Pi=Lr("um"),Io=Lr("sp"),B=Lr("rtg"),ee=Lr("rtc");function ce(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:un;dr("ec",i,l)}var ze=!0;function z(i){var l=pe(i),d=i.proxy,h=i.ctx;ze=!1,l.beforeCreate&&Z(l.beforeCreate,i,"bc");var{data:w,computed:S,methods:N,watch:L,provide:M,inject:X,created:fe,beforeMount:Me,mounted:re,beforeUpdate:de,updated:xe,activated:rt,deactivated:Pe,beforeDestroy:Se,beforeUnmount:Ie,destroyed:Ce,unmounted:Ye,render:He,renderTracked:it,renderTriggered:Fe,errorCaptured:Xe,serverPrefetch:Ot,expose:It,inheritAttrs:Ft,components:Nt,directives:gt,filters:H}=l,q=null;if(X&&$(X,h,q,i.appContext.config.unwrapInjectedRef),N)for(var ue in N){var _e=N[ue];f.isFunction(_e)&&(h[ue]=_e.bind(d))}if(w){var ge=w.call(d,d);f.isObject(ge)&&(i.data=P.reactive(ge))}if(ze=!0,S){var Ze=function(St){var Ut=S[St],Zt=f.isFunction(Ut)?Ut.bind(d,d):f.isFunction(Ut.get)?Ut.get.bind(d,d):f.NOOP,fn=!f.isFunction(Ut)&&f.isFunction(Ut.set)?Ut.set.bind(d):f.NOOP,nr=yo({get:Zt,set:fn});Object.defineProperty(h,St,{enumerable:!0,configurable:!0,get:()=>nr.value,set:rr=>nr.value=rr})};for(var ht in S)Ze(ht)}if(L)for(var Qe in L)ve(L[Qe],h,d,Qe);if(M){var et=f.isFunction(M)?M.call(d):M;Reflect.ownKeys(et).forEach(St=>{Ai(St,et[St])})}fe&&Z(fe,i,"c");function De(St,Ut){f.isArray(Ut)?Ut.forEach(Zt=>St(Zt.bind(d))):Ut&&St(Ut.bind(d))}if(De(Hi,Me),De(Yr,re),De(ui,de),De(fi,xe),De(fr,rt),De(wr,Pe),De(ce,Xe),De(ee,it),De(B,Fe),De(di,Ie),De(Pi,Ye),De(Io,Ot),f.isArray(It))if(It.length){var Ct=i.exposed||(i.exposed={});It.forEach(St=>{Object.defineProperty(Ct,St,{get:()=>d[St],set:Ut=>d[St]=Ut})})}else i.exposed||(i.exposed={});He&&i.render===f.NOOP&&(i.render=He),Ft!=null&&(i.inheritAttrs=Ft),Nt&&(i.components=Nt),gt&&(i.directives=gt);var wt=i.appContext.config.globalProperties.$applyOptions;wt&&wt(l,i,d)}function $(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(i)&&(i=hn(i));var h=function(S){var N=i[S],L=void 0;f.isObject(N)?"default"in N?L=ci(N.from||S,N.default,!0):L=ci(N.from||S):L=ci(N),P.isRef(L)&&d?Object.defineProperty(l,S,{enumerable:!0,configurable:!0,get:()=>L.value,set:M=>L.value=M}):l[S]=L};for(var w in i)h(w)}function Z(i,l,d){ne(f.isArray(i)?i.map(h=>h.bind(l.proxy)):i.bind(l.proxy),l,d)}function ve(i,l,d,h){var w=h.includes(".")?yr(d,h):()=>d[h];if(f.isString(i)){var S=l[i];f.isFunction(S)&&we(w,S)}else if(f.isFunction(i))we(w,i.bind(d));else if(f.isObject(i))if(f.isArray(i))i.forEach(L=>ve(L,l,d,h));else{var N=f.isFunction(i.handler)?i.handler.bind(d):l[i.handler];f.isFunction(N)&&we(w,N,i)}}function pe(i){var l=i.type,{mixins:d,extends:h}=l,{mixins:w,optionsCache:S,config:{optionMergeStrategies:N}}=i.appContext,L=S.get(l),M;return L?M=L:!w.length&&!d&&!h?M=l:(M={},w.length&&w.forEach(X=>at(M,X,N,!0)),at(M,l,N)),S.set(l,M),M}function at(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:w,extends:S}=l;S&&at(i,S,d,!0),w&&w.forEach(M=>at(i,M,d,!0));for(var N in l)if(!(h&&N==="expose")){var L=Cn[N]||d&&d[N];i[N]=L?L(i[N],l[N]):l[N]}return i}var Cn={data:Jn,props:Ii,emits:Ii,methods:Ii,computed:Ii,beforeCreate:kn,created:kn,beforeMount:kn,mounted:kn,beforeUpdate:kn,updated:kn,beforeDestroy:kn,beforeUnmount:kn,destroyed:kn,unmounted:kn,activated:kn,deactivated:kn,errorCaptured:kn,serverPrefetch:kn,components:Ii,directives:Ii,watch:ma,provide:Jn,inject:ei};function Jn(i,l){return l?i?function(){return f.extend(f.isFunction(i)?i.call(this,this):i,f.isFunction(l)?l.call(this,this):l)}:l:i}function ei(i,l){return Ii(hn(i),hn(l))}function hn(i){if(f.isArray(i)){for(var l={},d=0;d<i.length;d++)l[i[d]]=i[d];return l}return i}function kn(i,l){return i?[...new Set([].concat(i,l))]:l}function Ii(i,l){return i?f.extend(f.extend(Object.create(null),i),l):l}function ma(i,l){if(!i)return l;if(!l)return i;var d=f.extend(Object.create(null),i);for(var h in l)d[h]=kn(i[h],l[h]);return d}function ea(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,w={},S={};f.def(S,wn,1),i.propsDefaults=Object.create(null),No(i,l,w,S);for(var N in i.propsOptions[0])N in w||(w[N]=void 0);d?i.props=h?w:P.shallowReactive(w):i.type.props?i.props=w:i.props=S,i.attrs=S}function _a(i,l,d,h){var{props:w,attrs:S,vnode:{patchFlag:N}}=i,L=P.toRaw(w),[M]=i.propsOptions,X=!1;if((h||N>0)&&!(N&16)){if(N&8)for(var fe=i.vnode.dynamicProps,Me=0;Me<fe.length;Me++){var re=fe[Me];if(!Sn(i.emitsOptions,re)){var de=l[re];if(M)if(f.hasOwn(S,re))de!==S[re]&&(S[re]=de,X=!0);else{var xe=f.camelize(re);w[xe]=ba(M,L,xe,de,i,!1)}else de!==S[re]&&(S[re]=de,X=!0)}}}else{No(i,l,w,S)&&(X=!0);var rt;for(var Pe in L)(!l||!f.hasOwn(l,Pe)&&((rt=f.hyphenate(Pe))===Pe||!f.hasOwn(l,rt)))&&(M?d&&(d[Pe]!==void 0||d[rt]!==void 0)&&(w[Pe]=ba(M,L,Pe,void 0,i,!0)):delete w[Pe]);if(S!==L)for(var Se in S)(!l||!f.hasOwn(l,Se)&&!0)&&(delete S[Se],X=!0)}X&&P.trigger(i,"set","$attrs")}function No(i,l,d,h){var[w,S]=i.propsOptions,N=!1,L;if(l){for(var M in l)if(!f.isReservedProp(M)){var X=l[M],fe=void 0;w&&f.hasOwn(w,fe=f.camelize(M))?!S||!S.includes(fe)?d[fe]=X:(L||(L={}))[fe]=X:Sn(i.emitsOptions,M)||(!(M in h)||X!==h[M])&&(h[M]=X,N=!0)}}if(S)for(var Me=P.toRaw(d),re=L||f.EMPTY_OBJ,de=0;de<S.length;de++){var xe=S[de];d[xe]=ba(w,Me,xe,re[xe],i,!f.hasOwn(re,xe))}return N}function ba(i,l,d,h,w,S){var N=i[d];if(N!=null){var L=f.hasOwn(N,"default");if(L&&h===void 0){var M=N.default;if(N.type!==Function&&f.isFunction(M)){var{propsDefaults:X}=w;d in X?h=X[d]:(Pr(w),h=X[d]=M.call(null,l),Wi())}else h=M}N[0]&&(S&&!L?h=!1:N[1]&&(h===""||h===f.hyphenate(d))&&(h=!0))}return h}function La(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=l.propsCache,w=h.get(i);if(w)return w;var S=i.props,N={},L=[],M=!1;if(!f.isFunction(i)){var X=Ce=>{M=!0;var[Ye,He]=La(Ce,l,!0);f.extend(N,Ye),He&&L.push(...He)};!d&&l.mixins.length&&l.mixins.forEach(X),i.extends&&X(i.extends),i.mixins&&i.mixins.forEach(X)}if(!S&&!M)return h.set(i,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(S))for(var fe=0;fe<S.length;fe++){var Me=f.camelize(S[fe]);ta(Me)&&(N[Me]=f.EMPTY_OBJ)}else if(S)for(var re in S){var de=f.camelize(re);if(ta(de)){var xe=S[re],rt=N[de]=f.isArray(xe)||f.isFunction(xe)?{type:xe}:xe;if(rt){var Pe=$o(Boolean,rt.type),Se=$o(String,rt.type);rt[0]=Pe>-1,rt[1]=Se<0||Pe<Se,(Pe>-1||f.hasOwn(rt,"default"))&&L.push(de)}}}var Ie=[N,L];return h.set(i,Ie),Ie}function ta(i){return i[0]!=="$"}function Ea(i){var l=i&&i.toString().match(/^\s*function (\w+)/);return l?l[1]:i===null?"null":""}function ya(i,l){return Ea(i)===Ea(l)}function $o(i,l){return f.isArray(l)?l.findIndex(d=>ya(d,i)):f.isFunction(l)&&ya(l,i)?0:-1}var na=i=>i[0]==="_"||i==="$stable",hr=i=>f.isArray(i)?i.map(Zn):[Zn(i)],ti=(i,l,d)=>{var h=ur(function(){return hr(l(...arguments))},d);return h._c=!1,h},wa=(i,l,d)=>{var h=i._ctx;for(var w in i)if(!na(w)){var S=i[w];f.isFunction(S)?l[w]=ti(w,S,h):S!=null&&function(){var N=hr(S);l[w]=()=>N}()}},Fa=(i,l)=>{var d=hr(l);i.slots.default=()=>d},qr=(i,l)=>{if(i.vnode.shapeFlag&32){var d=l._;d?(i.slots=P.toRaw(l),f.def(l,"_",d)):wa(l,i.slots={})}else i.slots={},l&&Fa(i,l);f.def(i.slots,wn,1)},Ss=(i,l,d)=>{var{vnode:h,slots:w}=i,S=!0,N=f.EMPTY_OBJ;if(h.shapeFlag&32){var L=l._;L?d&&L===1?S=!1:(f.extend(w,l),!d&&L===1&&delete w._):(S=!l.$stable,wa(l,w)),N=l}else l&&(Fa(i,l),N={default:1});if(S)for(var M in w)!na(M)&&!(M in N)&&delete w[M]};function ji(i,l){var d=An;if(d===null)return i;for(var h=Pt(d)||d.proxy,w=i.dirs||(i.dirs=[]),S=0;S<l.length;S++){var[N,L,M,X=f.EMPTY_OBJ]=l[S];f.isFunction(N)&&(N={mounted:N,updated:N}),N.deep&&Dr(L),w.push({dir:N,instance:h,value:L,oldValue:void 0,arg:M,modifiers:X})}return i}function Ni(i,l,d,h){for(var w=i.dirs,S=l&&l.dirs,N=0;N<w.length;N++){var L=w[N];S&&(L.oldValue=S[N].value);var M=L.dir[h];M&&(P.pauseTracking(),ne(M,d,8,[i.el,L,i,l]),P.resetTracking())}}function os(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Uo=0;function Sa(i,l){return function(h){var w=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(h)||(h=Object.assign({},h)),w!=null&&!f.isObject(w)&&(w=null);var S=os(),N=new Set,L=!1,M=S.app={_uid:Uo++,_component:h,_props:w,_container:null,_context:S,_instance:null,version:Na,get config(){return S.config},set config(X){},use(X){for(var fe=arguments.length,Me=new Array(fe>1?fe-1:0),re=1;re<fe;re++)Me[re-1]=arguments[re];return N.has(X)||(X&&f.isFunction(X.install)?(N.add(X),X.install(M,...Me)):f.isFunction(X)&&(N.add(X),X(M,...Me))),M},mixin(X){return S.mixins.includes(X)||S.mixins.push(X),M},component(X,fe){return fe?(S.components[X]=fe,M):S.components[X]},directive(X,fe){return fe?(S.directives[X]=fe,M):S.directives[X]},mount(X,fe,Me){if(!L){var re=Ht(h,w);return re.appContext=S,fe&&l?l(re,X):i(re,X,Me),L=!0,M._container=X,X.__vue_app__=M,Pt(re.component)||re.component.proxy}},unmount(){L&&(i(null,M._container),delete M._container.__vue_app__)},provide(X,fe){return S.provides[X]=fe,M}};return M}}function ki(i,l,d,h){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(i)){i.forEach((rt,Pe)=>ki(rt,l&&(f.isArray(l)?l[Pe]:l),d,h,w));return}if(!($i(h)&&!w)){var S=h.shapeFlag&4?Pt(h.component)||h.component.proxy:h.el,N=w?null:S,{i:L,r:M}=i,X=l&&l.r,fe=L.refs===f.EMPTY_OBJ?L.refs={}:L.refs,Me=L.setupState;if(X!=null&&X!==M&&(f.isString(X)?(fe[X]=null,f.hasOwn(Me,X)&&(Me[X]=null)):P.isRef(X)&&(X.value=null)),f.isFunction(M))ft(M,L,12,[N,fe]);else{var re=f.isString(M),de=P.isRef(M);if(re||de){var xe=()=>{if(i.f){var rt=re?fe[M]:M.value;w?f.isArray(rt)&&f.remove(rt,S):f.isArray(rt)?rt.includes(S)||rt.push(S):re?(fe[M]=[S],f.hasOwn(Me,M)&&(Me[M]=fe[M])):(M.value=[S],i.k&&(fe[i.k]=M.value))}else re?(fe[M]=N,f.hasOwn(Me,M)&&(Me[M]=N)):P.isRef(M)&&(M.value=N,i.k&&(fe[i.k]=N))};N?(xe.id=-1,or(xe,d)):xe()}}}}var ln=!1,Ho=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",jo=i=>i.nodeType===8;function Hn(i){var{mt:l,p:d,o:{patchProp:h,nextSibling:w,parentNode:S,remove:N,insert:L,createComment:M}}=i,X=(Pe,Se)=>{if(!Se.hasChildNodes()){d(null,Pe,Se),_r();return}ln=!1,fe(Se.firstChild,Pe,null,null,null),_r(),ln&&console.error("Hydration completed but contains mismatches.")},fe=function(Pe,Se,Ie,Ce,Ye){var He=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,it=jo(Pe)&&Pe.data==="[",Fe=()=>xe(Pe,Se,Ie,Ce,Ye,it),{type:Xe,ref:Ot,shapeFlag:It}=Se,Ft=Pe.nodeType;Se.el=Pe;var Nt=null;switch(Xe){case me:Ft!==3?Nt=Fe():(Pe.data!==Se.children&&(ln=!0,Pe.data=Se.children),Nt=w(Pe));break;case be:Ft!==8||it?Nt=Fe():Nt=w(Pe);break;case he:if(Ft!==1)Nt=Fe();else{Nt=Pe;for(var gt=!Se.children.length,H=0;H<Se.staticCount;H++)gt&&(Se.children+=Nt.outerHTML),H===Se.staticCount-1&&(Se.anchor=Nt),Nt=w(Nt);return Nt}break;case se:it?Nt=de(Pe,Se,Ie,Ce,Ye,He):Nt=Fe();break;default:if(It&1)Ft!==1||Se.type.toLowerCase()!==Pe.tagName.toLowerCase()?Nt=Fe():Nt=Me(Pe,Se,Ie,Ce,Ye,He);else if(It&6){Se.slotScopeIds=Ye;var q=S(Pe);if(l(Se,q,null,Ie,Ce,Ho(q),He),Nt=it?rt(Pe):w(Pe),$i(Se)){var ue;it?(ue=Ht(se),ue.anchor=Nt?Nt.previousSibling:q.lastChild):ue=Pe.nodeType===3?Go(""):Ht("div"),ue.el=Pe,Se.component.subTree=ue}}else It&64?Ft!==8?Nt=Fe():Nt=Se.type.hydrate(Pe,Se,Ie,Ce,Ye,He,i,re):It&128&&(Nt=Se.type.hydrate(Pe,Se,Ie,Ce,Ho(S(Pe)),Ye,He,i,fe))}return Ot!=null&&ki(Ot,null,Ce,Se),Nt},Me=(Pe,Se,Ie,Ce,Ye,He)=>{He=He||!!Se.dynamicChildren;var{type:it,props:Fe,patchFlag:Xe,shapeFlag:Ot,dirs:It}=Se,Ft=it==="input"&&It||it==="option";if(Ft||Xe!==-1){if(It&&Ni(Se,null,Ie,"created"),Fe)if(Ft||!He||Xe&(16|32))for(var Nt in Fe)(Ft&&Nt.endsWith("value")||f.isOn(Nt)&&!f.isReservedProp(Nt))&&h(Pe,Nt,null,Fe[Nt],!1,void 0,Ie);else Fe.onClick&&h(Pe,"onClick",null,Fe.onClick,!1,void 0,Ie);var gt;if((gt=Fe&&Fe.onVnodeBeforeMount)&&Fr(gt,Ie,Se),It&&Ni(Se,null,Ie,"beforeMount"),((gt=Fe&&Fe.onVnodeMounted)||It)&&li(()=>{gt&&Fr(gt,Ie,Se),It&&Ni(Se,null,Ie,"mounted")},Ce),Ot&16&&!(Fe&&(Fe.innerHTML||Fe.textContent)))for(var H=re(Pe.firstChild,Se,Pe,Ie,Ce,Ye,He);H;){ln=!0;var q=H;H=H.nextSibling,N(q)}else Ot&8&&Pe.textContent!==Se.children&&(ln=!0,Pe.textContent=Se.children)}return Pe.nextSibling},re=(Pe,Se,Ie,Ce,Ye,He,it)=>{it=it||!!Se.dynamicChildren;for(var Fe=Se.children,Xe=Fe.length,Ot=0;Ot<Xe;Ot++){var It=it?Fe[Ot]:Fe[Ot]=Zn(Fe[Ot]);if(Pe)Pe=fe(Pe,It,Ce,Ye,He,it);else{if(It.type===me&&!It.children)continue;ln=!0,d(null,It,Ie,null,Ce,Ye,Ho(Ie),He)}}return Pe},de=(Pe,Se,Ie,Ce,Ye,He)=>{var{slotScopeIds:it}=Se;it&&(Ye=Ye?Ye.concat(it):it);var Fe=S(Pe),Xe=re(w(Pe),Se,Fe,Ie,Ce,Ye,He);return Xe&&jo(Xe)&&Xe.data==="]"?w(Se.anchor=Xe):(ln=!0,L(Se.anchor=M("]",Fe),Fe,Xe),Xe)},xe=(Pe,Se,Ie,Ce,Ye,He)=>{if(ln=!0,Se.el=null,He)for(var it=rt(Pe);;){var Fe=w(Pe);if(Fe&&Fe!==it)N(Fe);else break}var Xe=w(Pe),Ot=S(Pe);return N(Pe),d(null,Se,Ot,Xe,Ie,Ce,Ho(Ot),Ye),Xe},rt=Pe=>{for(var Se=0;Pe;)if(Pe=w(Pe),Pe&&jo(Pe)&&(Pe.data==="["&&Se++,Pe.data==="]")){if(Se===0)return w(Pe);Se--}return Pe};return[X,fe]}var or=li;function mo(i){return ni(i)}function Va(i){return ni(i,Hn)}function ni(i,l){var d=f.getGlobalThis();d.__VUE__=!0;var{insert:h,remove:w,patchProp:S,forcePatchProp:N,createElement:L,createText:M,createComment:X,setText:fe,setElementText:Me,parentNode:re,nextSibling:de,setScopeId:xe=f.NOOP,cloneNode:rt,insertStaticContent:Pe}=i,Se=function(W,te,Ee){var Te=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Ve=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,ot=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,dt=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!te.dynamicChildren;if(W!==te){W&&!Dt(W,te)&&(Te=fn(W),Ct(W,Ve,ot,!0),W=null),te.patchFlag===-2&&(tt=!1,te.dynamicChildren=null);var{type:je,ref:kt,shapeFlag:Vt}=te;switch(je){case me:Ie(W,te,Ee,Te);break;case be:Ce(W,te,Ee,Te);break;case he:W==null&&Ye(te,Ee,Te,dt);break;case se:H(W,te,Ee,Te,Ve,ot,dt,qe,tt);break;default:Vt&1?Fe(W,te,Ee,Te,Ve,ot,dt,qe,tt):Vt&6?q(W,te,Ee,Te,Ve,ot,dt,qe,tt):(Vt&64||Vt&128)&&je.process(W,te,Ee,Te,Ve,ot,dt,qe,tt,rr)}kt!=null&&Ve&&ki(kt,W&&W.ref,ot,te||W,!te)}},Ie=(W,te,Ee,Te)=>{if(W==null)h(te.el=M(te.children,Ee),Ee,Te);else{var Ve=te.el=W.el;te.children!==W.children&&fe(Ve,te.children)}},Ce=(W,te,Ee,Te)=>{W==null?h(te.el=X(te.children||"",Ee),Ee,Te):te.el=W.el},Ye=(W,te,Ee,Te)=>{[W.el,W.anchor]=Pe(W.children,te,Ee,Te,W.el,W.anchor)},He=(W,te,Ee)=>{for(var{el:Te,anchor:Ve}=W,ot;Te&&Te!==Ve;)ot=de(Te),h(Te,te,Ee),Te=ot;h(Ve,te,Ee)},it=W=>{for(var{el:te,anchor:Ee}=W,Te;te&&te!==Ee;)Te=de(te),w(te),te=Te;w(Ee)},Fe=(W,te,Ee,Te,Ve,ot,dt,qe,tt)=>{dt=dt||te.type==="svg",W==null?Xe(te,Ee,Te,Ve,ot,dt,qe,tt):Ft(W,te,Ve,ot,dt,qe,tt)},Xe=(W,te,Ee,Te,Ve,ot,dt,qe)=>{var tt,je,{type:kt,props:Vt,shapeFlag:$t,transition:tn,patchFlag:Vr,dirs:vr}=W;if(W.el&&rt!==void 0&&Vr===-1)tt=W.el=rt(W.el);else{if(tt=W.el=L(W.type,te),$t&8?Me(tt,W.children):$t&16&&It(W.children,tt,null,Te,Ve,ot&&kt!=="foreignObject",dt,qe),vr&&Ni(W,null,Te,"created"),Vt){for(var $r in Vt)$r!=="value"&&!f.isReservedProp($r)&&S(tt,$r,null,Vt[$r],ot,W.children,Te,Ve,Zt);"value"in Vt&&S(tt,"value",null,Vt.value),(je=Vt.onVnodeBeforeMount)&&Fr(je,Te,W)}Ot(tt,W,W.scopeId,dt,Te)}Object.defineProperty(tt,"__vueParentComponent",{value:Te,enumerable:!1}),vr&&Ni(W,null,Te,"beforeMount");var mi=(!Ve||Ve&&!Ve.pendingBranch)&&tn&&!tn.persisted;mi&&tn.beforeEnter(tt),h(tt,te,Ee),((je=Vt&&Vt.onVnodeMounted)||mi||vr)&&or(()=>{je&&Fr(je,Te,W),mi&&tn.enter(tt),vr&&Ni(W,null,Te,"mounted")},Ve)},Ot=(W,te,Ee,Te,Ve)=>{if(Ee&&xe(W,Ee),Te)for(var ot=0;ot<Te.length;ot++)xe(W,Te[ot]);if(Ve){var dt=Ve.subTree;if(te===dt){var qe=Ve.vnode;Ot(W,qe,qe.scopeId,qe.slotScopeIds,Ve.parent)}}},It=function(W,te,Ee,Te,Ve,ot,dt,qe){for(var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,je=tt;je<W.length;je++){var kt=W[je]=qe?Tn(W[je]):Zn(W[je]);Se(null,kt,te,Ee,Te,Ve,ot,dt,qe)}},Ft=(W,te,Ee,Te,Ve,ot,dt)=>{var qe=te.el=W.el,{patchFlag:tt,dynamicChildren:je,dirs:kt}=te;tt|=W.patchFlag&16;var Vt=W.props||f.EMPTY_OBJ,$t=te.props||f.EMPTY_OBJ,tn;Ee&&Sr(Ee,!1),(tn=$t.onVnodeBeforeUpdate)&&Fr(tn,Ee,te,W),kt&&Ni(te,W,Ee,"beforeUpdate"),Ee&&Sr(Ee,!0);var Vr=Ve&&te.type!=="foreignObject";if(je?Nt(W.dynamicChildren,je,qe,Ee,Te,Vr,ot):dt||ht(W,te,qe,null,Ee,Te,Vr,ot,!1),tt>0){if(tt&16)gt(qe,te,Vt,$t,Ee,Te,Ve);else if(tt&2&&Vt.class!==$t.class&&S(qe,"class",null,$t.class,Ve),tt&4&&S(qe,"style",Vt.style,$t.style,Ve),tt&8)for(var vr=te.dynamicProps,$r=0;$r<vr.length;$r++){var mi=vr[$r],xo=Vt[mi],so=$t[mi];(so!==xo||mi==="value"||N&&N(qe,mi))&&S(qe,mi,xo,so,Ve,W.children,Ee,Te,Zt)}tt&1&&W.children!==te.children&&Me(qe,te.children)}else!dt&&je==null&&gt(qe,te,Vt,$t,Ee,Te,Ve);((tn=$t.onVnodeUpdated)||kt)&&or(()=>{tn&&Fr(tn,Ee,te,W),kt&&Ni(te,W,Ee,"updated")},Te)},Nt=(W,te,Ee,Te,Ve,ot,dt)=>{for(var qe=0;qe<te.length;qe++){var tt=W[qe],je=te[qe],kt=tt.el&&(tt.type===se||!Dt(tt,je)||tt.shapeFlag&(6|64))?re(tt.el):Ee;Se(tt,je,kt,null,Te,Ve,ot,dt,!0)}},gt=(W,te,Ee,Te,Ve,ot,dt)=>{if(Ee!==Te){for(var qe in Te)if(!f.isReservedProp(qe)){var tt=Te[qe],je=Ee[qe];(tt!==je&&qe!=="value"||N&&N(W,qe))&&S(W,qe,je,tt,dt,te.children,Ve,ot,Zt)}if(Ee!==f.EMPTY_OBJ)for(var kt in Ee)!f.isReservedProp(kt)&&!(kt in Te)&&S(W,kt,Ee[kt],null,dt,te.children,Ve,ot,Zt);"value"in Te&&S(W,"value",Ee.value,Te.value)}},H=(W,te,Ee,Te,Ve,ot,dt,qe,tt)=>{var je=te.el=W?W.el:M("",Ee),kt=te.anchor=W?W.anchor:M("",Ee),{patchFlag:Vt,dynamicChildren:$t,slotScopeIds:tn}=te;tn&&(qe=qe?qe.concat(tn):tn),W==null?(h(je,Ee,Te),h(kt,Ee,Te),It(te.children,Ee,kt,Ve,ot,dt,qe,tt)):Vt>0&&Vt&64&&$t&&W.dynamicChildren?(Nt(W.dynamicChildren,$t,Ee,Ve,ot,dt,qe),(te.key!=null||Ve&&te===Ve.subTree)&&Aa(W,te,!0)):ht(W,te,Ee,kt,Ve,ot,dt,qe,tt)},q=(W,te,Ee,Te,Ve,ot,dt,qe,tt)=>{te.slotScopeIds=qe,W==null?te.shapeFlag&512?Ve.ctx.activate(te,Ee,Te,dt,tt):ue(te,Ee,Te,Ve,ot,dt,tt):_e(W,te,tt)},ue=(W,te,Ee,Te,Ve,ot,dt)=>{var qe=W.component=Dn(W,Te,Ve);if(eo(W)&&(qe.ctx.renderer=rr),Pa(qe),qe.asyncDep){if(Ve&&Ve.registerDep(qe,ge),!W.el){var tt=qe.subTree=Ht(be);Ce(null,tt,te,Ee)}return}if(ge(qe,W,te,Ee,Ve,ot,dt),qe.$wxsModules){var je=I.resolveOwnerEl(qe);if(je){je.setAttribute(I.ATTR_V_OWNER_ID,qe.uid);var{$renderjsModules:kt}=qe.type;kt&&je.setAttribute(I.ATTR_V_RENDERJS,kt)}}},_e=(W,te,Ee)=>{var Te=te.component=W.component;if(Li(W,te,Ee))if(Te.asyncDep&&!Te.asyncResolved){Ze(Te,te,Ee);return}else Te.next=te,cr(Te.update),Te.update();else te.component=W.component,te.el=W.el,Te.vnode=te},ge=(W,te,Ee,Te,Ve,ot,dt)=>{var qe=()=>{if(W.isMounted){var{next:Ur,bu:gs,u:Bs,parent:lo,vnode:Za}=W,ps=Ur,Ba;Sr(W,!1),Ur?(Ur.el=Za.el,Ze(W,Ur,dt)):Ur=Za,gs&&f.invokeArrayFns(gs),(Ba=Ur.props&&Ur.props.onVnodeBeforeUpdate)&&Fr(Ba,lo,Ur,Za),Sr(W,!0);var Xa=zr(W),fa=W.subTree;W.subTree=Xa,Se(fa,Xa,re(fa.el),fn(fa),W,Ve,ot),Ur.el=Xa.el,ps===null&&qn(W,Xa.el),Bs&&or(Bs,Ve),(Ba=Ur.props&&Ur.props.onVnodeUpdated)&&or(()=>Fr(Ba,lo,Ur,Za),Ve)}else{var kt,{el:Vt,props:$t}=te,{bm:tn,m:Vr,parent:vr}=W,$r=$i(te);if(Sr(W,!1),tn&&f.invokeArrayFns(tn),!$r&&(kt=$t&&$t.onVnodeBeforeMount)&&Fr(kt,vr,te),Sr(W,!0),Vt&&Ro){var mi=()=>{W.subTree=zr(W),Ro(Vt,W.subTree,W,Ve,null)};$r?te.type.__asyncLoader().then(()=>!W.isUnmounted&&mi()):mi()}else{var xo=W.subTree=zr(W);Se(null,xo,Ee,Te,W,Ve,ot),te.el=xo.el}if(Vr&&or(Vr,Ve),!$r&&(kt=$t&&$t.onVnodeMounted)){var so=te;or(()=>Fr(kt,vr,so),Ve)}te.shapeFlag&256&&W.a&&or(W.a,Ve),W.isMounted=!0,te=Ee=Te=null}},tt=W.effect=new P.ReactiveEffect(qe,()=>on(W.update),W.scope),je=W.update=tt.run.bind(tt);je.id=W.uid,Sr(W,!0),je()},Ze=(W,te,Ee)=>{te.component=W;var Te=W.vnode.props;W.vnode=te,W.next=null,_a(W,te.props,Te,Ee),Ss(W,te.children,Ee),P.pauseTracking(),Hr(void 0,W.update),P.resetTracking()},ht=function(W,te,Ee,Te,Ve,ot,dt,qe){var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,je=W&&W.children,kt=W?W.shapeFlag:0,Vt=te.children,{patchFlag:$t,shapeFlag:tn}=te;if($t>0){if($t&128){et(je,Vt,Ee,Te,Ve,ot,dt,qe,tt);return}else if($t&256){Qe(je,Vt,Ee,Te,Ve,ot,dt,qe,tt);return}}tn&8?(kt&16&&Zt(je,Ve,ot),Vt!==je&&Me(Ee,Vt)):kt&16?tn&16?et(je,Vt,Ee,Te,Ve,ot,dt,qe,tt):Zt(je,Ve,ot,!0):(kt&8&&Me(Ee,""),tn&16&&It(Vt,Ee,Te,Ve,ot,dt,qe,tt))},Qe=(W,te,Ee,Te,Ve,ot,dt,qe,tt)=>{W=W||f.EMPTY_ARR,te=te||f.EMPTY_ARR;var je=W.length,kt=te.length,Vt=Math.min(je,kt),$t;for($t=0;$t<Vt;$t++){var tn=te[$t]=tt?Tn(te[$t]):Zn(te[$t]);Se(W[$t],tn,Ee,null,Ve,ot,dt,qe,tt)}je>kt?Zt(W,Ve,ot,!0,!1,Vt):It(te,Ee,Te,Ve,ot,dt,qe,tt,Vt)},et=(W,te,Ee,Te,Ve,ot,dt,qe,tt)=>{for(var je=0,kt=te.length,Vt=W.length-1,$t=kt-1;je<=Vt&&je<=$t;){var tn=W[je],Vr=te[je]=tt?Tn(te[je]):Zn(te[je]);if(Dt(tn,Vr))Se(tn,Vr,Ee,null,Ve,ot,dt,qe,tt);else break;je++}for(;je<=Vt&&je<=$t;){var vr=W[Vt],$r=te[$t]=tt?Tn(te[$t]):Zn(te[$t]);if(Dt(vr,$r))Se(vr,$r,Ee,null,Ve,ot,dt,qe,tt);else break;Vt--,$t--}if(je>Vt){if(je<=$t)for(var mi=$t+1,xo=mi<kt?te[mi].el:Te;je<=$t;)Se(null,te[je]=tt?Tn(te[je]):Zn(te[je]),Ee,xo,Ve,ot,dt,qe,tt),je++}else if(je>$t)for(;je<=Vt;)Ct(W[je],Ve,ot,!0),je++;else{var so=je,Ur=je,gs=new Map;for(je=Ur;je<=$t;je++){var Bs=te[je]=tt?Tn(te[je]):Zn(te[je]);Bs.key!=null&&gs.set(Bs.key,je)}var lo,Za=0,ps=$t-Ur+1,Ba=!1,Xa=0,fa=new Array(ps);for(je=0;je<ps;je++)fa[je]=0;for(je=so;je<=Vt;je++){var Xo=W[je];if(Za>=ps){Ct(Xo,Ve,ot,!0);continue}var co=void 0;if(Xo.key!=null)co=gs.get(Xo.key);else for(lo=Ur;lo<=$t;lo++)if(fa[lo-Ur]===0&&Dt(Xo,te[lo])){co=lo;break}co===void 0?Ct(Xo,Ve,ot,!0):(fa[co-Ur]=je+1,co>=Xa?Xa=co:Ba=!0,Se(Xo,te[co],Ee,null,Ve,ot,dt,qe,tt),Za++)}var Kl=Ba?Ca(fa):f.EMPTY_ARR;for(lo=Kl.length-1,je=ps-1;je>=0;je--){var yl=Ur+je,mc=te[yl],wl=yl+1<kt?te[yl+1].el:Te;fa[je]===0?Se(null,mc,Ee,wl,Ve,ot,dt,qe,tt):Ba&&(lo<0||je!==Kl[lo]?De(mc,Ee,wl,2):lo--)}}},De=function(W,te,Ee,Te){var Ve=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:ot,type:dt,transition:qe,children:tt,shapeFlag:je}=W;if(je&6){De(W.component.subTree,te,Ee,Te);return}if(je&128){W.suspense.move(te,Ee,Te);return}if(je&64){dt.move(W,te,Ee,rr);return}if(dt===se){h(ot,te,Ee);for(var kt=0;kt<tt.length;kt++)De(tt[kt],te,Ee,Te);h(W.anchor,te,Ee);return}if(dt===he){He(W,te,Ee);return}var Vt=Te!==2&&je&1&&qe;if(Vt)if(Te===0)qe.beforeEnter(ot),h(ot,te,Ee),or(()=>qe.enter(ot),Ve);else{var{leave:$t,delayLeave:tn,afterLeave:Vr}=qe,vr=()=>h(ot,te,Ee),$r=()=>{$t(ot,()=>{vr(),Vr&&Vr()})};tn?tn(ot,vr,$r):$r()}else h(ot,te,Ee)},Ct=function(W,te,Ee){var Te=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Ve=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:ot,props:dt,ref:qe,children:tt,dynamicChildren:je,shapeFlag:kt,patchFlag:Vt,dirs:$t}=W;if(qe!=null&&ki(qe,null,Ee,W,!0),kt&256){te.ctx.deactivate(W);return}var tn=kt&1&&$t,Vr=!$i(W),vr;if(Vr&&(vr=dt&&dt.onVnodeBeforeUnmount)&&Fr(vr,te,W),kt&6)Ut(W.component,Ee,Te);else{if(kt&128){W.suspense.unmount(Ee,Te);return}tn&&Ni(W,null,te,"beforeUnmount"),kt&64?W.type.remove(W,te,Ee,Ve,rr,Te):je&&(ot!==se||Vt>0&&Vt&64)?Zt(je,te,Ee,!1,!0):(ot===se&&Vt&(128|256)||!Ve&&kt&16)&&Zt(tt,te,Ee),Te&&wt(W)}(Vr&&(vr=dt&&dt.onVnodeUnmounted)||tn)&&or(()=>{vr&&Fr(vr,te,W),tn&&Ni(W,null,te,"unmounted")},Ee)},wt=W=>{var{type:te,el:Ee,anchor:Te,transition:Ve}=W;if(te===se){St(Ee,Te);return}if(te===he){it(W);return}var ot=()=>{w(Ee),Ve&&!Ve.persisted&&Ve.afterLeave&&Ve.afterLeave()};if(W.shapeFlag&1&&Ve&&!Ve.persisted){var{leave:dt,delayLeave:qe}=Ve,tt=()=>dt(Ee,ot);qe?qe(W.el,ot,tt):tt()}else ot()},St=(W,te)=>{for(var Ee;W!==te;)Ee=de(W),w(W),W=Ee;w(te)},Ut=(W,te,Ee)=>{var{bum:Te,scope:Ve,update:ot,subTree:dt,um:qe}=W;Te&&f.invokeArrayFns(Te),Ve.stop(),ot&&(ot.active=!1,Ct(dt,W,te,Ee)),qe&&or(qe,te),or(()=>{W.isUnmounted=!0},te),te&&te.pendingBranch&&!te.isUnmounted&&W.asyncDep&&!W.asyncResolved&&W.suspenseId===te.pendingId&&(te.deps--,te.deps===0&&te.resolve())},Zt=function(W,te,Ee){for(var Te=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Ve=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,ot=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,dt=ot;dt<W.length;dt++)Ct(W[dt],te,Ee,Te,Ve)},fn=W=>W.shapeFlag&6?fn(W.component.subTree):W.shapeFlag&128?W.suspense.next():de(W.anchor||W.el),nr=(W,te,Ee)=>{W==null?te._vnode&&Ct(te._vnode,null,null,!0):Se(te._vnode||null,W,te,null,null,null,Ee),_r(),te._vnode=W},rr={p:Se,um:Ct,m:De,r:wt,mt:ue,mc:It,pc:ht,pbc:Nt,n:fn,o:i},So,Ro;return l&&([So,Ro]=l(rr)),{render:nr,hydrate:So,createApp:Sa(nr,So)}}function Sr(i,l){var{effect:d,update:h}=i;d.allowRecurse=h.allowRecurse=l}function Aa(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=i.children,w=l.children;if(f.isArray(h)&&f.isArray(w))for(var S=0;S<h.length;S++){var N=h[S],L=w[S];L.shapeFlag&1&&!L.dynamicChildren&&((L.patchFlag<=0||L.patchFlag===32)&&(L=w[S]=Tn(w[S]),L.el=N.el),d||Aa(N,L))}}function Ca(i){var l=i.slice(),d=[0],h,w,S,N,L,M=i.length;for(h=0;h<M;h++){var X=i[h];if(X!==0){if(w=d[d.length-1],i[w]<X){l[h]=w,d.push(h);continue}for(S=0,N=d.length-1;S<N;)L=S+N>>1,i[d[L]]<X?S=L+1:N=L;X<i[d[S]]&&(S>0&&(l[h]=d[S-1]),d[S]=h)}}for(S=d.length,N=d[S-1];S-- >0;)d[S]=N,N=l[N];return d}var _o=i=>i.__isTeleport,no=i=>i&&(i.disabled||i.disabled===""),zo=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,$a=(i,l)=>{var d=i&&i.to;if(f.isString(d))if(l){var h=l(d);return h}else return null;else return d},ro={__isTeleport:!0,process(i,l,d,h,w,S,N,L,M,X){var{mc:fe,pc:Me,pbc:re,o:{insert:de,querySelector:xe,createText:rt,createComment:Pe}}=X,Se=no(l.props),{shapeFlag:Ie,children:Ce,dynamicChildren:Ye}=l;if(i==null){var He=l.el=rt("",d),it=l.anchor=rt("",d);de(He,d,h),de(it,d,h);var Fe=l.target=$a(l.props,xe),Xe=l.targetAnchor=rt("",d);Fe&&(de(Xe,Fe),N=N||zo(Fe));var Ot=(_e,ge)=>{Ie&16&&fe(Ce,_e,ge,w,S,N,L,M)};Se?Ot(d,it):Fe&&Ot(Fe,Xe)}else{l.el=i.el;var It=l.anchor=i.anchor,Ft=l.target=i.target,Nt=l.targetAnchor=i.targetAnchor,gt=no(i.props),H=gt?d:Ft,q=gt?It:Nt;if(N=N||zo(Ft),Ye?(re(i.dynamicChildren,Ye,H,w,S,N,L),Aa(i,l,!0)):M||Me(i,l,H,q,w,S,N,L,!1),Se)gt||Wo(l,d,It,X,1);else if((l.props&&l.props.to)!==(i.props&&i.props.to)){var ue=l.target=$a(l.props,xe);ue&&Wo(l,ue,null,X,0)}else gt&&Wo(l,Ft,Nt,X,1)}},remove(i,l,d,h,w,S){var{um:N,o:{remove:L}}=w,{shapeFlag:M,children:X,anchor:fe,targetAnchor:Me,target:re,props:de}=i;if(re&&L(Me),(S||!no(de))&&(L(fe),M&16))for(var xe=0;xe<X.length;xe++){var rt=X[xe];N(rt,l,d,!0,!!rt.dynamicChildren)}},move:Wo,hydrate:As};function Wo(i,l,d,h){var{o:{insert:w},m:S}=h,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;N===0&&w(i.targetAnchor,l,d);var{el:L,anchor:M,shapeFlag:X,children:fe,props:Me}=i,re=N===2;if(re&&w(L,l,d),(!re||no(Me))&&X&16)for(var de=0;de<fe.length;de++)S(fe[de],l,d,2);re&&w(M,l,d)}function As(i,l,d,h,w,S,N,L){var{o:{nextSibling:M,parentNode:X,querySelector:fe}}=N,Me=l.target=$a(l.props,fe);if(Me){var re=Me._lpa||Me.firstChild;l.shapeFlag&16&&(no(l.props)?(l.anchor=L(M(i),l,X(i),d,h,w,S),l.targetAnchor=re):(l.anchor=M(i),l.targetAnchor=L(re,l,Me,d,h,w,S)),Me._lpa=l.targetAnchor&&M(l.targetAnchor))}return l.anchor&&M(l.anchor)}var ra=ro,Oa="components",m="directives";function R(i,l){return J(Oa,i,!0,l)||i}var j=Symbol();function U(i){return f.isString(i)?J(Oa,i,!1)||i:i||j}function K(i){return J(m,i)}function J(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,h=An||un;if(h){var w=h.type;if(i===Oa){var S=Ir(w);if(S&&(S===l||S===f.camelize(l)||S===f.capitalize(f.camelize(l))))return w}var N=ie(h[i]||w[i],l)||ie(h.appContext[i],l);return!N&&d?w:N}}function ie(i,l){return i&&(i[l]||i[f.camelize(l)]||i[f.capitalize(f.camelize(l))])}var se=Symbol(void 0),me=Symbol(void 0),be=Symbol(void 0),he=Symbol(void 0),Ae=[],Ke=null;function bt(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Ae.push(Ke=i?null:[])}function jt(){Ae.pop(),Ke=Ae[Ae.length-1]||null}var ut=1;function lt(i){ut+=i}function xt(i){return i.dynamicChildren=ut>0?Ke||f.EMPTY_ARR:null,jt(),ut>0&&Ke&&Ke.push(i),i}function cn(i,l,d,h,w,S){return xt(Et(i,l,d,h,w,S,!0))}function vt(i,l,d,h,w){return xt(Ht(i,l,d,h,w,!0))}function nt(i){return i?i.__v_isVNode===!0:!1}function Dt(i,l){return i.type===l.type&&i.key===l.key}function On(i){}var wn="__vInternal",bn=i=>{var{key:l}=i;return l!=null?l:null},gn=i=>{var{ref:l,ref_key:d,ref_for:h}=i;return l!=null?f.isString(l)||P.isRef(l)||f.isFunction(l)?{i:An,r:l,k:d,f:!!h}:l:null};function Et(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===se?0:1,N=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,L=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,M={__v_isVNode:!0,__v_skip:!0,type:i,props:l,key:l&&bn(l),ref:l&&gn(l),scopeId:ai,slotScopeIds:null,children:d,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:S,patchFlag:h,dynamicProps:w,dynamicChildren:null,appContext:null};return L?(bo(M,d),S&128&&i.normalize(M)):d&&(M.shapeFlag|=f.isString(d)?8:16),ut>0&&!N&&Ke&&(M.patchFlag>0||S&6)&&M.patchFlag!==32&&Ke.push(M),M}var Ht=ia;function ia(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===j)&&(i=be),nt(i)){var N=gr(i,l,!0);return d&&bo(N,d),N}if(Yi(i)&&(i=i.__vccOpts),l){l=hi(l);var{class:L,style:M}=l;L&&!f.isString(L)&&(l.class=f.normalizeClass(L)),f.isObject(M)&&(P.isProxy(M)&&!f.isArray(M)&&(M=f.extend({},M)),l.style=f.normalizeStyle(M))}var X=f.isString(i)?1:uo(i)?128:_o(i)?64:f.isObject(i)?4:f.isFunction(i)?2:0;return Et(i,l,d,h,w,X,S,!0)}function hi(i){return i?P.isProxy(i)||wn in i?f.extend({},i):i:null}function gr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:h,ref:w,patchFlag:S,children:N}=i,L=l?Tr(h||{},l):h,M={__v_isVNode:!0,__v_skip:!0,type:i.type,props:L,key:L&&bn(L),ref:l&&l.ref?d&&w?f.isArray(w)?w.concat(gn(l)):[w,gn(l)]:gn(l):w,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:N,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:l&&i.type!==se?S===-1?16:S|16:S,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&gr(i.ssContent),ssFallback:i.ssFallback&&gr(i.ssFallback),el:i.el,anchor:i.anchor};return M}function Go(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Ht(me,null,i,l)}function oa(i,l){var d=Ht(he,null,i);return d.staticCount=l,d}function Gn(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return l?(bt(),vt(be,null,i)):Ht(be,null,i)}function Zn(i){return i==null||typeof i=="boolean"?Ht(be):f.isArray(i)?Ht(se,null,i.slice()):typeof i=="object"?Tn(i):Ht(me,null,String(i))}function Tn(i){return i.el===null||i.memo?i:gr(i)}function bo(i,l){var d=0,{shapeFlag:h}=i;if(l==null)l=null;else if(f.isArray(l))d=16;else if(typeof l=="object")if(h&(1|64)){var w=l.default;w&&(w._c&&(w._d=!1),bo(i,w()),w._c&&(w._d=!0));return}else{d=32;var S=l._;!S&&!(wn in l)?l._ctx=An:S===3&&An&&(An.slots._===1?l._=1:(l._=2,i.patchFlag|=1024))}else f.isFunction(l)?(l={default:l,_ctx:An},d=32):(l=String(l),h&64?(d=16,l=[Go(l)]):d=8);i.children=l,i.shapeFlag|=d}function Tr(){for(var i={},l=0;l<arguments.length;l++){var d=l<0||arguments.length<=l?void 0:arguments[l];for(var h in d)if(h==="class")i.class!==d.class&&(i.class=f.normalizeClass([i.class,d.class]));else if(h==="style")i.style=f.normalizeStyle([i.style,d.style]);else if(f.isOn(h)){var w=i[h],S=d[h];S&&w!==S&&!(f.isArray(w)&&w.includes(S))&&(i[h]=w?[].concat(w,S):S)}else h!==""&&(i[h]=d[h])}return i}function Fr(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;ne(i,l,7,[d,h])}function Ua(i,l,d,h){var w,S=d&&d[h];if(f.isArray(i)||f.isString(i)){w=new Array(i.length);for(var N=0,L=i.length;N<L;N++)w[N]=l(i[N],N,void 0,S&&S[N])}else if(typeof i=="number"){w=new Array(i);for(var M=0;M<i;M++)w[M]=l(M+1,M,void 0,S&&S[M])}else if(f.isObject(i))if(i[Symbol.iterator])w=Array.from(i,(de,xe)=>l(de,xe,void 0,S&&S[xe]));else{var X=Object.keys(i);w=new Array(X.length);for(var fe=0,Me=X.length;fe<Me;fe++){var re=X[fe];w[fe]=l(i[re],re,fe,S&&S[fe])}}else w=[];return d&&(d[h]=w),w}function aa(i,l){for(var d=0;d<l.length;d++){var h=l[d];if(f.isArray(h))for(var w=0;w<h.length;w++)i[h[w].name]=h[w].fn;else h&&(i[h.name]=h.fn)}return i}function Yo(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},h=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(An.isCE||An.parent&&$i(An.parent)&&An.parent.isCE)return Ht("slot",l==="default"?null:{name:l},h&&h());var S=i[l];S&&S._c&&(S._d=!1),bt();var N=S&&gi(S(d)),L=vt(se,{key:d.key||"_".concat(l)},N||(h?h():[]),N&&i._===1?64:-2);return!w&&L.scopeId&&(L.slotScopeIds=[L.scopeId+"-s"]),S&&S._c&&(S._d=!0),L}function gi(i){return i.some(l=>nt(l)?!(l.type===be||l.type===se&&!gi(l.children)):!0)?i:null}function zi(i){var l={};for(var d in i)l[f.toHandlerKey(d)]=i[d];return l}var pi=i=>i?Ha(i)?Pt(i)||i.proxy:pi(i.parent):null,qo=f.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>pi(i.parent),$root:i=>pi(i.root),$emit:i=>i.emit,$options:i=>pe(i),$forceUpdate:i=>()=>on(i.update),$nextTick:i=>qt.bind(i.proxy),$watch:i=>po.bind(i)}),Ta={get(i,l){var{_:d}=i,{ctx:h,setupState:w,data:S,props:N,accessCache:L,type:M,appContext:X}=d,fe;if(l[0]!=="$"){var Me=L[l];if(Me!==void 0)switch(Me){case 1:return w[l];case 2:return S[l];case 4:return h[l];case 3:return N[l]}else{if(w!==f.EMPTY_OBJ&&f.hasOwn(w,l))return L[l]=1,w[l];if(S!==f.EMPTY_OBJ&&f.hasOwn(S,l))return L[l]=2,S[l];if((fe=d.propsOptions[0])&&f.hasOwn(fe,l))return L[l]=3,N[l];if(h!==f.EMPTY_OBJ&&f.hasOwn(h,l))return L[l]=4,h[l];ze&&(L[l]=0)}}var re=qo[l],de,xe;if(re)return l==="$attrs"&&P.track(d,"get",l),re(d);if((de=M.__cssModules)&&(de=de[l]))return de;if(h!==f.EMPTY_OBJ&&f.hasOwn(h,l))return L[l]=4,h[l];if(xe=X.config.globalProperties,f.hasOwn(xe,l))return xe[l]},set(i,l,d){var{_:h}=i,{data:w,setupState:S,ctx:N}=h;return S!==f.EMPTY_OBJ&&f.hasOwn(S,l)?(S[l]=d,!0):w!==f.EMPTY_OBJ&&f.hasOwn(w,l)?(w[l]=d,!0):f.hasOwn(h.props,l)||l[0]==="$"&&l.slice(1)in h?!1:(N[l]=d,!0)},has(i,l){var{_:{data:d,setupState:h,accessCache:w,ctx:S,appContext:N,propsOptions:L}}=i,M;return!!w[l]||d!==f.EMPTY_OBJ&&f.hasOwn(d,l)||h!==f.EMPTY_OBJ&&f.hasOwn(h,l)||(M=L[0])&&f.hasOwn(M,l)||f.hasOwn(S,l)||f.hasOwn(qo,l)||f.hasOwn(N.config.globalProperties,l)},defineProperty(i,l,d){return d.get!=null?i._.accessCache[l]=0:f.hasOwn(d,"value")&&this.set(i,l,d.value,null),Reflect.defineProperty(i,l,d)}},vi=f.extend({},Ta,{get(i,l){if(l!==Symbol.unscopables)return Ta.get(i,l,i)},has(i,l){var d=l[0]!=="_"&&!f.isGloballyWhitelisted(l);return d}}),as=os(),sa=0;function Dn(i,l,d){var h=i.type,w=(l?l.appContext:i.appContext)||as,S={uid:sa++,vnode:i,type:h,parent:l,appContext:w,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(w.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:La(h,w),emitsOptions:br(h,w),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:h.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:d,suspenseId:d?d.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return S.ctx={_:S},S.root=l?l.root:S,S.emit=Oo.bind(null,S),i.ce&&i.ce(S),S}var un=null,pr=()=>un||An,Pr=i=>{un=i,i.scope.on()},Wi=()=>{un&&un.scope.off(),un=null};function Ha(i){return i.vnode.shapeFlag&4}y.isInSSRComponentSetup=!1;function Pa(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;y.isInSSRComponentSetup=l;var{props:d,children:h}=i.vnode,w=Ha(i);ea(i,d,w,l),qr(i,h);var S=w?Ko(i,l):void 0;return y.isInSSRComponentSetup=!1,S}function Ko(i,l){var d=i.type;i.accessCache=Object.create(null),i.proxy=P.markRaw(new Proxy(i.ctx,Ta));var{setup:h}=d;if(h){var w=i.setupContext=h.length>1?At(i):null;Pr(i),P.pauseTracking();var S=ft(h,i,0,[i.props,w]);if(P.resetTracking(),Wi(),f.isPromise(S)){if(S.then(Wi,Wi),l)return S.then(N=>{io(i,N,l)}).catch(N=>{Q(N,i,0)});i.asyncDep=S}else io(i,S,l)}else Cs(i,l)}function io(i,l,d){f.isFunction(l)?i.type.__ssrInlineRender?i.ssrRender=l:i.render=l:f.isObject(l)&&(i.setupState=P.proxyRefs(l)),Cs(i,d)}var Lt,Eo;function ss(i){Lt=i,Eo=l=>{l.render._rc&&(l.withProxy=new Proxy(l.ctx,vi))}}var Ia=()=>!Lt;function Cs(i,l,d){var h=i.type;if(!i.render){if(!l&&Lt&&!h.render){var w=h.template;if(w){var{isCustomElement:S,compilerOptions:N}=i.appContext.config,{delimiters:L,compilerOptions:M}=h,X=f.extend(f.extend({isCustomElement:S,delimiters:L},N),M);h.render=Lt(w,X)}}i.render=h.render||f.NOOP,Eo&&Eo(i)}Pr(i),P.pauseTracking(),z(i),P.resetTracking(),Wi()}function Ne(i){return new Proxy(i.attrs,{get(l,d){return P.track(i,"get","$attrs"),l[d]}})}function At(i){var l=h=>{i.exposed=h||{}},d;return{get attrs(){return d||(d=Ne(i))},slots:i.slots,emit:i.emit,expose:l}}function Pt(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(i.exposed)),{get(l,d){if(d in l)return l[d];if(d in qo)return qo[d](i)}}))}var Pn=/(?:^|[-_])(\w)/g,Xn=i=>i.replace(Pn,l=>l.toUpperCase()).replace(/[-_]/g,"");function Ir(i){return f.isFunction(i)&&i.displayName||i.name}function Gi(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=Ir(l);if(!h&&l.__file){var w=l.__file.match(/([^/\\]+)\.\w+$/);w&&(h=w[1])}if(!h&&i&&i.parent){var S=N=>{for(var L in N)if(N[L]===l)return L};h=S(i.components||i.parent.type.components)||S(i.appContext.components)}return h?Xn(h):d?"App":"Anonymous"}function Yi(i){return f.isFunction(i)&&"__vccOpts"in i}var yo=(i,l)=>P.computed(i,l,y.isInSSRComponentSetup);function Jo(){return null}function ja(){return null}function Xs(i){}function la(i,l){return null}function Os(){return ls().slots}function Qs(){return ls().attrs}function ls(){var i=pr();return i.setupContext||(i.setupContext=At(i))}function el(i,l){var d=f.isArray(i)?i.reduce((S,N)=>(S[N]={},S),{}):i;for(var h in l){var w=d[h];w?f.isArray(w)||f.isFunction(w)?d[h]={type:w,default:l[h]}:w.default=l[h]:w===null&&(d[h]={default:l[h]})}return d}function tl(i,l){var d={},h=function(S){l.includes(S)||Object.defineProperty(d,S,{enumerable:!0,get:()=>i[S]})};for(var w in i)h(w);return d}function nl(i){var l=pr(),d=i();return Wi(),f.isPromise(d)&&(d=d.catch(h=>{throw Pr(l),h})),[d,()=>Pr(l)]}function za(i,l,d){var h=arguments.length;return h===2?f.isObject(l)&&!f.isArray(l)?nt(l)?Ht(i,null,[l]):Ht(i,l):Ht(i,null,l):(h>3?d=Array.prototype.slice.call(arguments,2):h===3&&nt(d)&&(d=[d]),Ht(i,l,d))}var Wa=Symbol(""),jl=()=>{{var i=ci(Wa);return i||Rt("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function rl(){}function il(i,l,d,h){var w=d[h];if(w&&oo(w,i))return w;var S=l();return S.memo=i.slice(),d[h]=S}function oo(i,l){var d=i.memo;if(d.length!=l.length)return!1;for(var h=0;h<d.length;h++)if(d[h]!==l[h])return!1;return ut>0&&Ke&&Ke.push(i),!0}var Na="3.2.33",Ga={createComponentInstance:Dn,setupComponent:Pa,renderComponentRoot:zr,setCurrentRenderingInstance:Zi,isVNode:nt,normalizeVNode:Zn},Ya=Ga,ca=null,ka=null;function Ra(i,l){return i==="input"?new I.UniInputElement(i,l):i==="textarea"?new I.UniTextAreaElement(i,l):new I.UniElement(i,l)}function Ts(i,l){return new I.UniTextNode(i,l)}function qa(i,l){return new I.UniCommentNode(i,l)}var cs,us={insert:(i,l,d)=>{l.insertBefore(i,d||null)},remove:i=>{var l=i.parentNode;l&&l.removeChild(i)},createElement:(i,l)=>Ra(i,l),createText:(i,l)=>Ts(i,l),createComment:(i,l)=>qa(i,l),setText:(i,l)=>{i.nodeValue=l},setElementText:(i,l)=>{i.textContent=l},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,l){i.setAttribute(l,"")},cloneNode(i){var l=i.cloneNode(!0);return"_value"in i&&(l._value=i._value),l},insertStaticContent(i,l,d){var h=cs||(cs=Ra("div"));h.innerHTML=i;for(var w=h.firstChild,S=w,N=S;S;)N=S,us.insert(S,l,d),S=h.firstChild;return[w,N]}};function ol(i,l){l==null&&(l=""),i.setAttribute("class",l)}function Ka(i,l,d){if(!d)i.removeAttribute("style");else if(f.isString(d))l!==d&&i.setAttribute("style",d);else{var h={},w=l&&!f.isString(l);if(w){for(var S in l)d[S]==null&&(h[S]="");for(var N in d){var L=d[N];L!==l[N]&&(h[N]=L)}}else for(var M in d)h[M]=d[M];Object.keys(h).length&&i.setAttribute("style",h)}}function ri(i,l,d){d==null?i.removeAttribute(l):i.setAttribute(l,d)}function ao(i,l,d,h){i.addEventListener(l,d,h)}function Ps(i,l,d,h){i.removeEventListener(l,d,h)}function al(i,l,d,h){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=i._vei||(i._vei={}),N=S[l];if(h&&N)N.value=h;else{var[L,M]=fs(l);if(h){var X=S[l]=ll(h,w);ao(i,L,X,M)}else N&&(Ps(i,L,N,M),S[l]=void 0)}}var sl=/(?:Once|Passive|Capture)$/;function fs(i){var l;if(sl.test(i)){l={};for(var d;d=i.match(sl);)i=i.slice(0,i.length-d[0].length),l[d[0].toLowerCase()]=!0}return[f.hyphenate(i.slice(2)),l]}function ll(i,l){var d=w=>{ne(d.value,l,5,[w])};d.value=i;var h=new Set;return f.isArray(d.value)?d.value.forEach(w=>{w.modifiers&&w.modifiers.forEach(S=>{h.add(S)})}):(d.value.modifiers&&d.value.modifiers.forEach(w=>{h.add(w)}),Is(d,l)),d.modifiers=[...h],d}function Is(i,l){if(!!l){var{$wxsModules:d}=l;if(!!d){var h=i.value.toString();!d.find(w=>h.indexOf("."+w+".")>-1)||(i.wxsEvent=i.value())}}}var cl=function(i,l,d,h){var w=arguments.length>6?arguments[6]:void 0;switch(l){case"class":ol(i,h);break;case"style":Ka(i,d,h);break;default:if(f.isOn(l))f.isModelListener(l)||al(i,l,d,h,w);else{if(f.isObject(h)){var S=d===h;if(h=I.JSON_PROTOCOL+JSON.stringify(h),S&&i.getAttribute(l)===h)return}else if(d===h)return;ri(i,l,h)}break}};function zl(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var l=pr();if(!l)return f.EMPTY_OBJ;var d=l.type.__cssModules;if(!d)return f.EMPTY_OBJ;var h=d[i];return h||f.EMPTY_OBJ}}function ul(i){var l=pr();if(!!l){var d=()=>Ja(l.subTree,i(l.proxy));Yr(()=>Kn(d,{flush:"post"})),fi(d)}}function Ja(i,l){if(i.shapeFlag&128){var d=i.suspense;i=d.activeBranch,d.pendingBranch&&!d.isHydrating&&d.effects.push(()=>{Ja(d.activeBranch,l)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)Ns(i.el,l);else if(i.type===se)i.children.forEach(S=>Ja(S,l));else if(i.type===he)for(var{el:h,anchor:w}=i;h&&(Ns(h,l),h!==w);)h=h.nextSibling}function Ns(i,l){if(i.nodeType===1)for(var d in l)i.setAttribute("--".concat(d),l[d])}var wo="transition",xa="animation",ds=(i,l)=>{var{slots:d}=l;return za(Wt,dl(i),d)};ds.displayName="Transition";var fl={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Wl=ds.props=f.extend({},Wt.props,fl),Zo=function(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];f.isArray(i)?i.forEach(d=>d(...l)):i&&i(...l)},ks=i=>i?f.isArray(i)?i.some(l=>l.length>1):i.length>1:!1;function dl(i){var l={};for(var d in i)d in fl||(l[d]=i[d]);if(i.css===!1)return l;var{name:h="v",type:w,duration:S,enterFromClass:N="".concat(h,"-enter-from"),enterActiveClass:L="".concat(h,"-enter-active"),enterToClass:M="".concat(h,"-enter-to"),appearFromClass:X=N,appearActiveClass:fe=L,appearToClass:Me=M,leaveFromClass:re="".concat(h,"-leave-from"),leaveActiveClass:de="".concat(h,"-leave-active"),leaveToClass:xe="".concat(h,"-leave-to")}=i,rt=hl(S),Pe=rt&&rt[0],Se=rt&&rt[1],{onBeforeEnter:Ie,onEnter:Ce,onEnterCancelled:Ye,onLeave:He,onLeaveCancelled:it,onBeforeAppear:Fe=Ie,onAppear:Xe=Ce,onAppearCancelled:Ot=Ye}=l,It=(gt,H,q)=>{ua(gt,H?Me:M),ua(gt,H?fe:L),q&&q()},Ft=(gt,H)=>{ua(gt,xe),ua(gt,de),H&&H()},Nt=gt=>(H,q)=>{var ue=gt?Xe:Ce,_e=()=>It(H,gt,q);Zo(ue,[H,_e]),gl(()=>{ua(H,gt?X:N),ko(H,gt?Me:M),ks(ue)||hs(H,w,Pe,_e)})};return f.extend(l,{onBeforeEnter(gt){Zo(Ie,[gt]),ko(gt,N),ko(gt,L)},onBeforeAppear(gt){Zo(Fe,[gt]),ko(gt,X),ko(gt,fe)},onEnter:Nt(!1),onAppear:Nt(!0),onLeave(gt,H){var q=()=>Ft(gt,H);ko(gt,re),_l(),ko(gt,de),gl(()=>{ua(gt,re),ko(gt,xe),ks(He)||hs(gt,w,Se,q)}),Zo(He,[gt,q])},onEnterCancelled(gt){It(gt,!1),Zo(Ye,[gt])},onAppearCancelled(gt){It(gt,!0),Zo(Ot,[gt])},onLeaveCancelled(gt){Ft(gt),Zo(it,[gt])}})}function hl(i){if(i==null)return null;if(f.isObject(i))return[Rs(i.enter),Rs(i.leave)];var l=Rs(i);return[l,l]}function Rs(i){var l=f.toNumber(i);return l}function ko(i,l){l.split(/\s+/).forEach(d=>d&&i.classList.add(d)),(i._vtc||(i._vtc=new Set)).add(l)}function ua(i,l){l.split(/\s+/).forEach(h=>h&&i.classList.remove(h));var{_vtc:d}=i;d&&(d.delete(l),d.size||(i._vtc=void 0))}function gl(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Gl=0;function hs(i,l,d,h){var w=i._endId=++Gl,S=()=>{w===i._endId&&h()};if(d)return setTimeout(S,d);var{type:N,timeout:L,propCount:M}=pl(i,l);if(!N)return h();var X=N+"end",fe=0,Me=()=>{i.removeEventListener(X,re),S()},re=de=>{de.target===i&&++fe>=M&&Me()};setTimeout(()=>{fe<M&&Me()},L+1),i.addEventListener(X,re)}function pl(i,l){var d=window.getComputedStyle(i),h=xe=>(d[xe]||"").split(", "),w=h(wo+"Delay"),S=h(wo+"Duration"),N=vl(w,S),L=h(xa+"Delay"),M=h(xa+"Duration"),X=vl(L,M),fe=null,Me=0,re=0;l===wo?N>0&&(fe=wo,Me=N,re=S.length):l===xa?X>0&&(fe=xa,Me=X,re=M.length):(Me=Math.max(N,X),fe=Me>0?N>X?wo:xa:null,re=fe?fe===wo?S.length:M.length:0);var de=fe===wo&&/\b(transform|all)(,|$)/.test(d[wo+"Property"]);return{type:fe,timeout:Me,propCount:re,hasTransform:de}}function vl(i,l){for(;i.length<l.length;)i=i.concat(i);return Math.max(...l.map((d,h)=>ml(d)+ml(i[h])))}function ml(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function _l(){return document.body.offsetHeight}var bl=new WeakMap,xs=new WeakMap,El={name:"TransitionGroup",props:f.extend({},Wl,{tag:String,moveClass:String}),setup(i,l){var{slots:d}=l,h=pr(),w=Nn(),S,N;return fi(()=>{if(!!S.length){var L=i.moveClass||"".concat(i.name||"v","-move");if(!!v(S[0].el,h.vnode.el,L)){S.forEach(ql),S.forEach(o);var M=S.filter(c);_l(),M.forEach(X=>{var fe=X.el,Me=fe.style;ko(fe,L),Me.transform=Me.webkitTransform=Me.transitionDuration="";var re=fe._moveCb=de=>{de&&de.target!==fe||(!de||/transform$/.test(de.propertyName))&&(fe.removeEventListener("transitionend",re),fe._moveCb=null,ua(fe,L))};fe.addEventListener("transitionend",re)})}}}),()=>{var L=P.toRaw(i),M=dl(L),X=L.tag||se;S=N,N=d.default?Wn(d.default()):[];for(var fe=0;fe<N.length;fe++){var Me=N[fe];Me.key!=null&&Un(Me,Cr(Me,M,w,h))}if(S)for(var re=0;re<S.length;re++){var de=S[re];Un(de,Cr(de,M,w,h)),bl.set(de,de.el.getBoundingClientRect())}return Ht(X,null,N)}}},Yl=El;function ql(i){var l=i.el;l._moveCb&&l._moveCb(),l._enterCb&&l._enterCb()}function o(i){xs.set(i,i.el.getBoundingClientRect())}function c(i){var l=bl.get(i),d=xs.get(i),h=l.left-d.left,w=l.top-d.top;if(h||w){var S=i.el.style;return S.transform=S.webkitTransform="translate(".concat(h,"px,").concat(w,"px)"),S.transitionDuration="0s",i}}function v(i,l,d){var h=i.cloneNode();i._vtc&&i._vtc.forEach(N=>{N.split(/\s+/).forEach(L=>L&&h.classList.remove(L))}),d.split(/\s+/).forEach(N=>N&&h.classList.add(N)),h.style.display="none";var w=l.nodeType===1?l:l.parentNode;w.appendChild(h);var{hasTransform:S}=pl(h);return w.removeChild(h),S}var E=i=>{var l=i.props["onUpdate:modelValue"];return f.isArray(l)?d=>f.invokeArrayFns(l,d):l},C={created(i,l,d){var{value:h,modifiers:{trim:w,number:S}}=l;i.value=h==null?"":h,i._assign=E(d),ao(i,"input",N=>{var L=N.detail.value,M=i.pageNode;i.pageNode=null,i.value=L,i.pageNode=M,w?L=L.trim():S&&(L=f.toNumber(L)),i._assign(L)})},beforeUpdate(i,l,d){var{value:h}=l;i._assign=E(d);var w=h==null?"":h;i.value!==w&&(i.value=w)}},T=["ctrl","shift","alt","meta"],F={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,l)=>T.some(d=>i["".concat(d,"Key")]&&!l.includes(d))},Y=(i,l)=>{var d=function(h){for(var w=0;w<l.length;w++){var S=F[l[w]];if(S&&S(h,l))return}for(var N=arguments.length,L=new Array(N>1?N-1:0),M=1;M<N;M++)L[M-1]=arguments[M];return i(h,...L)};return d.modifiers=l,d},G={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},oe=(i,l)=>d=>{if("key"in d){var h=f.hyphenate(d.key);if(l.some(w=>w===h||G[w]===h))return i(d)}},Be={beforeMount(i,l){var{value:d}=l;ct(i,d)},updated(i,l){var{value:d,oldValue:h}=l;!d!=!h&&ct(i,d)},beforeUnmount(i,l){var{value:d}=l;ct(i,d)}};function ct(i,l){i.setAttribute(".vShow",!!l)}var ae=f.extend({patchProp:cl,forcePatchProp:I.forcePatchProp},us),Je;function Ge(){return Je||(Je=mo(ae))}var pt=function(){Ge().render(...arguments)},Re=function(){var i=Ge().createApp(...arguments),{mount:l}=i;return i.mount=d=>(f.isString(d)&&(d=qa(d)),d&&l(d,!1,!1)),i},Oe=Re;function Le(){}function We(){}return Object.defineProperty(y,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(y,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(y,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(y,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(y,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(y,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(y,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(y,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(y,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(y,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(y,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(y,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(y,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(y,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(y,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(y,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(y,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(y,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(y,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(y,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(y,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(y,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(y,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(y,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(y,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(y,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(y,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(y,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(y,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(y,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(y,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(y,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(y,"unref",{enumerable:!0,get:function(){return P.unref}}),y.BaseTransition=Wt,y.Comment=be,y.Fragment=se,y.KeepAlive=to,y.Static=he,y.Suspense=zn,y.Teleport=ra,y.Text=me,y.Transition=ds,y.TransitionGroup=Yl,y.callWithAsyncErrorHandling=ne,y.callWithErrorHandling=ft,y.cloneVNode=gr,y.compatUtils=ka,y.computed=yo,y.createApp=Re,y.createBlock=vt,y.createComment=qa,y.createCommentVNode=Gn,y.createElement=Ra,y.createElementBlock=cn,y.createElementVNode=Et,y.createHydrationRenderer=Va,y.createPropsRestProxy=tl,y.createRenderer=mo,y.createSSRApp=Oe,y.createSlots=aa,y.createStaticVNode=oa,y.createTextNode=Ts,y.createTextVNode=Go,y.createVNode=Ht,y.createVueApp=Re,y.defineAsyncComponent=vo,y.defineComponent=Gr,y.defineEmits=ja,y.defineExpose=Xs,y.defineProps=Jo,y.getCurrentInstance=pr,y.getTransitionRawChildren=Wn,y.guardReactiveProps=hi,y.h=za,y.handleError=Q,y.initCustomFormatter=rl,y.inject=ci,y.injectHook=dr,y.isMemoSame=oo,y.isRuntimeOnly=Ia,y.isVNode=nt,y.mergeDefaults=el,y.mergeProps=Tr,y.nextTick=qt,y.onActivated=fr,y.onBeforeActivate=Le,y.onBeforeDeactivate=We,y.onBeforeMount=Hi,y.onBeforeUnmount=di,y.onBeforeUpdate=ui,y.onDeactivated=wr,y.onErrorCaptured=ce,y.onMounted=Yr,y.onRenderTracked=ee,y.onRenderTriggered=B,y.onServerPrefetch=Io,y.onUnmounted=Pi,y.onUpdated=fi,y.openBlock=bt,y.popScopeId=Xi,y.provide=Ai,y.pushScopeId=wi,y.queuePostFlushCb=Mn,y.registerRuntimeCompiler=ss,y.render=pt,y.renderList=Ua,y.renderSlot=Yo,y.resolveComponent=R,y.resolveDirective=K,y.resolveDynamicComponent=U,y.resolveFilter=ca,y.resolveTransitionHooks=Cr,y.setBlockTracking=lt,y.setDevtoolsHook=Lo,y.setTransitionHooks=Un,y.ssrContextKey=Wa,y.ssrUtils=Ya,y.toHandlers=zi,y.transformVNodeArgs=On,y.useAttrs=Qs,y.useCssModule=zl,y.useCssVars=ul,y.useSSRContext=jl,y.useSlots=Os,y.useTransitionState=Nn,y.vModelText=C,y.vShow=Be,y.version=Na,y.warn=Rt,y.watch=we,y.watchEffect=Kn,y.watchPostEffect=Mr,y.watchSyncEffect=Fi,y.withAsyncContext=nl,y.withCtx=ur,y.withDefaults=la,y.withDirectives=ji,y.withKeys=oe,y.withMemo=il,y.withModifiers=Y,y.withScopeId=Si,Object.defineProperty(y,"__esModule",{value:!0}),y}({},s,_,A);return k.__TYPE__="vue",k}function Ip(p,s,_){let A=_.Vue,k=_.setTimeout,y=_.clearTimeout,I=_.setInterval,f=_.clearInterval,P=_.__uniConfig,Ue=_.__uniRoutes,Rt=_.VueShared,vn=_.UniShared;var x=function(ne,Q,En){"use strict";var yn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",an=function(){let e=new Uint8Array(256);for(var t=0;t<yn.length;t++)e[yn.charCodeAt(t)]=t;return e}();function Vn(e){var t=new Uint8Array(e),n,r=t.length,a="";for(n=0;n<r;n+=3)a+=yn[t[n]>>2],a+=yn[(t[n]&3)<<4|t[n+1]>>4],a+=yn[(t[n+1]&15)<<2|t[n+2]>>6],a+=yn[t[n+2]&63];return r%3===2?a=a.substring(0,a.length-1)+"=":r%3===1&&(a=a.substring(0,a.length-2)+"=="),a}function nn(e){var t=e.length*.75,n=e.length,r,a=0,u,g,b,V;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var O=new ArrayBuffer(t),D=new Uint8Array(O);for(r=0;r<n;r+=4)u=an[e.charCodeAt(r)],g=an[e.charCodeAt(r+1)],b=an[e.charCodeAt(r+2)],V=an[e.charCodeAt(r+3)],D[a++]=u<<2|g>>4,D[a++]=(g&15)<<4|b>>2,D[a++]=(b&3)<<6|V&63;return O}let xn=["original","compressed"],$n=["album","camera"],mn=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function rn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function _n(e,t){return!ne.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Bn(e,t){console.warn(`${e}: ${t}`)}function Rr(e,t,n,r){r||(r=Bn);for(let a in n){let u=$e(a,t[a],n[a],!ne.hasOwn(t,a));ne.isString(u)&&r(e,u)}}function Jr(e,t,n,r){if(!n)return;if(!ne.isArray(n))return Rr(e,t[0]||Object.create(null),n,r);let a=n.length,u=t.length;for(let g=0;g<a;g++){let b=n[g],V=Object.create(null);u>g&&(V[b.name]=t[g]),Rr(e,V,{[b.name]:b},r)}}function $e(e,t,n,r){ne.isPlainObject(n)||(n={type:n});let{type:a,required:u,validator:g}=n;if(u&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!u)){if(a!=null){let b=!1,V=ne.isArray(a)?a:[a],O=[];for(let D=0;D<V.length&&!b;D++){let{valid:le,expectedType:ye}=_t(t,V[D]);O.push(ye||""),b=le}if(!b)return qt(e,t,O)}if(g)return g(t)}}let st=ne.makeMap("String,Number,Boolean,Function,Symbol");function _t(e,t){let n,r=sn(t);if(st(r)){let a=typeof e;n=a===r.toLowerCase(),!n&&a==="object"&&(n=e instanceof t)}else r==="Object"?n=ne.isObject(e):r==="Array"?n=ne.isArray(e):n=e instanceof t||ne.toRawType(e)===sn(t);return{valid:n,expectedType:r}}function qt(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(ne.capitalize).join(", ")}`,a=n[0],u=ne.toRawType(t),g=on(t,a),b=on(t,u);return n.length===1&&lr(a)&&!cr(a,u)&&(r+=` with value ${g}`),r+=`, got ${u} `,lr(u)&&(r+=`with value ${b}.`),r}function sn(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function on(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function lr(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function cr(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Bi(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Mi=1,Mn={};function Hr(e,t,n,r=!1){return Mn[e]={name:t,keepAlive:r,callback:n},e}function _r(e,t,n){if(typeof e=="number"){let r=Mn[e];if(r)return r.keepAlive||delete Mn[e],r.callback(t,n)}return t}function yi(e){for(let t in Mn)if(Mn[t].name===e)return!0;return!1}function Ji(e,t){for(let n in Mn){let r=Mn[n];r.callback===t&&r.name===e&&delete Mn[n]}}function Di(e){ft.off("api."+e)}function Lo(e){ft.on("api."+e,t=>{for(let n in Mn){let r=Mn[n];r.name===e&&r.callback(t)}})}function Oo(e,t){return Hr(Mi++,e,t,!0)}let br="success",Sn="fail",An="complete";function ai(e){let t={};for(let n in e){let r=e[n];ne.isFunction(r)&&(t[n]=Bi(r),delete e[n])}return t}function Zi(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function wi(e,t={},{beforeAll:n,beforeSuccess:r}={}){ne.isPlainObject(t)||(t={});let{success:a,fail:u,complete:g}=ai(t),b=ne.isFunction(a),V=ne.isFunction(u),O=ne.isFunction(g),D=Mi++;return Hr(D,e,le=>{le=le||{},le.errMsg=Zi(le.errMsg,e),ne.isFunction(n)&&n(le),le.errMsg===e+":ok"?(ne.isFunction(r)&&r(le,t),b&&a(le)):V&&u(le),O&&g(le)}),D}let Xi="success",Si="fail",ur="complete",jr={},zr={};function Er(e){return function(t){return e(t)||t}}function To(e,t){let n=!1;for(let r=0;r<e.length;r++){let a=e[r];if(n)n=Promise.resolve(Er(a));else{let u=a(t);if(ne.isPromise(u)&&(n=Promise.resolve(u)),u===!1)return{then(){},catch(){}}}}return n||{then(r){return r(t)},catch(){}}}function Po(e,t={}){return[Xi,Si,ur].forEach(n=>{let r=e[n];if(!ne.isArray(r))return;let a=t[n];t[n]=function(g){To(r,g).then(b=>ne.isFunction(a)&&a(b)||b)}}),t}function Li(e,t){let n=[];ne.isArray(jr.returnValue)&&n.push(...jr.returnValue);let r=zr[e];return r&&ne.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(a=>{t=a(t)||t}),t}function xr(e){let t=Object.create(null);Object.keys(jr).forEach(r=>{r!=="returnValue"&&(t[r]=jr[r].slice())});let n=zr[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function qn(e,t,n,r){let a=xr(e);return a&&Object.keys(a).length?ne.isArray(a.invoke)?To(a.invoke,n).then(g=>t(Po(a,g),...r)):t(Po(a,n),...r):t(n,...r)}function uo(e){return!!(ne.isPlainObject(e)&&[br,Sn,An].find(t=>ne.isFunction(e[t])))}function Zr(e){return e}function zn(e,t){return(n={},...r)=>uo(n)?Li(e,qn(e,t,n,r)):Li(e,new Promise((a,u)=>{qn(e,t,ne.extend(n,{success:a,fail:u}),r)}))}function Wr(e,t){let n=e[0];if(!t||!ne.isPlainObject(t.formatArgs)&&ne.isPlainObject(n))return;let r=t.formatArgs,a=Object.keys(r);for(let u=0;u<a.length;u++){let g=a[u],b=r[g];if(ne.isFunction(b)){let V=b(e[0][g],n);if(ne.isString(V))return V}else ne.hasOwn(n,g)||(n[g]=b)}}function Qi(e,t,n){return _r(e,ne.extend(n||{},{errMsg:t+":ok"}))}function Xr(e,t,n,r){return _r(e,ne.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function si(e,t,n,r){if(r&&r.beforeInvoke){let u=r.beforeInvoke(t);if(ne.isString(u))return u}let a=Wr(t,r);if(a)return a}function fo(e){if(!ne.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function ho(e,t,n){return r=>{fo(r);let a=si(e,[r],void 0,n);if(a)throw new Error(a);let u=!yi(e);Oo(e,r),u&&(Lo(e),t())}}function go(e,t,n){return r=>{fo(r);let a=si(e,[r],void 0,n);if(a)throw new Error(a);e=e.replace("off","on"),Ji(e,r),yi(e)||(Di(e),t())}}function li(e){return!e||ne.isString(e)?e:e.stack?(console.error(e.message+Q.LINEFEED+e.stack),e.message):e}function Br(e,t,n,r){return a=>{let u=wi(e,a,r),g=si(e,[a],n,r);return g?Xr(u,e,g):t(a,{resolve:b=>Qi(u,e,b),reject:(b,V)=>Xr(u,e,li(b),V)})}}function Ai(e,t,n,r){return(...a)=>{let u=si(e,a,n,r);if(u)throw new Error(u);return t.apply(null,a)}}function ci(e,t,n,r){return Br(e,t,n,r)}function Kn(e,t,n){return ho(e,t,n)}function Mr(e,t,n){return go(e,t,n)}function Fi(e,t,n,r){return zn(e,Br(e,t,void 0,r))}function Bt(e,t,n,r){return Ai(e,t,void 0,r)}function we(e,t,n,r){return zn(e,ci(e,t,void 0,r))}let Qr="base64ToArrayBuffer",po=[{name:"base64",type:String,required:!0}],yr="arrayBufferToBase64",Dr=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Nn=Bt(Qr,e=>nn(e),po),Qn=Bt(yr,e=>Vn(e),Dr);function Fo(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=s.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(s.os.name||"").toLowerCase(),pixelRatio:s.screen.scale,windowWidth:Math.round(e)}}function Wt(e,t,n){e.$page.meta.isNVue?Cr(e,t,n):Ci(e,t,n)}function Ci(e,t,n){ft.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function Cr(e,t,n){let r=Vi(t),a=new Array(r.length);Jt(r,e.$el,a),Un(e.$requireNativePlugin("dom"),a,0,[],u=>{n(u)})}function Vi(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function Jt(e,t,n){let r=t.children;if(!ne.isArray(r))return!1;for(let a=0;a<r.length;a++){let u=r[a];if(u.attr){let g=e.indexOf(u.attr.id);if(g>=0&&(n[g]={id:e[g],ref:u.ref,dataset:Q.parseNVueDataset(u.attr)},e.length===1))break}u.children&&Jt(e,u,n)}}function Un(e,t,n,r,a){let u=t[n];e.getComponentRect(u.ref,g=>{g.size.id=u.id,g.size.dataset=u.dataset,r.push(g.size),n+=1,n<t.length?Un(e,t,n,r,a):a(r)})}function Wn(e,t){ft.invokeViewMethod("setPageMeta",t,e.$page.id)}let Gr=Array.isArray,$i=e=>e!==null&&typeof e=="object",vo=["{","}"];class Oi{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=vo){if(!n)return[t];let a=this._caches[t];return a||(a=to(t,r),this._caches[t]=a),Ui(a,n)}}let eo=/^(?:\d)+/,Vo=/^(?:\w)+/;function to(e,[t,n]){let r=[],a=0,u="";for(;a<e.length;){let g=e[a++];if(g===t){u&&r.push({type:"text",value:u}),u="";let b="";for(g=e[a++];g!==void 0&&g!==n;)b+=g,g=e[a++];let V=g===n,O=eo.test(b)?"list":V&&Vo.test(b)?"named":"unknown";r.push({value:b,type:O})}else u+=g}return u&&r.push({type:"text",value:u}),r}function Ui(e,t){let n=[],r=0,a=Gr(t)?"list":$i(t)?"named":"unknown";if(a==="unknown")return n;for(;r<e.length;){let u=e[r];switch(u.type){case"text":n.push(u.value);break;case"list":n.push(t[parseInt(u.value,10)]);break;case"named":a==="named"&&n.push(t[u.value]);break;case"unknown":break}r++}return n}let fr="zh-Hans",wr="zh-Hant",er="en",Or="fr",tr="es",Ti=Object.prototype.hasOwnProperty,dr=(e,t)=>Ti.call(e,t),Lr=new Oi;function Hi(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function Yr(e,t){return t.find(n=>e.indexOf(n)===0)}function ui(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return fr;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?fr:e.indexOf("-hant")>-1||Hi(e,["-tw","-hk","-mo","-cht"])?wr:fr;let n=Yr(e,[er,Or,tr]);if(n)return n}class fi{constructor({locale:t,fallbackLocale:n,messages:r,watcher:a,formater:u}){this.locale=er,this.fallbackLocale=er,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=u||Lr,this.messages=r||{},this.setLocale(t||er),a&&this.watchLocale(a)}setLocale(t){let n=this.locale;this.locale=ui(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let a=this.messages[t];a?r?Object.assign(a,n):Object.keys(n).forEach(u=>{dr(a,u)||(a[u]=n[u])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let a=this.message;return typeof n=="string"?(n=ui(n,this.messages),n&&(a=this.messages[n])):r=n,dr(a,t)?this.formater.interpolate(a[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function di(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function Pi(){return typeof Mt!="undefined"&&Mt.getLocale?Mt.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():er}function Io(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=Pi()),typeof n!="string"&&(n=typeof P!="undefined"&&P.fallbackLocale||er);let a=new fi({locale:e,fallbackLocale:n,messages:t,watcher:r}),u=(g,b)=>{if(typeof jn!="function")u=function(V,O){return a.t(V,O)};else{let V=!1;u=function(O,D){let le=jn().$vm;return le&&(le.$locale,V||(V=!0,di(le,a))),a.t(O,D)}}return u(g,b)};return{i18n:a,f(g,b,V){return a.f(g,b,V)},t(g,b){return u(g,b)},add(g,b,V=!0){return a.add(g,b,V)},watch(g){return a.watchLocale(g)},getLocale(){return a.getLocale()},setLocale(g){return a.setLocale(g)}}}function B(e,t){return e.indexOf(t[0])>-1}let ee=Q.once(()=>typeof P!="undefined"&&P.locales&&!!Object.keys(P.locales).length),ce;function ze(){let e=Mt.getLocale(),t=P.locales;return t[e]||t[P.fallbackLocale]||t.en||{}}function z(e){return B(e,Q.I18N_JSON_DELIMITERS)?pe().f(e,ze(),Q.I18N_JSON_DELIMITERS):e}function $(e,t){if(t.length===1){if(e){let r=e[t[0]];if(ne.isString(r)&&B(r,Q.I18N_JSON_DELIMITERS))return e}return}let n=t.shift();return $(e&&e[n],t)}function Z(e,t){return t.map(n=>ve(e,n))}function ve(e,t){let n=$(e,t);if(!n)return!1;let r=t[t.length-1],a=n[r];return Object.defineProperty(n,r,{get(){return z(a)},set(u){a=u}}),!0}function pe(){if(!ce){let e;if(typeof jn=="function"?e=p.requireModule("plus").getLanguage():e=s.webview.currentWebview().getStyle().locale,ce=Io(e),ee()){let t=Object.keys(P.locales||{});t.length&&t.forEach(n=>ce.add(n,P.locales[n])),ce.setLocale(e)}}return ce}function at(e,t,n){return t.reduce((r,a,u)=>(r[e+a]=n[u],r),{})}let Cn=Q.once(()=>{let e="uni.app.",t=["quit"];pe().add(er,at(e,t,["Press back button again to exit"]),!1),pe().add(tr,at(e,t,["Pulse otra vez para salir"]),!1),pe().add(Or,at(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),pe().add(fr,at(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),pe().add(wr,at(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),Jn=Q.once(()=>{let e="uni.showActionSheet.",t=["cancel"];pe().add(er,at(e,t,["Cancel"]),!1),pe().add(tr,at(e,t,["Cancelar"]),!1),pe().add(Or,at(e,t,["Annuler"]),!1),pe().add(fr,at(e,t,["\u53D6\u6D88"]),!1),pe().add(wr,at(e,t,["\u53D6\u6D88"]),!1)}),ei=Q.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];pe().add(er,at(e,t,["Cancel","OK"]),!1),pe().add(tr,at(e,t,["Cancelar","OK"]),!1),pe().add(Or,at(e,t,["Annuler","OK"]),!1),pe().add(fr,at(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),pe().add(wr,at(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),hn=Q.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];pe().add(er,at(e,t,["Cancel","Album","Camera"]),!1),pe().add(tr,at(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),pe().add(Or,at(e,t,["Annuler","Album","Cam\xE9ra"]),!1),pe().add(fr,at(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),pe().add(wr,at(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),kn=Q.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];pe().add(er,at(e,t,["Cancel","Album","Camera"]),!1),pe().add(tr,at(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),pe().add(Or,at(e,t,["Annuler","Album","Cam\xE9ra"]),!1),pe().add(fr,at(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),pe().add(wr,at(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Ii=Q.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];pe().add(er,at(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),pe().add(tr,at(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),pe().add(Or,at(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),pe().add(fr,at(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),pe().add(wr,at(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),ma=Q.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];pe().add(er,at(e,t,["Content copied","Copy failed, please copy manually"]),!1),pe().add(tr,at(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),pe().add(Or,at(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),pe().add(fr,at(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),pe().add(wr,at(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),ea=Q.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];pe().add(er,at(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),pe().add(tr,at(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),pe().add(Or,at(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),pe().add(fr,at(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),pe().add(wr,at(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),_a=Q.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];pe().add(er,at(e,t,["Fingerprint recognition"]),!1),pe().add(tr,at(e,t,["Reconocimiento de huellas dactilares"]),!1),pe().add(Or,at(e,t,["Reconnaissance de l'empreinte digitale"]),!1),pe().add(fr,at(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),pe().add(wr,at(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function No(e){if(ee())return Z(e,[["titleText"],["searchInput","placeholder"]])}function ba(e){if(ee()){let t="caption";return Z(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function La(e){let t=new Q.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,a=!1){t[a?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,a){t.emit(`${e}.${n}`,r,a)}}}let ta="invokeViewApi",Ea="invokeServiceApi";function ya(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function $o(e,t=!1){if(t)return na(e);if(typeof e=="string"){let n=parseInt(e)||0;return ya(e)?Mt.upx2px(n):n}return e}function na(e){return ya(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>Mt.upx2px(parseFloat(n))+"px"):e}function hr(e){let t=Q.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function ti(){let e=In(),t=e.length;if(t)return e[t-1]}function wa(){let e=ti();if(e)return e.$page.meta}function Fa(){let e=wa();return e?e.id:-1}function qr(){let e=ti();if(e)return e.$vm}let Ss=["navigationBar","pullToRefresh"];function ji(){return JSON.parse(JSON.stringify(P.globalStyle||{}))}function Ni(e,t){let n=ji(),r=ne.extend({id:t},n,e);Ss.forEach(u=>{r[u]=ne.extend({},n[u],e[u])});let{navigationBar:a}=r;return a.titleText&&a.titleImage&&(a.titleText=""),r}function os(e){return JSON.parse($o(JSON.stringify(e),!0))}function Uo(e){return e.offset&&(e.offset=$o(e.offset)),e.height&&(e.height=$o(e.height)),e.range&&(e.range=$o(e.range)),e}function Sa(e,t,n,r,a){let{id:u,route:g}=r;return{id:u,path:Q.addLeadingSlash(g),route:g,fullPath:t,options:n,meta:r,openType:e,eventChannel:a,statusBarStyle:r.navigationBar.titleColor==="#000000"?"dark":"light"}}function ki(e,t,n){let r=e.$[t];!ne.isArray(r)||n.__weh&&ne.remove(r,n.__weh)}function ln(e,t,n){if(ne.isString(e))n=t,t=e,e=qr();else if(typeof e=="number"){let a=In().find(u=>u.$page.id===e);a?e=a.$vm:e=qr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&Q.invokeArrayFns(r,n)}function Ho(e){if(e.indexOf("/")===0)return e;let t="",n=In();return n.length&&(t=n[n.length-1].$page.route),jo(t,e)}function jo(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return jo(e,t.slice(2));let n=t.split("/"),r=n.length,a=0;for(;a<r&&n[a]==="..";a++);n.splice(0,a),t=n.join("/");let u=e.length>0?e.split("/"):[];return u.splice(u.length-a-1,a+1),Q.addLeadingSlash(u.concat(n).join("/"))}function Hn(e,t=!1){return t?Ue.find(n=>n.path===e||n.alias===e):Ue.find(n=>n.path===e)}function or(e){let t=Hn(e);if(t)return t.meta}let mo,Va,ni;function Sr(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Aa(){return mo.webview.currentWebview().id}let Ca,_o,no={};function zo(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=no[n];r&&r(t),t.keep||delete no[n]}function $a(e,t){Sr()==="v8"?ni?(Ca&&Ca.close(),Ca=new ni(Aa()),Ca.onmessage=zo):_o||(_o=Va.requireModule("globalEvent"),_o.addEventListener("plusMessage",zo)):window.__plusMessage=zo,no[e]=t}class ro{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;ni?new ni(r).postMessage(n):mo.webview.postMessageToUniNView&&mo.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Wo({context:e={},url:t,data:n={},style:r={},onMessage:a,onClose:u}){mo=e.plus||s,Va=e.weex||(typeof p=="object"?p:null),ni=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let g={autoBackButton:!0,titleSize:"17px"},b=`page${Date.now()}`;r=ne.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=ne.extend(g,r.titleNView));let V={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:mo.screen.resolutionWidth}};r=ne.extend(V,r);let O=mo.webview.create("",b,r,{extras:{from:Aa(),runtime:Sr(),data:n,useGlobalEvent:!ni}});return O.addEventListener("close",u),$a(b,D=>{typeof a=="function"&&a(D.data),D.keep||O.close("auto")}),O.show(r.animationType,r.animationDuration),new ro(O)}let As=(e,t)=>ft.emit("api."+e,t),ra=1;function Oa(){return Fa()+"."+ta}let m=(e,t,n,r)=>{let{subscribe:a,publishHandler:u}=ft,g=r?ra++:0;r&&a(ta+"."+g,r,!0),u(Oa(),{id:g,name:e,args:t},n)},R=(e,t,n,r)=>{let{subscribe:a,unsubscribe:u,publishHandler:g}=ft,b=ra++,V=ta+"."+b;return a(V,n),g(Oa(),{id:b,name:e,args:t},r),()=>{u(V)}},j=Object.create(null);function U(){ft.subscribe(Ea,J)}function K(e,t){j[e]||(j[e]=t)}function J({id:e,name:t,args:n},r){let a=g=>{e&&ft.publishHandler(Ea+"."+e,g,r)},u=j[t];u?u(n,a):a({})}let ie=ne.extend(La("view"),{invokeOnCallback:As,invokeViewMethod:m,invokeViewMethodKeepAlive:R});function se(){let{on:e}=ft;e(Q.ON_RESIZE,me),e(Q.ON_APP_ENTER_FOREGROUND,be),e(Q.ON_APP_ENTER_BACKGROUND,he)}function me(e){ln(ti(),Q.ON_RESIZE,e),ft.invokeOnCallback("onWindowResize",e)}function be(e){let t=ti();ln(jn(),Q.ON_SHOW,e),ln(t,Q.ON_SHOW)}function he(){ln(jn(),Q.ON_HIDE),ln(ti(),Q.ON_HIDE)}let Ae=[Q.ON_PAGE_SCROLL,Q.ON_REACH_BOTTOM];function Ke(){Ae.forEach(e=>ft.subscribe(e,bt(e)))}function bt(e){return(t,n)=>{ln(parseInt(n),e,t)}}function jt(){se(),Ke()}function ut(e){e.$vm=e,e.$mpType="app";let t=En.ref(pe().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function lt(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function xt(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function cn(e,t){let n=e.$options||{};n.globalData=ne.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function vt(e){if(e.indexOf("//")===0)return"https:"+e;if(Q.SCHEME_RE.test(e)||Q.DATA_RE.test(e))return e;if(Dt(e))return"file://"+nt(e);let t="file://"+nt("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+jo(Q.addLeadingSlash(__id__),e);{let n=ti();if(n)return t+jo(Q.addLeadingSlash(n.route),e)}}return e}let nt=Q.cacheStringFunction(e=>s.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function Dt(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let On="success",wn="fail",gn=[On,wn,"complete"];function Et(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,a]=gr(n,r);return Object.keys(a).length?e[t](Go(t,a)):e[t]()}function Ht(e,t,n,r){if(!e)return;let[a,u]=gr(n,r);return Object.keys(u).length?e[t](a,Go(t,u)):e[t](a)}function ia(e,t){let n=hi(e,t.$el);return n||console.error("Can not find `"+e+"`")}function hi(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,a=n.length;r<a;r++){let u=hi(e,n[r]);if(u)return u}}function gr(e={},t){let n=Object.create(null),r=function(u){let g=e[u];ne.isFunction(g)&&(n[u]=g,delete e[u])};return gn.forEach(r),t&&t.forEach(r),[e,n]}function Go(e,t){return function(r){let a=r.type;delete r.type;let u=t[a];if(a===On?r.errMsg=`${e}:ok`:a===wn&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,ne.isFunction(u)&&u(r),a===On||a===wn){let g=t.complete;ne.isFunction(g)&&g(r)}}}let oa={play(e){return Et(e,"play")},pause(e){return Et(e,"pause")},seek(e,t){return Ht(e,"seek",t.position)},stop(e){return Et(e,"stop")},sendDanmu(e,t){return Ht(e,"sendDanmu",t)},playbackRate(e,t){return Ht(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Ht(e,"requestFullScreen",t)},exitFullScreen(e){return Et(e,"exitFullScreen")},showStatusBar(e){return Et(e,"showStatusBar")},hideStatusBar(e){return Et(e,"hideStatusBar")}};function Gn(e,t,n,r){let a=In().find(u=>u.$page.id===t);if(a==null?void 0:a.$page.meta.isNVue){let u=a.$vm;return oa[n](ia(e,u),r)}ft.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Zn={getCenterLocation(e,t){return Et(e,"getCenterLocation",t)},moveToLocation(e,t){return Ht(e,"moveToLocation",t)},translateMarker(e,t){return Ht(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Ht(e,"includePoints",t)},getRegion(e,t){return Et(e,"getRegion",t)},getScale(e,t){return Et(e,"getScale",t)},addCustomLayer(e,t){return Ht(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Ht(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Ht(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Ht(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Ht(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Ht(e,"initMarkerCluster",t)},addMarkers(e,t){return Ht(e,"addMarkers",t)},removeMarkers(e,t){return Ht(e,"removeMarkers",t)},moveAlong(e,t){return Ht(e,"moveAlong",t)},openMapApp(e,t){return Ht(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function Tn(e,t,n,r,a){let u=In().find(g=>g.$page.id===t);if(u==null?void 0:u.$page.meta.isNVue){let g=u.$vm;return Zn[n](ia(e,g),r)}ft.invokeViewMethod("map."+e,{type:n,data:r},t,a)}function bo(e){return`IntersectionObserver.${e}`}function Tr({reqId:e,component:t,options:n,callback:r},a){let u=bo(e);ft.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),ft.subscribe(u,r)}function Fr({reqId:e,component:t},n){ft.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),ft.unsubscribe(bo(e))}function Ua(e){return`MediaQueryObserver.${e}`}function aa({reqId:e,component:t,options:n,callback:r},a){let u=Ua(e);ft.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),ft.subscribe(u,r)}function Yo({reqId:e,component:t},n){ft.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),ft.unsubscribe(Ua(e))}function gi(e){let t=e.split("/");return t[t.length-1]}function zi(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let pi=200,qo=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Ta="_doc/uniapp_temp",vi=`${Ta}_${Date.now()}`,as="backbutton";function sa(){Mt.navigateBack({from:"backbutton",success(){}})}let Dn=xt(),un=xt();function pr(){return ne.extend({},un)}function Pr(){return ne.extend({},Dn)}function Wi({path:e,query:t,referrerInfo:n}){ne.extend(Dn,{path:e,query:t?Q.parseQuery(t):{},referrerInfo:n||{}})}function Ha({path:e,query:t,referrerInfo:n}){return ne.extend(un,{path:e,query:t?Q.parseQuery(t):{},referrerInfo:n||{},channel:s.runtime.channel,launcher:s.runtime.launcher}),ne.extend(Dn,un),ne.extend({},un)}function Pa(){let e=p.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:a,fromAppid:u}=e.getRedirectInfo()||{},g={appId:u,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:a}}}function Ko(e){var t={exports:{}};return e(t,t.exports),t.exports}var io=Ko(function(e,t){var n=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function r(g,b){return Object.prototype.hasOwnProperty.call(g,b)}t.assign=function(g){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var V=b.shift();if(!!V){if(typeof V!="object")throw new TypeError(V+"must be non-object");for(var O in V)r(V,O)&&(g[O]=V[O])}}return g},t.shrinkBuf=function(g,b){return g.length===b?g:g.subarray?g.subarray(0,b):(g.length=b,g)};var a={arraySet:function(g,b,V,O,D){if(b.subarray&&g.subarray){g.set(b.subarray(V,V+O),D);return}for(var le=0;le<O;le++)g[D+le]=b[V+le]},flattenChunks:function(g){var b,V,O,D,le,ye;for(O=0,b=0,V=g.length;b<V;b++)O+=g[b].length;for(ye=new Uint8Array(O),D=0,b=0,V=g.length;b<V;b++)le=g[b],ye.set(le,D),D+=le.length;return ye}},u={arraySet:function(g,b,V,O,D){for(var le=0;le<O;le++)g[D+le]=b[V+le]},flattenChunks:function(g){return[].concat.apply([],g)}};t.setTyped=function(g){g?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,a)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,u))},t.setTyped(n)}),Lt=io,Eo=4,ss=0,Ia=1,Cs=2;function Ne(e){for(var t=e.length;--t>=0;)e[t]=0}var At=0,Pt=1,Pn=2,Xn=3,Ir=258,Gi=29,Yi=256,yo=Yi+1+Gi,Jo=30,ja=19,Xs=2*yo+1,la=15,Os=16,Qs=7,ls=256,el=16,tl=17,nl=18,za=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Wa=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],jl=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],rl=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],il=512,oo=new Array((yo+2)*2);Ne(oo);var Na=new Array(Jo*2);Ne(Na);var Ga=new Array(il);Ne(Ga);var Ya=new Array(Ir-Xn+1);Ne(Ya);var ca=new Array(Gi);Ne(ca);var ka=new Array(Jo);Ne(ka);function Ra(e,t,n,r,a){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=a,this.has_stree=e&&e.length}var Ts,qa,cs;function us(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function ol(e){return e<256?Ga[e]:Ga[256+(e>>>7)]}function Ka(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function ri(e,t,n){e.bi_valid>Os-n?(e.bi_buf|=t<<e.bi_valid&65535,Ka(e,e.bi_buf),e.bi_buf=t>>Os-e.bi_valid,e.bi_valid+=n-Os):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function ao(e,t,n){ri(e,n[t*2],n[t*2+1])}function Ps(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function al(e){e.bi_valid===16?(Ka(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function sl(e,t){var n=t.dyn_tree,r=t.max_code,a=t.stat_desc.static_tree,u=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,b=t.stat_desc.extra_base,V=t.stat_desc.max_length,O,D,le,ye,ke,yt,Tt=0;for(ye=0;ye<=la;ye++)e.bl_count[ye]=0;for(n[e.heap[e.heap_max]*2+1]=0,O=e.heap_max+1;O<Xs;O++)D=e.heap[O],ye=n[n[D*2+1]*2+1]+1,ye>V&&(ye=V,Tt++),n[D*2+1]=ye,!(D>r)&&(e.bl_count[ye]++,ke=0,D>=b&&(ke=g[D-b]),yt=n[D*2],e.opt_len+=yt*(ye+ke),u&&(e.static_len+=yt*(a[D*2+1]+ke)));if(Tt!==0){do{for(ye=V-1;e.bl_count[ye]===0;)ye--;e.bl_count[ye]--,e.bl_count[ye+1]+=2,e.bl_count[V]--,Tt-=2}while(Tt>0);for(ye=V;ye!==0;ye--)for(D=e.bl_count[ye];D!==0;)le=e.heap[--O],!(le>r)&&(n[le*2+1]!==ye&&(e.opt_len+=(ye-n[le*2+1])*n[le*2],n[le*2+1]=ye),D--)}}function fs(e,t,n){var r=new Array(la+1),a=0,u,g;for(u=1;u<=la;u++)r[u]=a=a+n[u-1]<<1;for(g=0;g<=t;g++){var b=e[g*2+1];b!==0&&(e[g*2]=Ps(r[b]++,b))}}function ll(){var e,t,n,r,a,u=new Array(la+1);for(n=0,r=0;r<Gi-1;r++)for(ca[r]=n,e=0;e<1<<za[r];e++)Ya[n++]=r;for(Ya[n-1]=r,a=0,r=0;r<16;r++)for(ka[r]=a,e=0;e<1<<Wa[r];e++)Ga[a++]=r;for(a>>=7;r<Jo;r++)for(ka[r]=a<<7,e=0;e<1<<Wa[r]-7;e++)Ga[256+a++]=r;for(t=0;t<=la;t++)u[t]=0;for(e=0;e<=143;)oo[e*2+1]=8,e++,u[8]++;for(;e<=255;)oo[e*2+1]=9,e++,u[9]++;for(;e<=279;)oo[e*2+1]=7,e++,u[7]++;for(;e<=287;)oo[e*2+1]=8,e++,u[8]++;for(fs(oo,yo+1,u),e=0;e<Jo;e++)Na[e*2+1]=5,Na[e*2]=Ps(e,5);Ts=new Ra(oo,za,Yi+1,yo,la),qa=new Ra(Na,Wa,0,Jo,la),cs=new Ra(new Array(0),jl,0,ja,Qs)}function Is(e){var t;for(t=0;t<yo;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Jo;t++)e.dyn_dtree[t*2]=0;for(t=0;t<ja;t++)e.bl_tree[t*2]=0;e.dyn_ltree[ls*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function cl(e){e.bi_valid>8?Ka(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function zl(e,t,n,r){cl(e),r&&(Ka(e,n),Ka(e,~n)),Lt.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function ul(e,t,n,r){var a=t*2,u=n*2;return e[a]<e[u]||e[a]===e[u]&&r[t]<=r[n]}function Ja(e,t,n){for(var r=e.heap[n],a=n<<1;a<=e.heap_len&&(a<e.heap_len&&ul(t,e.heap[a+1],e.heap[a],e.depth)&&a++,!ul(t,r,e.heap[a],e.depth));)e.heap[n]=e.heap[a],n=a,a<<=1;e.heap[n]=r}function Ns(e,t,n){var r,a,u=0,g,b;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+u*2]<<8|e.pending_buf[e.d_buf+u*2+1],a=e.pending_buf[e.l_buf+u],u++,r===0?ao(e,a,t):(g=Ya[a],ao(e,g+Yi+1,t),b=za[g],b!==0&&(a-=ca[g],ri(e,a,b)),r--,g=ol(r),ao(e,g,n),b=Wa[g],b!==0&&(r-=ka[g],ri(e,r,b)));while(u<e.last_lit);ao(e,ls,t)}function wo(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,a=t.stat_desc.has_stree,u=t.stat_desc.elems,g,b,V=-1,O;for(e.heap_len=0,e.heap_max=Xs,g=0;g<u;g++)n[g*2]!==0?(e.heap[++e.heap_len]=V=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)O=e.heap[++e.heap_len]=V<2?++V:0,n[O*2]=1,e.depth[O]=0,e.opt_len--,a&&(e.static_len-=r[O*2+1]);for(t.max_code=V,g=e.heap_len>>1;g>=1;g--)Ja(e,n,g);O=u;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Ja(e,n,1),b=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=b,n[O*2]=n[g*2]+n[b*2],e.depth[O]=(e.depth[g]>=e.depth[b]?e.depth[g]:e.depth[b])+1,n[g*2+1]=n[b*2+1]=O,e.heap[1]=O++,Ja(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],sl(e,t),fs(n,V,e.bl_count)}function xa(e,t,n){var r,a=-1,u,g=t[0*2+1],b=0,V=7,O=4;for(g===0&&(V=138,O=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)u=g,g=t[(r+1)*2+1],!(++b<V&&u===g)&&(b<O?e.bl_tree[u*2]+=b:u!==0?(u!==a&&e.bl_tree[u*2]++,e.bl_tree[el*2]++):b<=10?e.bl_tree[tl*2]++:e.bl_tree[nl*2]++,b=0,a=u,g===0?(V=138,O=3):u===g?(V=6,O=3):(V=7,O=4))}function ds(e,t,n){var r,a=-1,u,g=t[0*2+1],b=0,V=7,O=4;for(g===0&&(V=138,O=3),r=0;r<=n;r++)if(u=g,g=t[(r+1)*2+1],!(++b<V&&u===g)){if(b<O)do ao(e,u,e.bl_tree);while(--b!==0);else u!==0?(u!==a&&(ao(e,u,e.bl_tree),b--),ao(e,el,e.bl_tree),ri(e,b-3,2)):b<=10?(ao(e,tl,e.bl_tree),ri(e,b-3,3)):(ao(e,nl,e.bl_tree),ri(e,b-11,7));b=0,a=u,g===0?(V=138,O=3):u===g?(V=6,O=3):(V=7,O=4)}}function fl(e){var t;for(xa(e,e.dyn_ltree,e.l_desc.max_code),xa(e,e.dyn_dtree,e.d_desc.max_code),wo(e,e.bl_desc),t=ja-1;t>=3&&e.bl_tree[rl[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function Wl(e,t,n,r){var a;for(ri(e,t-257,5),ri(e,n-1,5),ri(e,r-4,4),a=0;a<r;a++)ri(e,e.bl_tree[rl[a]*2+1],3);ds(e,e.dyn_ltree,t-1),ds(e,e.dyn_dtree,n-1)}function Zo(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return ss;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return Ia;for(n=32;n<Yi;n++)if(e.dyn_ltree[n*2]!==0)return Ia;return ss}var ks=!1;function dl(e){ks||(ll(),ks=!0),e.l_desc=new us(e.dyn_ltree,Ts),e.d_desc=new us(e.dyn_dtree,qa),e.bl_desc=new us(e.bl_tree,cs),e.bi_buf=0,e.bi_valid=0,Is(e)}function hl(e,t,n,r){ri(e,(At<<1)+(r?1:0),3),zl(e,t,n,!0)}function Rs(e){ri(e,Pt<<1,3),ao(e,ls,oo),al(e)}function ko(e,t,n,r){var a,u,g=0;e.level>0?(e.strm.data_type===Cs&&(e.strm.data_type=Zo(e)),wo(e,e.l_desc),wo(e,e.d_desc),g=fl(e),a=e.opt_len+3+7>>>3,u=e.static_len+3+7>>>3,u<=a&&(a=u)):a=u=n+5,n+4<=a&&t!==-1?hl(e,t,n,r):e.strategy===Eo||u===a?(ri(e,(Pt<<1)+(r?1:0),3),Ns(e,oo,Na)):(ri(e,(Pn<<1)+(r?1:0),3),Wl(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),Ns(e,e.dyn_ltree,e.dyn_dtree)),Is(e),r&&cl(e)}function ua(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(Ya[n]+Yi+1)*2]++,e.dyn_dtree[ol(t)*2]++),e.last_lit===e.lit_bufsize-1}var gl=dl,Gl=hl,hs=ko,pl=ua,vl=Rs,ml={_tr_init:gl,_tr_stored_block:Gl,_tr_flush_block:hs,_tr_tally:pl,_tr_align:vl};function _l(e,t,n,r){for(var a=e&65535|0,u=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do a=a+t[r++]|0,u=u+a|0;while(--g);a%=65521,u%=65521}return a|u<<16|0}var bl=_l;function xs(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var El=xs();function Yl(e,t,n,r){var a=El,u=r+n;e^=-1;for(var g=r;g<u;g++)e=e>>>8^a[(e^t[g])&255];return e^-1}var ql=Yl,o={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},c=ml,v=bl,E=ql,C=o,T=0,F=1,Y=3,G=4,oe=5,Be=0,ct=1,ae=-2,Je=-3,Ge=-5,pt=-1,Re=1,Oe=2,Le=3,We=4,i=0,l=2,d=8,h=9,w=15,S=8,N=29,L=256,M=L+1+N,X=30,fe=19,Me=2*M+1,re=15,de=3,xe=258,rt=xe+de+1,Pe=32,Se=42,Ie=69,Ce=73,Ye=91,He=103,it=113,Fe=666,Xe=1,Ot=2,It=3,Ft=4,Nt=3;function gt(e,t){return e.msg=C[t],t}function H(e){return(e<<1)-(e>4?9:0)}function q(e){for(var t=e.length;--t>=0;)e[t]=0}function ue(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(Lt.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function _e(e,t){c._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,ue(e.strm)}function ge(e,t){e.pending_buf[e.pending++]=t}function Ze(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function ht(e,t,n,r){var a=e.avail_in;return a>r&&(a=r),a===0?0:(e.avail_in-=a,Lt.arraySet(t,e.input,e.next_in,a,n),e.state.wrap===1?e.adler=v(e.adler,t,a,n):e.state.wrap===2&&(e.adler=E(e.adler,t,a,n)),e.next_in+=a,e.total_in+=a,a)}function Qe(e,t){var n=e.max_chain_length,r=e.strstart,a,u,g=e.prev_length,b=e.nice_match,V=e.strstart>e.w_size-rt?e.strstart-(e.w_size-rt):0,O=e.window,D=e.w_mask,le=e.prev,ye=e.strstart+xe,ke=O[r+g-1],yt=O[r+g];e.prev_length>=e.good_match&&(n>>=2),b>e.lookahead&&(b=e.lookahead);do if(a=t,!(O[a+g]!==yt||O[a+g-1]!==ke||O[a]!==O[r]||O[++a]!==O[r+1])){r+=2,a++;do;while(O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&r<ye);if(u=xe-(ye-r),r=ye-xe,u>g){if(e.match_start=t,g=u,u>=b)break;ke=O[r+g-1],yt=O[r+g]}}while((t=le[t&D])>V&&--n!==0);return g<=e.lookahead?g:e.lookahead}function et(e){var t=e.w_size,n,r,a,u,g;do{if(u=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-rt)){Lt.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do a=e.head[--n],e.head[n]=a>=t?a-t:0;while(--r);r=t,n=r;do a=e.prev[--n],e.prev[n]=a>=t?a-t:0;while(--r);u+=t}if(e.strm.avail_in===0)break;if(r=ht(e.strm,e.window,e.strstart+e.lookahead,u),e.lookahead+=r,e.lookahead+e.insert>=de)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+de-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<de)););}while(e.lookahead<rt&&e.strm.avail_in!==0)}function De(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(et(e),e.lookahead===0&&t===T)return Xe;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,_e(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-rt&&(_e(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(_e(e,!0),e.strm.avail_out===0?It:Ft):(e.strstart>e.block_start&&(_e(e,!1),e.strm.avail_out===0),Xe)}function Ct(e,t){for(var n,r;;){if(e.lookahead<rt){if(et(e),e.lookahead<rt&&t===T)return Xe;if(e.lookahead===0)break}if(n=0,e.lookahead>=de&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-rt&&(e.match_length=Qe(e,n)),e.match_length>=de)if(r=c._tr_tally(e,e.strstart-e.match_start,e.match_length-de),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=de){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(_e(e,!1),e.strm.avail_out===0))return Xe}return e.insert=e.strstart<de-1?e.strstart:de-1,t===G?(_e(e,!0),e.strm.avail_out===0?It:Ft):e.last_lit&&(_e(e,!1),e.strm.avail_out===0)?Xe:Ot}function wt(e,t){for(var n,r,a;;){if(e.lookahead<rt){if(et(e),e.lookahead<rt&&t===T)return Xe;if(e.lookahead===0)break}if(n=0,e.lookahead>=de&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=de-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-rt&&(e.match_length=Qe(e,n),e.match_length<=5&&(e.strategy===Re||e.match_length===de&&e.strstart-e.match_start>4096)&&(e.match_length=de-1)),e.prev_length>=de&&e.match_length<=e.prev_length){a=e.strstart+e.lookahead-de,r=c._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-de),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=a&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=de-1,e.strstart++,r&&(_e(e,!1),e.strm.avail_out===0))return Xe}else if(e.match_available){if(r=c._tr_tally(e,0,e.window[e.strstart-1]),r&&_e(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return Xe}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=c._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<de-1?e.strstart:de-1,t===G?(_e(e,!0),e.strm.avail_out===0?It:Ft):e.last_lit&&(_e(e,!1),e.strm.avail_out===0)?Xe:Ot}function St(e,t){for(var n,r,a,u,g=e.window;;){if(e.lookahead<=xe){if(et(e),e.lookahead<=xe&&t===T)return Xe;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=de&&e.strstart>0&&(a=e.strstart-1,r=g[a],r===g[++a]&&r===g[++a]&&r===g[++a])){u=e.strstart+xe;do;while(r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&a<u);e.match_length=xe-(u-a),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=de?(n=c._tr_tally(e,1,e.match_length-de),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(_e(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(_e(e,!0),e.strm.avail_out===0?It:Ft):e.last_lit&&(_e(e,!1),e.strm.avail_out===0)?Xe:Ot}function Ut(e,t){for(var n;;){if(e.lookahead===0&&(et(e),e.lookahead===0)){if(t===T)return Xe;break}if(e.match_length=0,n=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(_e(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(_e(e,!0),e.strm.avail_out===0?It:Ft):e.last_lit&&(_e(e,!1),e.strm.avail_out===0)?Xe:Ot}function Zt(e,t,n,r,a){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=a}var fn;fn=[new Zt(0,0,0,0,De),new Zt(4,4,8,4,Ct),new Zt(4,5,16,8,Ct),new Zt(4,6,32,32,Ct),new Zt(4,4,16,16,wt),new Zt(8,16,32,32,wt),new Zt(8,16,128,128,wt),new Zt(8,32,128,256,wt),new Zt(32,128,258,1024,wt),new Zt(32,258,258,4096,wt)];function nr(e){e.window_size=2*e.w_size,q(e.head),e.max_lazy_match=fn[e.level].max_lazy,e.good_match=fn[e.level].good_length,e.nice_match=fn[e.level].nice_length,e.max_chain_length=fn[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=de-1,e.match_available=0,e.ins_h=0}function rr(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=d,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Lt.Buf16(Me*2),this.dyn_dtree=new Lt.Buf16((2*X+1)*2),this.bl_tree=new Lt.Buf16((2*fe+1)*2),q(this.dyn_ltree),q(this.dyn_dtree),q(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Lt.Buf16(re+1),this.heap=new Lt.Buf16(2*M+1),q(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Lt.Buf16(2*M+1),q(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function So(e){var t;return!e||!e.state?gt(e,ae):(e.total_in=e.total_out=0,e.data_type=l,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?Se:it,e.adler=t.wrap===2?0:1,t.last_flush=T,c._tr_init(t),Be)}function Ro(e){var t=So(e);return t===Be&&nr(e.state),t}function W(e,t){return!e||!e.state||e.state.wrap!==2?ae:(e.state.gzhead=t,Be)}function te(e,t,n,r,a,u){if(!e)return ae;var g=1;if(t===pt&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),a<1||a>h||n!==d||r<8||r>15||t<0||t>9||u<0||u>We)return gt(e,ae);r===8&&(r=9);var b=new rr;return e.state=b,b.strm=e,b.wrap=g,b.gzhead=null,b.w_bits=r,b.w_size=1<<b.w_bits,b.w_mask=b.w_size-1,b.hash_bits=a+7,b.hash_size=1<<b.hash_bits,b.hash_mask=b.hash_size-1,b.hash_shift=~~((b.hash_bits+de-1)/de),b.window=new Lt.Buf8(b.w_size*2),b.head=new Lt.Buf16(b.hash_size),b.prev=new Lt.Buf16(b.w_size),b.lit_bufsize=1<<a+6,b.pending_buf_size=b.lit_bufsize*4,b.pending_buf=new Lt.Buf8(b.pending_buf_size),b.d_buf=1*b.lit_bufsize,b.l_buf=(1+2)*b.lit_bufsize,b.level=t,b.strategy=u,b.method=n,Ro(e)}function Ee(e,t){return te(e,t,d,w,S,i)}function Te(e,t){var n,r,a,u;if(!e||!e.state||t>oe||t<0)return e?gt(e,ae):ae;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===Fe&&t!==G)return gt(e,e.avail_out===0?Ge:ae);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===Se)if(r.wrap===2)e.adler=0,ge(r,31),ge(r,139),ge(r,8),r.gzhead?(ge(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),ge(r,r.gzhead.time&255),ge(r,r.gzhead.time>>8&255),ge(r,r.gzhead.time>>16&255),ge(r,r.gzhead.time>>24&255),ge(r,r.level===9?2:r.strategy>=Oe||r.level<2?4:0),ge(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(ge(r,r.gzhead.extra.length&255),ge(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=E(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=Ie):(ge(r,0),ge(r,0),ge(r,0),ge(r,0),ge(r,0),ge(r,r.level===9?2:r.strategy>=Oe||r.level<2?4:0),ge(r,Nt),r.status=it);else{var g=d+(r.w_bits-8<<4)<<8,b=-1;r.strategy>=Oe||r.level<2?b=0:r.level<6?b=1:r.level===6?b=2:b=3,g|=b<<6,r.strstart!==0&&(g|=Pe),g+=31-g%31,r.status=it,Ze(r,g),r.strstart!==0&&(Ze(r,e.adler>>>16),Ze(r,e.adler&65535)),e.adler=1}if(r.status===Ie)if(r.gzhead.extra){for(a=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),ue(e),a=r.pending,r.pending===r.pending_buf_size));)ge(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=Ce)}else r.status=Ce;if(r.status===Ce)if(r.gzhead.name){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),ue(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.name.length?u=r.gzhead.name.charCodeAt(r.gzindex++)&255:u=0,ge(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.gzindex=0,r.status=Ye)}else r.status=Ye;if(r.status===Ye)if(r.gzhead.comment){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),ue(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.comment.length?u=r.gzhead.comment.charCodeAt(r.gzindex++)&255:u=0,ge(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=E(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.status=He)}else r.status=He;if(r.status===He&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&ue(e),r.pending+2<=r.pending_buf_size&&(ge(r,e.adler&255),ge(r,e.adler>>8&255),e.adler=0,r.status=it)):r.status=it),r.pending!==0){if(ue(e),e.avail_out===0)return r.last_flush=-1,Be}else if(e.avail_in===0&&H(t)<=H(n)&&t!==G)return gt(e,Ge);if(r.status===Fe&&e.avail_in!==0)return gt(e,Ge);if(e.avail_in!==0||r.lookahead!==0||t!==T&&r.status!==Fe){var V=r.strategy===Oe?Ut(r,t):r.strategy===Le?St(r,t):fn[r.level].func(r,t);if((V===It||V===Ft)&&(r.status=Fe),V===Xe||V===It)return e.avail_out===0&&(r.last_flush=-1),Be;if(V===Ot&&(t===F?c._tr_align(r):t!==oe&&(c._tr_stored_block(r,0,0,!1),t===Y&&(q(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),ue(e),e.avail_out===0))return r.last_flush=-1,Be}return t!==G?Be:r.wrap<=0?ct:(r.wrap===2?(ge(r,e.adler&255),ge(r,e.adler>>8&255),ge(r,e.adler>>16&255),ge(r,e.adler>>24&255),ge(r,e.total_in&255),ge(r,e.total_in>>8&255),ge(r,e.total_in>>16&255),ge(r,e.total_in>>24&255)):(Ze(r,e.adler>>>16),Ze(r,e.adler&65535)),ue(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Be:ct)}function Ve(e){var t;return!e||!e.state?ae:(t=e.state.status,t!==Se&&t!==Ie&&t!==Ce&&t!==Ye&&t!==He&&t!==it&&t!==Fe?gt(e,ae):(e.state=null,t===it?gt(e,Je):Be))}function ot(e,t){var n=t.length,r,a,u,g,b,V,O,D;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==Se||r.lookahead))return ae;for(g===1&&(e.adler=v(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(q(r.head),r.strstart=0,r.block_start=0,r.insert=0),D=new Lt.Buf8(r.w_size),Lt.arraySet(D,t,n-r.w_size,r.w_size,0),t=D,n=r.w_size),b=e.avail_in,V=e.next_in,O=e.input,e.avail_in=n,e.next_in=0,e.input=t,et(r);r.lookahead>=de;){a=r.strstart,u=r.lookahead-(de-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[a+de-1])&r.hash_mask,r.prev[a&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=a,a++;while(--u);r.strstart=a,r.lookahead=de-1,et(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=de-1,r.match_available=0,e.next_in=V,e.input=O,e.avail_in=b,r.wrap=g,Be}var dt=Ee,qe=te,tt=Ro,je=So,kt=W,Vt=Te,$t=Ve,tn=ot,Vr="pako deflate (from Nodeca project)",vr={deflateInit:dt,deflateInit2:qe,deflateReset:tt,deflateResetKeep:je,deflateSetHeader:kt,deflate:Vt,deflateEnd:$t,deflateSetDictionary:tn,deflateInfo:Vr},$r=!0,mi=!0;try{String.fromCharCode.apply(null,[0])}catch(e){$r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){mi=!1}for(var xo=new Lt.Buf8(256),so=0;so<256;so++)xo[so]=so>=252?6:so>=248?5:so>=240?4:so>=224?3:so>=192?2:1;xo[254]=xo[254]=1;var Ur=function(e){var t,n,r,a,u,g=e.length,b=0;for(a=0;a<g;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<g&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),b+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Lt.Buf8(b),u=0,a=0;u<b;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<g&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),n<128?t[u++]=n:n<2048?(t[u++]=192|n>>>6,t[u++]=128|n&63):n<65536?(t[u++]=224|n>>>12,t[u++]=128|n>>>6&63,t[u++]=128|n&63):(t[u++]=240|n>>>18,t[u++]=128|n>>>12&63,t[u++]=128|n>>>6&63,t[u++]=128|n&63);return t};function gs(e,t){if(t<65534&&(e.subarray&&mi||!e.subarray&&$r))return String.fromCharCode.apply(null,Lt.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var Bs=function(e){return gs(e,e.length)},lo=function(e){for(var t=new Lt.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},Za=function(e,t){var n,r,a,u,g=t||e.length,b=new Array(g*2);for(r=0,n=0;n<g;){if(a=e[n++],a<128){b[r++]=a;continue}if(u=xo[a],u>4){b[r++]=65533,n+=u-1;continue}for(a&=u===2?31:u===3?15:7;u>1&&n<g;)a=a<<6|e[n++]&63,u--;if(u>1){b[r++]=65533;continue}a<65536?b[r++]=a:(a-=65536,b[r++]=55296|a>>10&1023,b[r++]=56320|a&1023)}return gs(b,r)},ps=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+xo[e[n]]>t?n:t},Ba={string2buf:Ur,buf2binstring:Bs,binstring2buf:lo,buf2string:Za,utf8border:ps};function Xa(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var fa=Xa,Xo=vr,co=Ba,Kl=fa,yl=Object.prototype.toString,mc=0,wl=4,Sl=0,Tf=1,Pf=2,Jp=-1,Zp=0,Xp=8;function Ms(e){if(!(this instanceof Ms))return new Ms(e);this.options=Lt.assign({level:Jp,method:Xp,chunkSize:16384,windowBits:15,memLevel:8,strategy:Zp,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Kl,this.strm.avail_out=0;var n=Xo.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==Sl)throw new Error(C[n]);if(t.header&&Xo.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=co.string2buf(t.dictionary):yl.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=Xo.deflateSetDictionary(this.strm,r),n!==Sl)throw new Error(C[n]);this._dict_set=!0}}Ms.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a,u;if(this.ended)return!1;u=t===~~t?t:t===!0?wl:mc,typeof e=="string"?n.input=co.string2buf(e):yl.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Lt.Buf8(r),n.next_out=0,n.avail_out=r),a=Xo.deflate(n,u),a!==Tf&&a!==Sl)return this.onEnd(a),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(u===wl||u===Pf))&&(this.options.to==="string"?this.onData(co.buf2binstring(Lt.shrinkBuf(n.output,n.next_out))):this.onData(Lt.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&a!==Tf);return u===wl?(a=Xo.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===Sl):(u===Pf&&(this.onEnd(Sl),n.avail_out=0),!0)},Ms.prototype.onData=function(e){this.chunks.push(e)},Ms.prototype.onEnd=function(e){e===Sl&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Lt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function fu(e,t){var n=new Ms(t);if(n.push(e,!0),n.err)throw n.msg||C[n.err];return n.result}function Qp(e,t){return t=t||{},t.raw=!0,fu(e,t)}function ev(e,t){return t=t||{},t.gzip=!0,fu(e,t)}var tv=Ms,nv=fu,rv=Qp,iv=ev,ov={Deflate:tv,deflate:nv,deflateRaw:rv,gzip:iv},_c=30,av=12,sv=function(t,n){var r,a,u,g,b,V,O,D,le,ye,ke,yt,Tt,Xt,zt,Rn,Ln,en,mt,dn,Qt,Gt,pn,sr,Yt;r=t.state,a=t.next_in,sr=t.input,u=a+(t.avail_in-5),g=t.next_out,Yt=t.output,b=g-(n-t.avail_out),V=g+(t.avail_out-257),O=r.dmax,D=r.wsize,le=r.whave,ye=r.wnext,ke=r.window,yt=r.hold,Tt=r.bits,Xt=r.lencode,zt=r.distcode,Rn=(1<<r.lenbits)-1,Ln=(1<<r.distbits)-1;e:do{Tt<15&&(yt+=sr[a++]<<Tt,Tt+=8,yt+=sr[a++]<<Tt,Tt+=8),en=Xt[yt&Rn];t:for(;;){if(mt=en>>>24,yt>>>=mt,Tt-=mt,mt=en>>>16&255,mt===0)Yt[g++]=en&65535;else if(mt&16){dn=en&65535,mt&=15,mt&&(Tt<mt&&(yt+=sr[a++]<<Tt,Tt+=8),dn+=yt&(1<<mt)-1,yt>>>=mt,Tt-=mt),Tt<15&&(yt+=sr[a++]<<Tt,Tt+=8,yt+=sr[a++]<<Tt,Tt+=8),en=zt[yt&Ln];n:for(;;){if(mt=en>>>24,yt>>>=mt,Tt-=mt,mt=en>>>16&255,mt&16){if(Qt=en&65535,mt&=15,Tt<mt&&(yt+=sr[a++]<<Tt,Tt+=8,Tt<mt&&(yt+=sr[a++]<<Tt,Tt+=8)),Qt+=yt&(1<<mt)-1,Qt>O){t.msg="invalid distance too far back",r.mode=_c;break e}if(yt>>>=mt,Tt-=mt,mt=g-b,Qt>mt){if(mt=Qt-mt,mt>le&&r.sane){t.msg="invalid distance too far back",r.mode=_c;break e}if(Gt=0,pn=ke,ye===0){if(Gt+=D-mt,mt<dn){dn-=mt;do Yt[g++]=ke[Gt++];while(--mt);Gt=g-Qt,pn=Yt}}else if(ye<mt){if(Gt+=D+ye-mt,mt-=ye,mt<dn){dn-=mt;do Yt[g++]=ke[Gt++];while(--mt);if(Gt=0,ye<dn){mt=ye,dn-=mt;do Yt[g++]=ke[Gt++];while(--mt);Gt=g-Qt,pn=Yt}}}else if(Gt+=ye-mt,mt<dn){dn-=mt;do Yt[g++]=ke[Gt++];while(--mt);Gt=g-Qt,pn=Yt}for(;dn>2;)Yt[g++]=pn[Gt++],Yt[g++]=pn[Gt++],Yt[g++]=pn[Gt++],dn-=3;dn&&(Yt[g++]=pn[Gt++],dn>1&&(Yt[g++]=pn[Gt++]))}else{Gt=g-Qt;do Yt[g++]=Yt[Gt++],Yt[g++]=Yt[Gt++],Yt[g++]=Yt[Gt++],dn-=3;while(dn>2);dn&&(Yt[g++]=Yt[Gt++],dn>1&&(Yt[g++]=Yt[Gt++]))}}else if((mt&64)===0){en=zt[(en&65535)+(yt&(1<<mt)-1)];continue n}else{t.msg="invalid distance code",r.mode=_c;break e}break}}else if((mt&64)===0){en=Xt[(en&65535)+(yt&(1<<mt)-1)];continue t}else if(mt&32){r.mode=av;break e}else{t.msg="invalid literal/length code",r.mode=_c;break e}break}}while(a<u&&g<V);dn=Tt>>3,a-=dn,Tt-=dn<<3,yt&=(1<<Tt)-1,t.next_in=a,t.next_out=g,t.avail_in=a<u?5+(u-a):5-(a-u),t.avail_out=g<V?257+(V-g):257-(g-V),r.hold=yt,r.bits=Tt},Al=15,If=852,Nf=592,kf=0,du=1,Rf=2,lv=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],cv=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],uv=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],fv=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],dv=function(t,n,r,a,u,g,b,V){var O=V.bits,D=0,le=0,ye=0,ke=0,yt=0,Tt=0,Xt=0,zt=0,Rn=0,Ln=0,en,mt,dn,Qt,Gt,pn=null,sr=0,Yt,pa=new Lt.Buf16(Al+1),Gc=new Lt.Buf16(Al+1),Yc=null,Kg=0,Jg,qc,Kc;for(D=0;D<=Al;D++)pa[D]=0;for(le=0;le<a;le++)pa[n[r+le]]++;for(yt=O,ke=Al;ke>=1&&pa[ke]===0;ke--);if(yt>ke&&(yt=ke),ke===0)return u[g++]=1<<24|64<<16|0,u[g++]=1<<24|64<<16|0,V.bits=1,0;for(ye=1;ye<ke&&pa[ye]===0;ye++);for(yt<ye&&(yt=ye),zt=1,D=1;D<=Al;D++)if(zt<<=1,zt-=pa[D],zt<0)return-1;if(zt>0&&(t===kf||ke!==1))return-1;for(Gc[1]=0,D=1;D<Al;D++)Gc[D+1]=Gc[D]+pa[D];for(le=0;le<a;le++)n[r+le]!==0&&(b[Gc[n[r+le]]++]=le);if(t===kf?(pn=Yc=b,Yt=19):t===du?(pn=lv,sr-=257,Yc=cv,Kg-=257,Yt=256):(pn=uv,Yc=fv,Yt=-1),Ln=0,le=0,D=ye,Gt=g,Tt=yt,Xt=0,dn=-1,Rn=1<<yt,Qt=Rn-1,t===du&&Rn>If||t===Rf&&Rn>Nf)return 1;for(;;){Jg=D-Xt,b[le]<Yt?(qc=0,Kc=b[le]):b[le]>Yt?(qc=Yc[Kg+b[le]],Kc=pn[sr+b[le]]):(qc=32+64,Kc=0),en=1<<D-Xt,mt=1<<Tt,ye=mt;do mt-=en,u[Gt+(Ln>>Xt)+mt]=Jg<<24|qc<<16|Kc|0;while(mt!==0);for(en=1<<D-1;Ln&en;)en>>=1;if(en!==0?(Ln&=en-1,Ln+=en):Ln=0,le++,--pa[D]===0){if(D===ke)break;D=n[r+b[le]]}if(D>yt&&(Ln&Qt)!==dn){for(Xt===0&&(Xt=yt),Gt+=ye,Tt=D-Xt,zt=1<<Tt;Tt+Xt<ke&&(zt-=pa[Tt+Xt],!(zt<=0));)Tt++,zt<<=1;if(Rn+=1<<Tt,t===du&&Rn>If||t===Rf&&Rn>Nf)return 1;dn=Ln&Qt,u[dn]=yt<<24|Tt<<16|Gt-g|0}}return Ln!==0&&(u[Gt+Ln]=D-Xt<<24|64<<16|0),V.bits=yt,0},hv=sv,Jl=dv,gv=0,xf=1,Bf=2,Mf=4,pv=5,bc=6,Ds=0,vv=1,mv=2,Qo=-2,Df=-3,Lf=-4,_v=-5,Ff=8,Vf=1,$f=2,Uf=3,Hf=4,jf=5,zf=6,Wf=7,Gf=8,Yf=9,qf=10,Ec=11,Qa=12,hu=13,Kf=14,gu=15,Jf=16,Zf=17,Xf=18,Qf=19,yc=20,wc=21,ed=22,td=23,nd=24,rd=25,id=26,pu=27,od=28,ad=29,mr=30,sd=31,bv=32,Ev=852,yv=592,wv=15,Sv=wv;function ld(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function Av(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Lt.Buf16(320),this.work=new Lt.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function cd(e){var t;return!e||!e.state?Qo:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Vf,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Lt.Buf32(Ev),t.distcode=t.distdyn=new Lt.Buf32(yv),t.sane=1,t.back=-1,Ds)}function ud(e){var t;return!e||!e.state?Qo:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,cd(e))}function fd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?Qo:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,ud(e))}function dd(e,t){var n,r;return e?(r=new Av,e.state=r,r.window=null,n=fd(e,t),n!==Ds&&(e.state=null),n):Qo}function Cv(e){return dd(e,Sv)}var hd=!0,vu,mu;function Ov(e){if(hd){var t;for(vu=new Lt.Buf32(512),mu=new Lt.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Jl(xf,e.lens,0,288,vu,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Jl(Bf,e.lens,0,32,mu,0,e.work,{bits:5}),hd=!1}e.lencode=vu,e.lenbits=9,e.distcode=mu,e.distbits=5}function gd(e,t,n,r){var a,u=e.state;return u.window===null&&(u.wsize=1<<u.wbits,u.wnext=0,u.whave=0,u.window=new Lt.Buf8(u.wsize)),r>=u.wsize?(Lt.arraySet(u.window,t,n-u.wsize,u.wsize,0),u.wnext=0,u.whave=u.wsize):(a=u.wsize-u.wnext,a>r&&(a=r),Lt.arraySet(u.window,t,n-r,a,u.wnext),r-=a,r?(Lt.arraySet(u.window,t,n-r,r,0),u.wnext=r,u.whave=u.wsize):(u.wnext+=a,u.wnext===u.wsize&&(u.wnext=0),u.whave<u.wsize&&(u.whave+=a))),0}function Tv(e,t){var n,r,a,u,g,b,V,O,D,le,ye,ke,yt,Tt,Xt=0,zt,Rn,Ln,en,mt,dn,Qt,Gt,pn=new Lt.Buf8(4),sr,Yt,pa=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return Qo;n=e.state,n.mode===Qa&&(n.mode=hu),g=e.next_out,a=e.output,V=e.avail_out,u=e.next_in,r=e.input,b=e.avail_in,O=n.hold,D=n.bits,le=b,ye=V,Gt=Ds;e:for(;;)switch(n.mode){case Vf:if(n.wrap===0){n.mode=hu;break}for(;D<16;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(n.wrap&2&&O===35615){n.check=0,pn[0]=O&255,pn[1]=O>>>8&255,n.check=E(n.check,pn,2,0),O=0,D=0,n.mode=$f;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((O&255)<<8)+(O>>8))%31){e.msg="incorrect header check",n.mode=mr;break}if((O&15)!==Ff){e.msg="unknown compression method",n.mode=mr;break}if(O>>>=4,D-=4,Qt=(O&15)+8,n.wbits===0)n.wbits=Qt;else if(Qt>n.wbits){e.msg="invalid window size",n.mode=mr;break}n.dmax=1<<Qt,e.adler=n.check=1,n.mode=O&512?qf:Qa,O=0,D=0;break;case $f:for(;D<16;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(n.flags=O,(n.flags&255)!==Ff){e.msg="unknown compression method",n.mode=mr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=mr;break}n.head&&(n.head.text=O>>8&1),n.flags&512&&(pn[0]=O&255,pn[1]=O>>>8&255,n.check=E(n.check,pn,2,0)),O=0,D=0,n.mode=Uf;case Uf:for(;D<32;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.head&&(n.head.time=O),n.flags&512&&(pn[0]=O&255,pn[1]=O>>>8&255,pn[2]=O>>>16&255,pn[3]=O>>>24&255,n.check=E(n.check,pn,4,0)),O=0,D=0,n.mode=Hf;case Hf:for(;D<16;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.head&&(n.head.xflags=O&255,n.head.os=O>>8),n.flags&512&&(pn[0]=O&255,pn[1]=O>>>8&255,n.check=E(n.check,pn,2,0)),O=0,D=0,n.mode=jf;case jf:if(n.flags&1024){for(;D<16;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.length=O,n.head&&(n.head.extra_len=O),n.flags&512&&(pn[0]=O&255,pn[1]=O>>>8&255,n.check=E(n.check,pn,2,0)),O=0,D=0}else n.head&&(n.head.extra=null);n.mode=zf;case zf:if(n.flags&1024&&(ke=n.length,ke>b&&(ke=b),ke&&(n.head&&(Qt=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Lt.arraySet(n.head.extra,r,u,ke,Qt)),n.flags&512&&(n.check=E(n.check,r,ke,u)),b-=ke,u+=ke,n.length-=ke),n.length))break e;n.length=0,n.mode=Wf;case Wf:if(n.flags&2048){if(b===0)break e;ke=0;do Qt=r[u+ke++],n.head&&Qt&&n.length<65536&&(n.head.name+=String.fromCharCode(Qt));while(Qt&&ke<b);if(n.flags&512&&(n.check=E(n.check,r,ke,u)),b-=ke,u+=ke,Qt)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=Gf;case Gf:if(n.flags&4096){if(b===0)break e;ke=0;do Qt=r[u+ke++],n.head&&Qt&&n.length<65536&&(n.head.comment+=String.fromCharCode(Qt));while(Qt&&ke<b);if(n.flags&512&&(n.check=E(n.check,r,ke,u)),b-=ke,u+=ke,Qt)break e}else n.head&&(n.head.comment=null);n.mode=Yf;case Yf:if(n.flags&512){for(;D<16;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(O!==(n.check&65535)){e.msg="header crc mismatch",n.mode=mr;break}O=0,D=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Qa;break;case qf:for(;D<32;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}e.adler=n.check=ld(O),O=0,D=0,n.mode=Ec;case Ec:if(n.havedict===0)return e.next_out=g,e.avail_out=V,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=D,mv;e.adler=n.check=1,n.mode=Qa;case Qa:if(t===pv||t===bc)break e;case hu:if(n.last){O>>>=D&7,D-=D&7,n.mode=pu;break}for(;D<3;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}switch(n.last=O&1,O>>>=1,D-=1,O&3){case 0:n.mode=Kf;break;case 1:if(Ov(n),n.mode=yc,t===bc){O>>>=2,D-=2;break e}break;case 2:n.mode=Zf;break;case 3:e.msg="invalid block type",n.mode=mr}O>>>=2,D-=2;break;case Kf:for(O>>>=D&7,D-=D&7;D<32;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if((O&65535)!==(O>>>16^65535)){e.msg="invalid stored block lengths",n.mode=mr;break}if(n.length=O&65535,O=0,D=0,n.mode=gu,t===bc)break e;case gu:n.mode=Jf;case Jf:if(ke=n.length,ke){if(ke>b&&(ke=b),ke>V&&(ke=V),ke===0)break e;Lt.arraySet(a,r,u,ke,g),b-=ke,u+=ke,V-=ke,g+=ke,n.length-=ke;break}n.mode=Qa;break;case Zf:for(;D<14;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(n.nlen=(O&31)+257,O>>>=5,D-=5,n.ndist=(O&31)+1,O>>>=5,D-=5,n.ncode=(O&15)+4,O>>>=4,D-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=mr;break}n.have=0,n.mode=Xf;case Xf:for(;n.have<n.ncode;){for(;D<3;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.lens[pa[n.have++]]=O&7,O>>>=3,D-=3}for(;n.have<19;)n.lens[pa[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,sr={bits:n.lenbits},Gt=Jl(gv,n.lens,0,19,n.lencode,0,n.work,sr),n.lenbits=sr.bits,Gt){e.msg="invalid code lengths set",n.mode=mr;break}n.have=0,n.mode=Qf;case Qf:for(;n.have<n.nlen+n.ndist;){for(;Xt=n.lencode[O&(1<<n.lenbits)-1],zt=Xt>>>24,Rn=Xt>>>16&255,Ln=Xt&65535,!(zt<=D);){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(Ln<16)O>>>=zt,D-=zt,n.lens[n.have++]=Ln;else{if(Ln===16){for(Yt=zt+2;D<Yt;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(O>>>=zt,D-=zt,n.have===0){e.msg="invalid bit length repeat",n.mode=mr;break}Qt=n.lens[n.have-1],ke=3+(O&3),O>>>=2,D-=2}else if(Ln===17){for(Yt=zt+3;D<Yt;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}O>>>=zt,D-=zt,Qt=0,ke=3+(O&7),O>>>=3,D-=3}else{for(Yt=zt+7;D<Yt;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}O>>>=zt,D-=zt,Qt=0,ke=11+(O&127),O>>>=7,D-=7}if(n.have+ke>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=mr;break}for(;ke--;)n.lens[n.have++]=Qt}}if(n.mode===mr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=mr;break}if(n.lenbits=9,sr={bits:n.lenbits},Gt=Jl(xf,n.lens,0,n.nlen,n.lencode,0,n.work,sr),n.lenbits=sr.bits,Gt){e.msg="invalid literal/lengths set",n.mode=mr;break}if(n.distbits=6,n.distcode=n.distdyn,sr={bits:n.distbits},Gt=Jl(Bf,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,sr),n.distbits=sr.bits,Gt){e.msg="invalid distances set",n.mode=mr;break}if(n.mode=yc,t===bc)break e;case yc:n.mode=wc;case wc:if(b>=6&&V>=258){e.next_out=g,e.avail_out=V,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=D,hv(e,ye),g=e.next_out,a=e.output,V=e.avail_out,u=e.next_in,r=e.input,b=e.avail_in,O=n.hold,D=n.bits,n.mode===Qa&&(n.back=-1);break}for(n.back=0;Xt=n.lencode[O&(1<<n.lenbits)-1],zt=Xt>>>24,Rn=Xt>>>16&255,Ln=Xt&65535,!(zt<=D);){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(Rn&&(Rn&240)===0){for(en=zt,mt=Rn,dn=Ln;Xt=n.lencode[dn+((O&(1<<en+mt)-1)>>en)],zt=Xt>>>24,Rn=Xt>>>16&255,Ln=Xt&65535,!(en+zt<=D);){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}O>>>=en,D-=en,n.back+=en}if(O>>>=zt,D-=zt,n.back+=zt,n.length=Ln,Rn===0){n.mode=id;break}if(Rn&32){n.back=-1,n.mode=Qa;break}if(Rn&64){e.msg="invalid literal/length code",n.mode=mr;break}n.extra=Rn&15,n.mode=ed;case ed:if(n.extra){for(Yt=n.extra;D<Yt;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.length+=O&(1<<n.extra)-1,O>>>=n.extra,D-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=td;case td:for(;Xt=n.distcode[O&(1<<n.distbits)-1],zt=Xt>>>24,Rn=Xt>>>16&255,Ln=Xt&65535,!(zt<=D);){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if((Rn&240)===0){for(en=zt,mt=Rn,dn=Ln;Xt=n.distcode[dn+((O&(1<<en+mt)-1)>>en)],zt=Xt>>>24,Rn=Xt>>>16&255,Ln=Xt&65535,!(en+zt<=D);){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}O>>>=en,D-=en,n.back+=en}if(O>>>=zt,D-=zt,n.back+=zt,Rn&64){e.msg="invalid distance code",n.mode=mr;break}n.offset=Ln,n.extra=Rn&15,n.mode=nd;case nd:if(n.extra){for(Yt=n.extra;D<Yt;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}n.offset+=O&(1<<n.extra)-1,O>>>=n.extra,D-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=mr;break}n.mode=rd;case rd:if(V===0)break e;if(ke=ye-V,n.offset>ke){if(ke=n.offset-ke,ke>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=mr;break}ke>n.wnext?(ke-=n.wnext,yt=n.wsize-ke):yt=n.wnext-ke,ke>n.length&&(ke=n.length),Tt=n.window}else Tt=a,yt=g-n.offset,ke=n.length;ke>V&&(ke=V),V-=ke,n.length-=ke;do a[g++]=Tt[yt++];while(--ke);n.length===0&&(n.mode=wc);break;case id:if(V===0)break e;a[g++]=n.length,V--,n.mode=wc;break;case pu:if(n.wrap){for(;D<32;){if(b===0)break e;b--,O|=r[u++]<<D,D+=8}if(ye-=V,e.total_out+=ye,n.total+=ye,ye&&(e.adler=n.check=n.flags?E(n.check,a,ye,g-ye):v(n.check,a,ye,g-ye)),ye=V,(n.flags?O:ld(O))!==n.check){e.msg="incorrect data check",n.mode=mr;break}O=0,D=0}n.mode=od;case od:if(n.wrap&&n.flags){for(;D<32;){if(b===0)break e;b--,O+=r[u++]<<D,D+=8}if(O!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=mr;break}O=0,D=0}n.mode=ad;case ad:Gt=vv;break e;case mr:Gt=Df;break e;case sd:return Lf;case bv:default:return Qo}return e.next_out=g,e.avail_out=V,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=D,(n.wsize||ye!==e.avail_out&&n.mode<mr&&(n.mode<pu||t!==Mf))&&gd(e,e.output,e.next_out,ye-e.avail_out),le-=e.avail_in,ye-=e.avail_out,e.total_in+=le,e.total_out+=ye,n.total+=ye,n.wrap&&ye&&(e.adler=n.check=n.flags?E(n.check,a,ye,e.next_out-ye):v(n.check,a,ye,e.next_out-ye)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Qa?128:0)+(n.mode===yc||n.mode===gu?256:0),(le===0&&ye===0||t===Mf)&&Gt===Ds&&(Gt=_v),Gt}function Pv(e){if(!e||!e.state)return Qo;var t=e.state;return t.window&&(t.window=null),e.state=null,Ds}function Iv(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?Qo:(n.head=t,t.done=!1,Ds)}function Nv(e,t){var n=t.length,r,a,u;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==Ec)?Qo:r.mode===Ec&&(a=1,a=v(a,t,n,0),a!==r.check)?Df:(u=gd(e,t,n,n),u?(r.mode=sd,Lf):(r.havedict=1,Ds))}var kv=ud,Rv=fd,xv=cd,Bv=Cv,Mv=dd,Dv=Tv,Lv=Pv,Fv=Iv,Vv=Nv,$v="pako inflate (from Nodeca project)",Uv={inflateReset:kv,inflateReset2:Rv,inflateResetKeep:xv,inflateInit:Bv,inflateInit2:Mv,inflate:Dv,inflateEnd:Lv,inflateGetHeader:Fv,inflateSetDictionary:Vv,inflateInfo:$v},Hv={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function jv(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var zv=jv,Cl=Uv,Nr=Hv,Wv=zv,pd=Object.prototype.toString;function Ls(e){if(!(this instanceof Ls))return new Ls(e);this.options=Lt.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Kl,this.strm.avail_out=0;var n=Cl.inflateInit2(this.strm,t.windowBits);if(n!==Nr.Z_OK)throw new Error(C[n]);if(this.header=new Wv,Cl.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=co.string2buf(t.dictionary):pd.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Cl.inflateSetDictionary(this.strm,t.dictionary),n!==Nr.Z_OK)))throw new Error(C[n])}Ls.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a=this.options.dictionary,u,g,b,V,O,D=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?Nr.Z_FINISH:Nr.Z_NO_FLUSH,typeof e=="string"?n.input=co.binstring2buf(e):pd.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Lt.Buf8(r),n.next_out=0,n.avail_out=r),u=Cl.inflate(n,Nr.Z_NO_FLUSH),u===Nr.Z_NEED_DICT&&a&&(u=Cl.inflateSetDictionary(this.strm,a)),u===Nr.Z_BUF_ERROR&&D===!0&&(u=Nr.Z_OK,D=!1),u!==Nr.Z_STREAM_END&&u!==Nr.Z_OK)return this.onEnd(u),this.ended=!0,!1;n.next_out&&(n.avail_out===0||u===Nr.Z_STREAM_END||n.avail_in===0&&(g===Nr.Z_FINISH||g===Nr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(b=co.utf8border(n.output,n.next_out),V=n.next_out-b,O=co.buf2string(n.output,b),n.next_out=V,n.avail_out=r-V,V&&Lt.arraySet(n.output,n.output,b,V,0),this.onData(O)):this.onData(Lt.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(D=!0)}while((n.avail_in>0||n.avail_out===0)&&u!==Nr.Z_STREAM_END);return u===Nr.Z_STREAM_END&&(g=Nr.Z_FINISH),g===Nr.Z_FINISH?(u=Cl.inflateEnd(this.strm),this.onEnd(u),this.ended=!0,u===Nr.Z_OK):(g===Nr.Z_SYNC_FLUSH&&(this.onEnd(Nr.Z_OK),n.avail_out=0),!0)},Ls.prototype.onData=function(e){this.chunks.push(e)},Ls.prototype.onEnd=function(e){e===Nr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Lt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function _u(e,t){var n=new Ls(t);if(n.push(e,!0),n.err)throw n.msg||C[n.err];return n.result}function Gv(e,t){return t=t||{},t.raw=!0,_u(e,t)}var Yv=Ls,qv=_u,Kv=Gv,Jv=_u,Zv={Inflate:Yv,inflate:qv,inflateRaw:Kv,ungzip:Jv},Xv=ov,Qv=Zv,em=Lt.assign,vd={};em(vd,Xv,Qv,Nr);var md=vd;let tm="upx2px",nm=[{name:"upx",type:[Number,String],required:!0}],rm=1e-4,im=750,_d=!1,bu=0,bd=0,Ed=960,yd=375;function om(){let{platform:e,pixelRatio:t,windowWidth:n}=Fo();bu=n,bd=t,_d=e==="ios"}function wd(e,t){let n=Number(e);return isNaN(n)?t:n}function am(){let e=P.globalStyle||{};Ed=wd(e.rpxCalcMaxDeviceWidth,960),yd=wd(e.rpxCalcBaseDeviceWidth,375)}let sm=Bt(tm,(e,t)=>{if(bu===0&&(om(),am()),e=Number(e),e===0)return 0;let n=t||bu;n=n<=Ed?n:yd;let r=e/im*n;return r<0&&(r=-r),r=Math.floor(r+rm),r===0&&(bd===1||!_d?r=1:r=.5),e<0?-r:r},nm),lm="addInterceptor",cm="removeInterceptor",Sd=[{name:"method",type:[String,Object],required:!0}],um=Sd;function Ad(e,t){Object.keys(t).forEach(n=>{ne.isFunction(t[n])&&(e[n]=fm(e[n],t[n]))})}function Cd(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],a=t[n];ne.isArray(r)&&ne.isFunction(a)&&ne.remove(r,a)})}function fm(e,t){let n=t?e?e.concat(t):ne.isArray(t)?t:[t]:e;return n&&dm(n)}function dm(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let hm=Bt(lm,(e,t)=>{typeof e=="string"&&ne.isPlainObject(t)?Ad(zr[e]||(zr[e]={}),t):ne.isPlainObject(e)&&Ad(jr,e)},Sd),gm=Bt(cm,(e,t)=>{typeof e=="string"?ne.isPlainObject(t)?Cd(zr[e],t):delete zr[e]:ne.isPlainObject(e)&&Cd(jr,e)},um),pm={},vm="$on",Od=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],mm="$once",_m=Od,bm="$off",Em=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],ym="$emit",wm=[{name:"event",type:String,required:!0}],Fs=new Q.Emitter,Sm=Bt(vm,(e,t)=>(Fs.on(e,t),()=>Fs.off(e,t)),Od),Am=Bt(mm,(e,t)=>(Fs.once(e,t),()=>Fs.off(e,t)),_m),Cm=Bt(bm,(e,t)=>{if(!e){Fs.e={};return}Array.isArray(e)||(e=[e]),e.forEach(n=>Fs.off(n,t))},Em),Om=Bt(ym,(e,...t)=>{Fs.emit(e,...t)},wm),Td=[{name:"id",type:String,required:!0}],Tm="createVideoContext",Pm="createMapContext",Im=Td,Nm="createCanvasContext",km=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Rm="createInnerAudioContext",xm="createLivePusherContext",Bm=Td.concat({name:"componentInstance",type:Object}),Mm=[.5,.8,1,1.25,1.5,2];class Eu{constructor(t,n){this.id=t,this.pageId=n}play(){Gn(this.id,this.pageId,"play")}pause(){Gn(this.id,this.pageId,"pause")}stop(){Gn(this.id,this.pageId,"stop")}seek(t){Gn(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){Gn(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~Mm.indexOf(t)||(t=1),Gn(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){Gn(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){Gn(this.id,this.pageId,"exitFullScreen")}showStatusBar(){Gn(this.id,this.pageId,"showStatusBar")}hideStatusBar(){Gn(this.id,this.pageId,"hideStatusBar")}}let Dm=Bt(Tm,(e,t)=>t?new Eu(e,hr(t)):new Eu(e,hr(qr()))),Lm=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},Ri=(e,t,n,r)=>{Tn(e,t,n,r,a=>{r&&Lm(r,a)})};class yu{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){Ri(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){Ri(this.id,this.pageId,"moveToLocation",t)}getScale(t){Ri(this.id,this.pageId,"getScale",t)}getRegion(t){Ri(this.id,this.pageId,"getRegion",t)}includePoints(t){Ri(this.id,this.pageId,"includePoints",t)}translateMarker(t){Ri(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return s.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){Ri(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){Ri(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){Ri(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){Ri(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){Ri(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){Ri(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){Ri(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){Ri(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){Ri(this.id,this.pageId,"moveAlong",t)}openMapApp(t){Ri(this.id,this.pageId,"openMapApp",t)}on(t){Ri(this.id,this.pageId,"on",t)}}let Fm=Bt(Pm,(e,t)=>t?new yu(e,hr(t)):new yu(e,hr(qr())),Im);function vs(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let Pd=vs("width"),Id=vs("height"),Vm="canvasGetImageData",Nd={formatArgs:{x:vs("x"),y:vs("y"),width:Pd,height:Id}},kd={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},$m="canvasPutImageData",Um=Nd,Hm=ne.extend({data:{type:Uint8ClampedArray,required:!0}},kd,{height:{type:Number}}),Rd={PNG:"png",JPG:"jpg",JPEG:"jpg"},jm="canvasToTempFilePath",zm={formatArgs:{x:vs("x",0),y:vs("y",0),width:Pd,height:Id,destWidth:vs("destWidth"),destHeight:vs("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=Rd[e];n||(n=Rd.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},Wm={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function Sc(e,t,n,r,a){ft.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,u=>{a&&a(u)})}var Gm=["scale","rotate","translate","setTransform","transform"],Ym=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],qm=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function Km(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let xd={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function wu(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4),16);return[r,a,u,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),a=t[1].slice(1,2),u=t[1].slice(2,3);return r=parseInt(r+r,16),a=parseInt(a+a,16),u=parseInt(u+u,16),[r,a,u,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,a){return a===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(ne.hasOwn(xd,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(xd[n]);let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,a,u,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class Bd{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,wu(n)])}}class Jm{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class Zm{constructor(t){this.width=t}}class Zl{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],Sc(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,a){return new Bd("linear",[t,n,r,a])}createCircularGradient(t,n,r){return new Bd("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new Jm(t,n)}measureText(t){let n=this.state.font,r=0;{let a=s.webview.all().find(u=>u.getURL().endsWith("www/__uniappview.html"));a&&(r=Number(a.evalJSSync(`(${Km.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new Zm(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,a){this.path.push({method:"quadraticCurveTo",data:[t,n,r,a]}),this.subpath.push([r,a])}bezierCurveTo(t,n,r,a,u,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,a,u,g]}),this.subpath.push([u,g])}arc(t,n,r,a,u,g=!1){this.path.push({method:"arc",data:[t,n,r,a,u,g]}),this.subpath.push([t,n])}rect(t,n,r,a){this.path.push({method:"rect",data:[t,n,r,a]}),this.subpath=[[t,n]]}arcTo(t,n,r,a,u){this.path.push({method:"arcTo",data:[t,n,r,a,u]}),this.subpath.push([r,a])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var a=r[1].trim().split(/\s/),u=parseFloat(r[3]),g=r[7],b=[];a.forEach(function(O,D){["italic","oblique","normal"].indexOf(O)>-1?(b.push({method:"setFontStyle",data:[O]}),n.state.fontStyle=O):["bold","normal"].indexOf(O)>-1?(b.push({method:"setFontWeight",data:[O]}),n.state.fontWeight=O):D===0?(b.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):D===1&&V()}),a.length===1&&V(),a=b.map(function(O){return O.data[0]}).join(" "),this.state.fontSize=u,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${a} ${u}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function V(){b.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let Xm=Q.once(()=>{[...Gm,...Ym].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,a,u,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,a,u,g]}]})};case"strokeRect":return function(r,a,u,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,a,u,g]}]})};case"fillText":case"strokeText":return function(r,a,u,g){var b=[r.toString(),a,u];typeof g=="number"&&b.push(g),this.actions.push({method:n,data:b})};case"drawImage":return function(r,a,u,g,b,V,O,D,le){le===void 0&&(V=a,O=u,D=g,le=b,a=void 0,u=void 0,g=void 0,b=void 0);var ye;function ke(yt){return typeof yt=="number"}ye=ke(a)&&ke(u)&&ke(g)&&ke(b)?[r,V,O,D,le,a,u,g,b]:ke(D)&&ke(le)?[r,V,O,D,le]:[r,V,O],this.actions.push({method:n,data:ye})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zl.prototype[e]=t(e)}),qm.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",wu(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,a,u,g){g=wu(g),this.actions.push({method:n,data:[r,a,u,g]}),this.state.shadowBlur=u,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=a};case"setLineDash":return function(r,a){r=r||[0,0],a=a||0,this.actions.push({method:n,data:[r,a]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zl.prototype[e]=t(e)})}),Qm=Bt(Nm,(e,t)=>{if(Xm(),t)return new Zl(e,hr(t));let n=hr(qr());if(n)return new Zl(e,n);ft.emit(Q.ON_ERROR,"createCanvasContext:fail")},km),e_=we(Vm,({canvasId:e,x:t,y:n,width:r,height:a},{resolve:u,reject:g})=>{let b=hr(qr());if(!b){g();return}function V(O){if(O.errMsg&&O.errMsg.indexOf("fail")!==-1){g("",O);return}let D=O.data;D&&D.length&&(O.compressed&&(D=md.inflateRaw(D)),O.data=new Uint8ClampedArray(D)),delete O.compressed,u(O)}Sc(e,b,"getImageData",{x:t,y:n,width:r,height:a},V)},kd,Nd),t_=we($m,({canvasId:e,data:t,x:n,y:r,width:a,height:u},{resolve:g,reject:b})=>{var V=hr(qr());if(!V){b();return}let O,D=()=>{Sc(e,V,"putImageData",{data:t,x:n,y:r,width:a,height:u,compressed:O},le=>{if(le.errMsg&&le.errMsg.indexOf("fail")!==-1){b();return}g(le)})};s.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=md.deflateRaw(t,{to:"string"}),O=!0):t=Array.prototype.slice.call(t),D()},Hm,Um),n_=we(jm,({x:e=0,y:t=0,width:n,height:r,destWidth:a,destHeight:u,canvasId:g,fileType:b,quality:V},{resolve:O,reject:D})=>{var le=hr(qr());if(!le){D();return}let ye=`${vi}/canvas`;Sc(g,le,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:a,destHeight:u,fileType:b,quality:V,dirname:ye},ke=>{if(ke.errMsg&&ke.errMsg.indexOf("fail")!==-1){D("",ke);return}O(ke)})},Wm,zm),Md=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],r_=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],i_={thresholds:[0],initialRatio:0,observeAll:!1},o_=["top","right","bottom","left"],a_=1;function Dd(e={}){return o_.map(t=>`${Number(e[t])||0}px`).join(" ")}class Ld{constructor(t,n){this._pageId=hr(t),this._component=t,this._options=ne.extend({},i_,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=Dd(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=Dd(t),this}observe(t,n){!ne.isFunction(n)||(this._options.selector=t,this._reqId=a_++,Tr({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&Fr({reqId:this._reqId,component:this._component},this._pageId)}}let s_=Bt("createIntersectionObserver",(e,t)=>(e=Q.resolveComponentInstance(e),e&&!hr(e)&&(t=e,e=null),e?new Ld(e,t):new Ld(qr(),t))),l_=1;class Fd{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!ne.isFunction(n)||(this._reqId=l_++,aa({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&Yo({reqId:this._reqId,component:this._component},this._pageId)}}let c_=Bt("createMediaQueryObserver",e=>(e=Q.resolveComponentInstance(e),e&&!hr(e)&&(e=null),e?new Fd(e):new Fd(qr()))),u_=0,Su={};function f_(e,t,n,r){let a={options:r},u=r&&("success"in r||"fail"in r||"complete"in r);if(u){let g=String(u_++);a.callbackId=g,Su[g]=r}ft.invokeViewMethod(`editor.${e}`,{type:n,data:a},t,({callbackId:g,data:b})=>{u&&(Q.callOptions(Su[g],b),delete Su[g])})}class d_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){f_(this.id,this.pageId,t,n)}}let h_={canvas:Zl,map:yu,video:Eu,editor:d_};function Vd(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,a=h_[n];e.context=new a(t,r),delete e.contextInfo}}class Au{constructor(t,n,r,a){this._selectorQuery=t,this._component=n,this._selector=r,this._single=a}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class g_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return Wt(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((a,u)=>{Array.isArray(a)?a.forEach(Vd):Vd(a);let g=r[u];typeof g=="function"&&g.call(this,a)}),typeof t=="function"&&t.call(this,n)}),this._nodesRef}in(t){return this._component=Q.resolveComponentInstance(t),this}select(t){return this._nodesRef=new Au(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new Au(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new Au(this,null,"",!0)}_push(t,n,r,a,u){this._queue.push({component:n,selector:t,single:r,fields:a}),this._queueCb.push(u)}}let p_=Bt("createSelectorQuery",e=>(e=Q.resolveComponentInstance(e),e&&!hr(e)&&(e=null),new g_(e||qr()))),v_="createAnimation",m_={formatArgs:{}},__={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},b_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class $d{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=ne.extend({},b_,t)}_getOption(t){let n={transition:ne.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let E_=Q.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{$d.prototype[r]=function(...a){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(a[0]):a[0]]):this._pushAnimates(r,a),this}})}),y_=Bt(v_,e=>(E_(),new $d(e)),__,m_),Ud="onTabBarMidButtonTap",w_=Kn(Ud,()=>{}),S_="onWindowResize",A_="offWindowResize",C_=Kn(S_,()=>{}),O_=Mr(A_,()=>{}),Hd="setLocale",T_="getLocale",jd="onLocaleChange",Cu=Bt(T_,()=>{let e=jn({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:pe().getLocale()}),P_=Kn(jd,()=>{}),I_=Bt(Hd,e=>{let t=jn();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,In().forEach(a=>{ft.publishHandler(Hd,e,a.$page.id)}),p.requireModule("plus").setLanguage(e),ft.invokeOnCallback(jd,{locale:e}),!0):!1}),N_=we("setPageMeta",(e,{resolve:t})=>{t(Wn(qr(),e))}),k_=we("getSelectedTextRange",(e,{resolve:t,reject:n})=>{ft.invokeViewMethod("getSelectedTextRange",{},Fa(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),Ac={[Q.ON_UNHANDLE_REJECTION]:[],[Q.ON_PAGE_NOT_FOUND]:[],[Q.ON_ERROR]:[],[Q.ON_SHOW]:[],[Q.ON_HIDE]:[]};function Xl(e,t){let n=jn({allowDefault:!0});if(n&&n.$vm)return En.injectHook(e,t,n.$vm.$);Ac[e].push(t)}function R_(e){Object.keys(Ac).forEach(t=>{Ac[t].forEach(n=>{En.injectHook(t,n,e)})})}function Ql(e,t){let n=jn({allowDefault:!0});if(n&&n.$vm)return ki(n.$vm,e,t);ne.remove(Ac[e],t)}function x_(e){Xl(Q.ON_UNHANDLE_REJECTION,e)}function B_(e){Ql(Q.ON_UNHANDLE_REJECTION,e)}function M_(e){Xl(Q.ON_PAGE_NOT_FOUND,e)}function D_(e){Ql(Q.ON_PAGE_NOT_FOUND,e)}function L_(e){Xl(Q.ON_ERROR,e)}function F_(e){Ql(Q.ON_ERROR,e)}function V_(e){Xl(Q.ON_SHOW,e)}function $_(e){Ql(Q.ON_SHOW,e)}function U_(e){Xl(Q.ON_HIDE,e)}function H_(e){Ql(Q.ON_HIDE,e)}let j_=Bt("getEnterOptionsSync",()=>Pr()),z_=Bt("getLaunchOptionsSync",()=>pr()),Cc,zd;function Wd(e){try{return JSON.parse(e)}catch(t){}return e}function W_(e){e.type==="clientId"?(Cc=e.cid,zd=e.errMsg,Gd(Cc,e.errMsg)):e.type==="pushMsg"?Vs.forEach(t=>{t({type:"receive",data:Wd(e.message)})}):e.type==="click"&&Vs.forEach(t=>{t({type:"click",data:Wd(e.message)})})}let Ou=[];function Gd(e,t){Ou.forEach(n=>{n(e,t)}),Ou.length=0}function G_(e){ne.isPlainObject(e)||(e={});let{success:t,fail:n,complete:r}=ai(e),a=ne.isFunction(t),u=ne.isFunction(n),g=ne.isFunction(r);Ou.push((b,V)=>{let O;b?(O={errMsg:"getPushClientid:ok",cid:b},a&&t(O)):(O={errMsg:"getPushClientid:fail"+(V?" "+V:"")},u&&n(O)),g&&r(O)}),typeof Cc!="undefined"&&Promise.resolve().then(()=>Gd(Cc,zd))}let Vs=[],Y_=e=>{Vs.indexOf(e)===-1&&Vs.push(e)},q_=e=>{if(!e)Vs.length=0;else{let t=Vs.indexOf(e);t>-1&&Vs.splice(t,1)}},K_="canIUse",J_=[{name:"schema",type:String,required:!0}],Z_="getBackgroundAudioManager",X_="makePhoneCall",Q_={phoneNumber:String},eb="addPhoneContact",tb={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},nb={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},rb="getClipboardData",ib="setClipboardData",ob={formatArgs:{showToast:!0},beforeInvoke(){ma()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=pe(),r=n("uni.setClipboardData.success");r&&Mt.showToast({title:r,icon:"success",mask:!1})}},ab={data:{type:String,required:!0},showToast:{type:Boolean}},Yd="onAccelerometer",sb="offAccelerometer",lb="startAccelerometer",cb="stopAccelerometer",qd="onCompass",ub="offCompass",fb="startCompass",db="stopCompass",hb="vibrateShort",gb="vibrateLong",Kd="onBluetoothDeviceFound",Jd="onBluetoothAdapterStateChange",Zd="onBLEConnectionStateChange",Xd="onBLECharacteristicValueChange",pb="startBluetoothDevicesDiscovery",vb={services:Array,allowDuplicatesKey:Boolean,interval:Number},mb="getConnectedBluetoothDevices",_b={services:{type:Array,required:!0}},bb="createBLEConnection",Eb={deviceId:{type:String,required:!0}},yb="closeBLEConnection",wb={deviceId:{type:String,required:!0}},Sb="getBLEDeviceServices",Ab={deviceId:{type:String,required:!0}},Cb="getBLEDeviceCharacteristics",Ob={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},Tb="notifyBLECharacteristicValueChange",Pb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},Ib="readBLECharacteristicValue",Nb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},kb="writeBLECharacteristicValue",Rb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},xb="setBLEMTU",Bb={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},Mb="getBLEDeviceRSSI",Db={deviceId:{type:String,required:!0}},Qd="onBeaconUpdate",eh="onBeaconServiceChange",Lb="getBeacons",Fb="startBeaconDiscovery",Vb={uuids:{type:Array,required:!0}},$b="stopBeaconDiscovery",Ub="getScreenBrightness",Hb="setScreenBrightness",jb="setKeepScreenOn",zb="soterAuthentication",Wb="checkIsSoterEnrolledInDevice",Gb=["fingerPrint","facial","speech"],Yb={formatArgs:{checkAuthMode(e,t){if(!e||!Gb.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},qb={checkAuthMode:String},Kb="checkIsSoterEnrolledInDevice",Jb={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},Zb={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},Xb="scanCode",Qb={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String},e0=["default","none"],t0={formatArgs:{sound(e,t){e0.includes(e)||(t.sound="none")}}},n0="getStorage",th={key:{type:String,required:!0}},r0="getStorageSync",nh=[{name:"key",type:String,required:!0}],i0="setStorage",o0={key:{type:String,required:!0},data:{required:!0}},a0="setStorageSync",s0=[{name:"key",type:String,required:!0},{name:"data",required:!0}],rh="removeStorage",l0=th,c0=nh,u0="saveFile",f0={formatArgs:{tempFilePath(e,t){t.tempFilePath=vt(e)}}},d0={tempFilePath:{type:String,required:!0}},h0="getSavedFileList",g0="removeSavedFile",p0={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},v0={filePath:{type:String,required:!0}},m0="getFileInfo",_0={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},b0={filePath:{type:String,required:!0}},E0="getSavedFileInfo",y0={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},w0={filePath:{type:String,required:!0}},S0="openDocument",A0={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},C0={filePath:{type:String,required:!0},fileType:String},O0="hideKeyboard",T0="showKeyboard",P0="chooseLocation",I0={keyword:String,latitude:Number,longitude:Number},N0="getLocation",ih=["wgs84","gcj02"],k0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),ih.indexOf(e)===-1?t.type=ih[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},R0={type:String,altitude:Boolean},x0="openLocation",B0={formatArgs:{scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},M0={latitude:{type:Number,required:!0},longitude:{type:Number,required:!0},scale:Number,name:String,address:String},D0="chooseImage",L0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=_n(e,xn)},sourceType(e,t){t.sourceType=_n(e,$n)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},F0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},V0="chooseVideo",$0={formatArgs:{sourceType(e,t){t.sourceType=_n(e,$n)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},U0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},H0="getImageInfo",j0={formatArgs:{src(e,t){t.src=vt(e)}}},z0={src:{type:String,required:!0}},W0="previewImage",G0={formatArgs:{urls(e,t){t.urls=e.map(n=>typeof n=="string"&&n?vt(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:typeof e=="string"&&e&&(t.current=vt(e))}}},Y0={urls:{type:Array,required:!0},current:{type:[Number,String]}},q0="closePreviewImage",K0="getVideoInfo",J0={formatArgs:{src(e,t){t.src=vt(e)}}},Z0={src:{type:String,required:!0}},X0="saveImageToPhotosAlbum",Q0={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},eE={filePath:{type:String,required:!0}},tE="saveVideoToPhotosAlbum",nE={formatArgs:{filePath(e,t){t.filePath=vt(e)}}},rE={filePath:{type:String,required:!0}},iE="getRecorderManager",oE="compressImage",aE={formatArgs:{src(e,t){t.src=vt(e)}}},sE={src:{type:String,required:!0}},lE="compressVideo",cE={formatArgs:{src(e,t){t.src=vt(e)}}},uE={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},fE="request",dE={JSON:"json"},hE=["text","arraybuffer"],gE="text",oh=encodeURIComponent;function pE(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let a=n[1]||"";e=n[0];let u=a.split("&").filter(b=>b),g={};u.forEach(b=>{let V=b.split("=");g[V[0]]=V[1]});for(let b in t)if(ne.hasOwn(t,b)){let V=t[b];typeof V=="undefined"||V===null?V="":ne.isPlainObject(V)&&(V=JSON.stringify(V)),g[oh(b)]=oh(V)}return a=Object.keys(g).map(b=>`${b}=${g[b]}`).join("&"),e+(a?"?"+a:"")+(r?"#"+r:"")}let vE={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},mE={formatArgs:{method(e,t){t.method=rn((e||"").toUpperCase(),mn)},data(e,t){t.data=e||""},url(e,t){t.method===mn[0]&&ne.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=pE(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==mn[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||dE.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),hE.indexOf(t.responseType)===-1&&(t.responseType=gE)}}},_E="configMTLS",bE={certificates:{type:Array,required:!0}},EE={formatArgs:{certificates(e){if(e.some(t=>ne.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},yE="downloadFile",wE={formatArgs:{header(e,t){t.header=e||{}}}},SE={url:{type:String,required:!0},header:Object,timeout:Number},AE="uploadFile",CE={formatArgs:{filePath(e,t){e&&(t.filePath=vt(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},OE={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},TE="connectSocket",PE={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=rn((e||"").toUpperCase(),mn)},protocols(e,t){typeof e=="string"&&(t.protocols=[e])}}},IE={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},NE="sendSocketMessage",kE={data:[String,ArrayBuffer]},RE="closeSocket",xE={code:Number,reason:String};function BE(e){if(typeof e!="string")return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(a=>{let u=a.replace(/\+/g," ").split("="),g=u.shift(),b=u.length>0?u.join("="):"";r.push(g+"="+encodeURIComponent(b))}),r.length?e+"?"+r.join("&"):e}let ME=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],DE=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Ol={url:{type:String,required:!0}},Tu="navigateTo",Pu="redirectTo",ah="reLaunch",Oc="switchTab",LE="navigateBack",Iu="preloadPage",sh="unPreloadPage",FE=ne.extend({},Ol,lh(ME)),VE=ne.extend({delta:{type:Number}},lh(DE)),$E=Ol,UE=Ol,HE=Ol,jE=Ol,zE=Ol,WE=Pc(Tu),GE=Pc(Pu),YE=Pc(ah),qE=Pc(Oc),KE={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(In().length-1,e)}}};function lh(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Tc;function JE(){Tc=""}function Pc(e){return{formatArgs:{url:ZE(e)},beforeAll:JE}}function ZE(e){return function(n,r){if(!n)return'Missing required args: "url"';n=Ho(n);let a=n.split("?")[0],u=Hn(a,!0);if(!u)return"page `"+n+"` is not found";if(e===Tu||e===Pu){if(u.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Oc&&!u.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Oc||e===Iu)&&u.meta.isTabBar&&r.openType!=="appLaunch"&&(n=a),u.meta.isEntry&&(n=n.replace(u.alias,"/")),r.url=BE(n),e!==sh){if(e===Iu){if(!u.meta.isNVue)return"can not preload vue page";if(u.meta.isTabBar){let g=In(),b=u.path.slice(1);if(g.find(V=>V.route===b))return"tabBar page `"+b+"` already exists"}return}if(Tc===n&&r.openType!=="appLaunch")return`${Tc} locked`;P.ready&&(Tc=n)}}}let XE="hideLoading",QE="hideToast",ch="loadFontFace",ey={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},ty=["#ffffff","#000000"],ny="setNavigationBarColor",ry={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},iy={frontColor:{type:String,required:!0,validator(e){if(ty.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},oy="setNavigationBarTitle",ay={title:{type:String,required:!0}},sy="showNavigationBarLoading",ly="hideNavigationBarLoading",uh="pageScrollTo",cy={scrollTop:Number,selector:String,duration:Number},uy={formatArgs:{duration:300}},fy="showActionSheet",dy={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},hy={formatArgs:{itemColor:"#000"}},gy="showLoading",py={title:String,mask:Boolean},vy={formatArgs:{title:"",mask:!1}},my="showModal",_y={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},by={beforeInvoke(){ei()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!ne.hasOwn(t,"cancelText")){let{t:n}=pe();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!ne.hasOwn(t,"confirmText")){let{t:n}=pe();t.confirmText=n("uni.showModal.confirm")}},confirmColor:Q.PRIMARY_COLOR}},Ey="showToast",yy=["success","loading","none","error"],wy={title:String,icon:String,image:String,duration:Number,mask:Boolean},Sy={formatArgs:{title:"",icon(e,t){t.icon=rn(e,yy)},image(e,t){e?t.image=vt(e):t.image=""},duration:1500,mask:!1}},Ay="startPullDownRefresh",Cy="stopPullDownRefresh",ec={index:{type:Number,required:!0}},ms={beforeInvoke(){let e=wa();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!P.tabBar.list[e])return"tabbar item not found"}}},Oy="setTabBarItem",Ty=ne.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},ec),Py={beforeInvoke:ms.beforeInvoke,formatArgs:ne.extend({pagePath(e,t){e&&(t.pagePath=Q.removeLeadingSlash(e))}},ms.formatArgs)},Iy="setTabBarStyle",Ny={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},ky=/^(linear|radial)-gradient\(.+?\);?$/,Ry={beforeInvoke:ms.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!ky.test(e)&&(t.backgroundImage=vt(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},xy="hideTabBar",fh={animation:Boolean},By="showTabBar",My=fh,Dy="hideTabBarRedDot",Ly=ec,Fy=ms,Vy="showTabBarRedDot",$y=ec,Uy=ms,Hy="removeTabBarBadge",jy=ec,zy=ms,Wy="setTabBarBadge",Gy=ne.extend({text:{type:String,required:!0}},ec),Yy={beforeInvoke:ms.beforeInvoke,formatArgs:ne.extend({text(e,t){Q.getLen(e)>=4&&(t.text="...")}},ms.formatArgs)},qy="getProvider",Ky={service:{type:String,required:!0}},Jy="login",Zy={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},Xy="getUserInfo",Qy={provider:String,withCredentials:Boolean,timeout:Number,lang:String},ew="ggetUserProfilegetUserProfile",tw={provider:String,withCredentials:Boolean,timeout:Number,lang:String},nw="preLogin",rw={UNIVERIFY:"univerify"},iw={formatArgs:{provider(e,t){if(Object.values(rw).indexOf(String(e))<0)return"provider error"}}},ow={provider:{type:String,required:!0}},aw="closeAuthView",sw="getCheckBoxState",lw="getUniverifyManager",cw="share",dh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],uw={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!dh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${dh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},fw={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},dw="shareWithSystem",hh=["text","image"],hw={formatArgs:{type(e,t){if(e&&!hh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=rn(e,hh)}}},gw={type:String,summary:String,href:String,imageUrl:String},pw="requestPayment",vw={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},mw="createRewardedVideoAd",_w={formatArgs:{adpid:"",adUnitId:""}},bw={adpid:String,adUnitId:String},Ew="createFullScreenVideoAd",yw={formatArgs:{adpid:""}},ww={adpid:String},Sw="createInterstitialAd",Aw={formatArgs:{adpid:"",adUnitId:""}},Cw={adpid:String,adUnitId:String},Ow="createInteractiveAd",Tw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},Pw={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function $s(e,t){return function(r){delete r.code,delete r.message,typeof t=="function"&&(r=t(r)),e(r)}}function ar(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,ne.extend({code:0},r))}}function Tl(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),ft.invokeOnCallback(t,r)})}}function ii(e,t,n){return function(r,{resolve:a,reject:u}){e()(ne.extend({},typeof t=="function"?t(r):r,{success:$s(a,n),fail:ar(u)}))}}function gh(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=In();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=Q.addLeadingSlash(e));let t=Hn(e);return t&&t.meta.isTabBar}catch(t){}return!1}let da="__TYPE",Iw="uni-storage-keys";function Nu(e){let t=["object","string","number","boolean","undefined"];try{let n=typeof e=="string"?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let a=Object.keys(n);if(a.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(a.length===1)return""}}catch(n){}}let Nw=Bt(a0,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Nu(r)!==void 0?s.storage.setItem(e+da,n):s.storage.removeItem(e+da),s.storage.setItem(e,r)}catch(a){}},s0),kw=we(i0,({key:e,data:t},{resolve:n,reject:r})=>{let a=typeof t,u=a==="string"?t:JSON.stringify({type:a,data:t});try{let g=s.storage;a==="string"&&Nu(u)!==void 0?g.setItemAsync(e+da,a):g.removeItemAsync(e+da),g.setItemAsync(e,u,n,ar(r))}catch(g){r(g.message)}},o0);function ku(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),a=Nu(r);if(a!==void 0)n=a;else if(e&&(n=r,typeof r=="string")){r=JSON.parse(r);let u=typeof r;u==="number"&&e==="date"?n=new Date(r):u===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let Rw=Bt(r0,(e,t)=>{let n=s.storage.getItem(e),a=(s.storage.getItem(e+da)||"").toLowerCase();return typeof n!="string"?"":ku(a,n)},nh),xw=we(n0,({key:e},{resolve:t,reject:n})=>{let r=s.storage;r.getItemAsync(e,function(a){r.getItemAsync(e+da,function(u){let b=(u.data||"").toLowerCase();t({data:ku(b,a.data)})},function(){t({data:ku("",a.data)})})},ar(n))},th),Bw=Bt(rh,e=>{s.storage.removeItem(e+da),s.storage.removeItem(e)},c0),Mw=we(rh,({key:e},{resolve:t,reject:n})=>{s.storage.removeItemAsync(e+da),s.storage.removeItemAsync(e,t,ar(n))},l0),Dw=Bt("clearStorageSync",()=>{s.storage.clear()}),Lw=we("clearStorage",(e,{resolve:t,reject:n})=>{s.storage.clearAsync(t,ar(n))}),ph=Bt("getStorageInfoSync",()=>{let e=s.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let a=s.storage.key(r);if(a!==Iw&&(a.indexOf(da)<0||a.indexOf(da)+da.length!==a.length)){let u=s.storage.getItem(a);n+=a.length+u.length,t.push(a)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Fw=we("getStorageInfo",(e,{resolve:t})=>{t(ph())}),Vw=we(m0,(e,{resolve:t,reject:n})=>{s.io.getFileInfo(ne.extend(e,{success:$s(t),fail:ar(n)}))},b0,_0),$w=0,vh="uniapp_save",Uw=`_doc/${vh}`;function Hw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(vh,{create:!0},e,t)},t)}let jw=we(u0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=ar(n),a=`${Date.now()}${$w++}${zi(e)}`;s.io.resolveLocalFileSystemURL(e,u=>{Hw(g=>{u.copyTo(g,a,()=>{let b=Uw+"/"+a;t({savedFilePath:b})},r)},r)},r)},d0,f0),zw="uniapp_save";function Ww(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(zw,{create:!0},e,t)},t)}let Gw=we(h0,(e,{resolve:t,reject:n})=>{let r=ar(n);Ww(a=>{var u=a.createReader(),g=[];u.readEntries(b=>{b&&b.length?b.forEach(V=>{V.getMetadata(O=>{g.push({filePath:s.io.convertAbsoluteFileSystem(V.fullPath),createTime:O.modificationTime.getTime(),size:O.size}),g.length===b.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),Yw=we(E0,({filePath:e},{resolve:t,reject:n})=>{let r=ar(n);s.io.resolveLocalFileSystemURL(e,a=>{a.getMetadata(u=>{t({createTime:u.modificationTime.getTime(),size:u.size})},r,!1)},r)},w0,y0),qw=we(g0,({filePath:e},{resolve:t,reject:n})=>{let r=ar(n);s.io.resolveLocalFileSystemURL(e,a=>{a.remove(()=>{t()},r)},r)},v0,p0),Kw=we(S0,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let a=ar(r);s.runtime.openDocument(vt(e),void 0,n,a)},C0,A0),Jw=Bt(K_,e=>!!ne.hasOwn(Mt,e),J_),Ru;function Zw(){return Ru=Ru||s.device.uuid,Ru}let Xw=s.os.name==="iOS",Bo,xu=!0,ir;function Qw(e,t,n){!ir||(e==="none"?(ir.hideTabBarRedDot({index:t}),ir.removeTabBarBadge({index:t})):e==="text"?ir.setTabBarBadge({index:t,text:n}):e==="redDot"&&ir.showTabBarRedDot({index:t}))}function eS(e,t,n,r,a,u){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=vt(n)),r&&(g.selectedIconPath=vt(r)),u!==void 0&&(g.iconfont=u),a!==void 0){g.visible=Bo.list[e].visible=a,delete g.index;let b=Bo.list.map(V=>({visible:V.visible}));b[e]=g,ir&&ir.setTabBarItems({list:b})}else ir&&ir.setTabBarItem(g)}function tS(e){ir&&ir.setTabBarStyle(e)}function nS(e){xu=!1,ir&&ir.hideTabBar({animation:e})}function rS(e){xu=!0,ir&&ir.showTabBar({animation:e})}let Ic=[];var oi={id:"0",init(e,t){e&&e.list.length&&(Bo=e);try{ir=p.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}ir.onMaskClick(()=>{Ic.forEach(n=>{n()})}),ir&&ir.onClick(({index:n})=>{t(Bo.list[n],n)}),ir&&ir.onMidButtonClick(()=>ft.invokeOnCallback(Ud))},indexOf(e){let t=Bo&&Bo.list&&Bo.list.length;if(t){for(let n=0;n<t;n++)if(Bo.list[n].pagePath===e||Bo.list[n].pagePath===`${e}.html`)return n}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(ir&&ir.switchSelect({index:t}),!0):!1},setTabBarBadge:Qw,setTabBarItem:eS,setTabBarStyle:tS,hideTabBar:nS,showTabBar:rS,append(e){ir&&ir.append({id:e.id},({code:t})=>{t!==0&&k(()=>{this.append(e)},20)})},get visible(){return xu},get height(){return(Bo&&Bo.height?parseFloat(Bo.height):Q.TABBAR_HEIGHT)+s.navigator.getSafeAreaInsets().deviceBottom},get cover(){return Xw&&["extralight","light","dark"].indexOf(Bo.blurEffect)>=0},setStyle({mask:e}){ir.setMask({color:e})},addEventListener(e,t){Ic.push(t)},removeEventListener(e,t){let n=Ic.indexOf(t);Ic.splice(n,1)}};function Nc(){let e=ti();return e?e.$getAppWebview():null}function mh(e){return e?e.$getAppWebview():Nc()}let _h=null;function bh(){return _h}function Bu(e){_h=e}function Mu(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=In();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=Q.addLeadingSlash(e));let t=Ue.find(n=>n.path===e);return t&&t.meta.isTabBar}catch(t){}return!1}function Du(){return s.navigator.isImmersedStatusbar()?Math.round(s.os.name==="iOS"?s.navigator.getSafeAreaInsets().top:s.navigator.getStatusbarHeight()):0}function Eh(){let e=s.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function iS(){let{resolutionWidth:e,resolutionHeight:t}=s.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let yh=Bt("getWindowInfo",()=>{let e=s.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=iS(),r=Du(),a,u={height:0,cover:!1},g=Nc();if(g){let yt=g.getStyle(),Tt=yt&&yt.titleNView;Tt&&Tt.type&&Tt.type!=="none"&&(u.height=Tt.type==="transparent"?0:r+Q.NAVBAR_HEIGHT,u.cover=Tt.type==="transparent"||Tt.type==="float"),a=g.getSafeAreaInsets()}else a=s.navigator.getSafeAreaInsets();let b={height:0,cover:!1};gh()&&(b.height=oi.visible?oi.height:0,b.cover=oi.cover);let V=u.cover?u.height:0,O=b.cover?b.height:0,D=n-u.height-b.height,le=n-(u.cover?0:u.height)-(b.cover?0:b.height),ye=t;(!b.height||b.cover)&&!a.bottom&&a.deviceBottom&&(D-=a.deviceBottom,le-=a.deviceBottom),a=e?a:{left:0,right:0,top:u.height&&!u.cover?0:r,bottom:0};let ke={left:a.left,right:ye-a.right,top:a.top,bottom:le-a.bottom,width:ye-a.left-a.right,height:le-a.top-a.bottom};return{pixelRatio:s.screen.scale,screenWidth:t,screenHeight:n,windowWidth:ye,windowHeight:D,statusBarHeight:r,safeArea:ke,safeAreaInsets:{top:a.top,right:a.right,bottom:a.bottom,left:a.left},windowTop:V,windowBottom:O,screenTop:n-D}}),Ma,kc=!0;function Lu(){if(!kc)return;let{getSystemInfoSync:e}=p.requireModule("plus");if(Ma=e(),typeof Ma=="string")try{Ma=JSON.parse(Ma)}catch(t){}}let wh=Bt("getDeviceInfo",()=>{Lu();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:a,deviceType:u}=Ma,g=e.toLowerCase(),b=n.toLowerCase();return{brand:g,deviceBrand:g,deviceModel:t,devicePixelRatio:s.screen.scale,deviceId:Zw(),deviceOrientation:a,deviceType:u,model:t,platform:b,system:`${b==="ios"?"iOS":"Android"} ${r}`}}),Sh=Bt("getAppBaseInfo",()=>{Lu();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:a,hostTheme:u,appId:g,appName:b,appVersion:V,appVersionCode:O}=Ma;return{appId:g,appName:b,appVersion:V,appVersionCode:O,appLanguage:Cu?Cu():a,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:u,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:a,SDKVersion:"",theme:void 0,version:s.runtime.innerVersion}}),Ah=Bt("getSystemInfoSync",()=>{kc=!0,Lu(),kc=!1;let e=yh(),t=wh(),n=Sh();kc=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:Ma.osName.toLowerCase()};Ma.hostName&&(r.hostSDKVersion=Ma.uniRuntimeVersion);let a=ne.extend(Ma,e,t,n,r);return delete a.screenTop,delete a.enableDebug,delete a.theme,Q.sortObject(a)}),oS=we("getSystemInfo",(e,{resolve:t})=>t(Ah())),Pl=null,aS=Kn(qd,()=>{Ch()}),sS=Mr(ub,()=>{Oh()}),Ch=we(fb,(e,{resolve:t,reject:n})=>{Pl||(Pl=s.orientation.watchOrientation(r=>{ft.invokeOnCallback(qd,{direction:r.magneticHeading})},r=>{n(r.message),Pl=null},{frequency:pi})),k(t,pi)}),Oh=we(db,(e,{resolve:t})=>{Pl&&(s.orientation.clearWatch(Pl),Pl=null),t()}),lS=we(hb,(e,{resolve:t})=>{s.device.vibrate(15),t()}),cS=we(gb,(e,{resolve:t})=>{s.device.vibrate(400),t()}),Il=null,uS=Kn(Yd,()=>{Th()}),fS=Mr(sb,()=>{Ph()}),Th=we(lb,(e,{resolve:t,reject:n})=>{Il||(Il=s.accelerometer.watchAcceleration(r=>{ft.invokeOnCallback(Yd,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Il=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:pi})),k(t,pi)}),Ph=we(cb,(e,{resolve:t})=>{Il&&(s.accelerometer.clearWatch(Il),Il=null),t()}),dS=Kn(Kd,Tl(()=>s.bluetooth.onBluetoothDeviceFound.bind(s.bluetooth),Kd)),hS=Kn(Jd,Tl(()=>s.bluetooth.onBluetoothAdapterStateChange.bind(s.bluetooth),Jd)),gS=Kn(Zd,Tl(()=>s.bluetooth.onBLEConnectionStateChange.bind(s.bluetooth),Zd)),pS=Kn(Xd,Tl(()=>s.bluetooth.onBLECharacteristicValueChange.bind(s.bluetooth),Xd)),vS=we("openBluetoothAdapter",ii(()=>s.bluetooth.openBluetoothAdapter.bind(s.bluetooth))),mS=we("closeBluetoothAdapter",ii(()=>s.bluetooth.closeBluetoothAdapter.bind(s.bluetooth))),_S=we("getBluetoothAdapterState",ii(()=>s.bluetooth.getBluetoothAdapterState.bind(s.bluetooth))),bS=we(pb,ii(()=>s.bluetooth.startBluetoothDevicesDiscovery.bind(s.bluetooth)),vb),ES=we("stopBluetoothDevicesDiscovery",ii(()=>s.bluetooth.stopBluetoothDevicesDiscovery.bind(s.bluetooth))),yS=we("getBluetoothDevices",ii(()=>s.bluetooth.getBluetoothDevices.bind(s.bluetooth))),wS=we(mb,ii(()=>s.bluetooth.getConnectedBluetoothDevices.bind(s.bluetooth)),_b),SS=we(bb,ii(()=>s.bluetooth.createBLEConnection.bind(s.bluetooth)),Eb),AS=we(yb,ii(()=>s.bluetooth.closeBLEConnection.bind(s.bluetooth)),wb),CS=we(Sb,ii(()=>s.bluetooth.getBLEDeviceServices.bind(s.bluetooth)),Ab),OS=we(Cb,ii(()=>s.bluetooth.getBLEDeviceCharacteristics.bind(s.bluetooth)),Ob),TS=we(Tb,ii(()=>s.bluetooth.notifyBLECharacteristicValueChange.bind(s.bluetooth)),Pb),PS=we(Ib,ii(()=>s.bluetooth.readBLECharacteristicValue.bind(s.bluetooth)),Nb),IS=we(kb,ii(()=>s.bluetooth.writeBLECharacteristicValue.bind(s.bluetooth)),Rb),NS=we(xb,ii(()=>s.bluetooth.setBLEMTU.bind(s.bluetooth)),Bb),kS=we(Mb,ii(()=>s.bluetooth.getBLEDeviceRSSI.bind(s.bluetooth)),Db),RS=Kn(Qd,Tl(()=>s.ibeacon.onBeaconUpdate.bind(s.ibeacon),Qd)),xS=Kn(eh,Tl(()=>s.ibeacon.onBeaconServiceChange.bind(s.ibeacon),eh)),BS=we(Lb,ii(()=>s.ibeacon.getBeacons.bind(s.ibeacon))),MS=we(Fb,ii(()=>s.ibeacon.startBeaconDiscovery.bind(s.ibeacon)),Vb),DS=we($b,ii(()=>s.ibeacon.stopBeaconDiscovery.bind(s.ibeacon))),LS=we(X_,({phoneNumber:e},{resolve:t})=>(s.device.dial(e),t()),Q_),FS={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},VS=["type","preferred"];function Fu(e,t,n){let r=0;return Object.keys(n).forEach(a=>{let u=n[a];typeof u!=="object"?VS.indexOf(a)!==-1?e[a]=n[a]:typeof t[u]!="undefined"?(r++,e[a]=t[u]):delete e[a]:u instanceof Array?(e[a]=[],u.forEach(b=>{let V={};Fu(V,t,b)&&e[a].push(V)}),e[a].length?r++:delete e[a]):(e[a]={},Fu(e[a],t,u)?r++:delete e[a])}),r}let $S=we(eb,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),s.contacts.getAddressBook(s.contacts.ADDRESSBOOK_PHONE,r=>{let a=r.create();Fu(a,e,FS),a.save(()=>t(),u=>n())},r=>n())},nb,tb);function Mo(e){return typeof p!="undefined"?p.requireModule(e):__requireNativePlugin__(e)}function Ih(e,t,n){return Mo("plus").sendNativeEvent(e,t,n)}let US=we(rb,(e,{resolve:t,reject:n})=>{Mo("clipboard").getString(a=>{a.result==="success"?t({data:a.data}):n("getClipboardData:fail")})}),HS=we(ib,(e,{resolve:t})=>{Mo("clipboard").setString(e.data),t()},ab,ob),Nh="onNetworkStatusChange";function kh(){Rh().then(({networkType:e})=>{ft.invokeOnCallback(Nh,{isConnected:e!=="none",networkType:e})})}let jS=Kn(Nh,()=>{s.globalEvent.addEventListener("netchange",kh)}),zS=Mr("offNetworkStatusChange",()=>{s.globalEvent.removeEventListener("netchange",kh)}),Rh=we("getNetworkType",(e,{resolve:t})=>{let n=qo[s.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function xh(){if(s.os.name.toLowerCase()!=="ios")return!1;let t=Mo("faceID");return!!(t&&t.isSupport())}function Bh(){return!!(s.fingerprint&&s.fingerprint.isSupport())}let Mh=e=>{let t=[];return Bh()&&t.push("fingerPrint"),xh()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},WS=we(zb,(e,{resolve:t,reject:n})=>{Mh(t)}),Dh=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(u,g)=>n&&n(u,g),a=u=>t&&t(u);if(e==="fingerPrint"){if(Bh()){let u=s.fingerprint.isKeyguardSecure()&&s.fingerprint.isEnrolledFingerprints();return a({isEnrolled:u}),{isEnrolled:u,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(xh()){let u=Mo("faceID"),g=u&&u.isKeyguardSecure()&&u.isEnrolledFaceID();return a({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},GS=we(Wb,({checkAuthMode:e},{resolve:t,reject:n})=>{Dh({checkAuthMode:e,resolve:t,reject:n})},qb,Yb),YS=we(Kb,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:a})=>{_a();let{t:u}=pe(),g=Mh().supportMode;if(g.length===0)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};let b=[];if(e.map((D,le)=>{g.indexOf(D)>-1&&b.push(D)}),b.length===0)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};let V=[];if(b.map((D,le)=>{Dh({checkAuthMode:D}).isEnrolled&&V.push(D)}),V.length===0)return{authMode:b[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${b[0]} enrolled`};let O=V[0];O==="fingerPrint"?(s.os.name.toLowerCase()==="android"&&(s.nativeUI.showWaiting(n||u("uni.startSoterAuthentication.authContent")).onclose=function(){s.fingerprint.cancel()}),s.fingerprint.authenticate(()=>{s.nativeUI.closeWaiting(),r({authMode:O,errCode:0})},D=>{let le={authMode:O};switch(D.code){case D.AUTHENTICATE_MISMATCH:break;case D.AUTHENTICATE_OVERLIMIT:s.nativeUI.closeWaiting(),a("authenticate freeze. please try again later",ne.extend(le,{errCode:90010}));break;case D.CANCEL:s.nativeUI.closeWaiting(),a("cancel",ne.extend(le,{errCode:90008}));break;default:s.nativeUI.closeWaiting(),a("",ne.extend(le,{errCode:90007}));break}},{message:n})):O==="facial"&&Mo("faceID").authenticate({message:n},le=>{let ye={authMode:O};if(le.type==="success"&&le.code===0)r({authMode:O,errCode:0});else switch(le.code){case 4:a("",ne.extend(ye,{errCode:90009}));break;case 5:a("authenticate freeze. please try again later",ne.extend(ye,{errCode:90010}));break;case 6:a("",ne.extend(ye,{errCode:90008}));break;default:a("",ne.extend(ye,{errCode:90007}));break}})},Zb,Jb),qS=we(Xb,(e,{resolve:t,reject:n})=>{ea();let{t:r}=pe(),u=Eh()!=="light",g,b=!1,V=Wo({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{V.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:O,detail:D}){g=D,b=O==="marked"},onClose(){u&&s.navigator.setStatusBarStyle("dark"),g?b?(delete g.message,t(g)):n(g.message):n("cancel")}});u&&(s.navigator.setStatusBarStyle("light"),V.webview.addEventListener("popGesture",({type:O,result:D})=>{O==="start"?s.navigator.setStatusBarStyle("dark"):O==="end"&&!D&&s.navigator.setStatusBarStyle("light")}))},Qb,t0),KS=Kn(Q.ON_THEME_CHANGE,()=>{ft.on(Q.ON_THEME_CHANGE,e=>{ft.invokeOnCallback(Q.ON_THEME_CHANGE,e)})}),JS=we(Ub,(e,{resolve:t})=>{let n=s.screen.getBrightness(!1);t({value:n})}),ZS=we(Hb,(e,{resolve:t})=>{s.screen.setBrightness(e.value,!1),t()}),XS=we(jb,(e,{resolve:t})=>{s.device.setWakelock(!!e.keepScreenOn),t()}),QS=we(H0,(e,{resolve:t,reject:n})=>{let r=vi+"/download/";s.io.getImageInfo(ne.extend(e,{savePath:r,filename:r,success:$s(t),fail:ar(n)}))},z0,j0),eA=we(K0,(e,{resolve:t,reject:n})=>{s.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:ar(n)})},Z0,J0),tA=we(W0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:a},{resolve:u,reject:g})=>{Ii();let{t:b}=pe();r=r.map(O=>vt(O));let V=Number(e);isNaN(V)?(e=r.indexOf(vt(e)),e=e<0?0:e):e=V,s.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(O){let D=[],le="",ye=a&&ne.isPlainObject(a);ye?(D=a.itemList?a.itemList:[],le=a.itemColor?a.itemColor:"#000000"):(D=[b("uni.previewImage.button.save")],le="#000000");let ke={buttons:D.map(yt=>({title:yt,color:le})),cancel:b("uni.previewImage.cancel")};s.nativeUI.actionSheet(ke,yt=>{if(yt.index>0){if(ye){typeof a.success=="function"&&a.success({tapIndex:yt.index-1,index:O.index});return}s.gallery.save(O.url,()=>{s.nativeUI.toast(b("uni.previewImage.save.success"))},function(){s.nativeUI.toast(b("uni.previewImage.save.fail"))})}else ye&&typeof a.fail=="function"&&a.fail({errMsg:"showActionSheet:fail cancel"})})}}),u()},Y0,G0),nA=we(q0,(e,{resolve:t,reject:n})=>{try{s.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Vu,Nl=!1,$u,kl=(e,t={})=>{rA(ne.extend({state:e},t))},tc={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:a="mp3",frameSize:u}={}){if(Nl)return kl("start");Vu=s.audio.getRecorder(),Vu.record({format:a,samplerate:t?String(t):"",filename:vi+"/recorder/"},g=>kl("stop",{tempFilePath:g}),g=>kl("error",{errMsg:g.message})),$u=k(()=>{tc.stop()},e),kl("start"),Nl=!0},stop(){Nl&&(Vu.stop(),Nl=!1,$u&&y($u))},pause(){Nl&&kl("error",{errMsg:"Unsupported operation: pause"})},resume(){Nl&&kl("error",{errMsg:"Unsupported operation: resume"})}},Us={pause:null,resume:null,start:null,stop:null,error:null};function rA(e){let t=e.state;delete e.state,delete e.errMsg,t&&typeof Us[t]=="function"&&Us[t](e)}class iA{constructor(){}onError(t){Us.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){Us.pause=t}onResume(t){Us.resume=t}onStart(t){Us.start=t}onStop(t){Us.stop=t}pause(){tc.pause()}resume(){tc.resume()}start(t={}){tc.start(t)}stop(){tc.stop()}}let Lh,oA=Bt(iE,()=>Lh||(Lh=new iA)),aA=we(tE,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,$s(t),ar(n))},rE,nE),sA=we(X0,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,$s(t),ar(n))},eE,Q0),lA=we(oE,(e,{resolve:t,reject:n})=>{let r=`${vi}/compressed/${Date.now()}_${gi(e.src)}`;s.zip.compressImage(ne.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},sE,aE),cA=we(lE,(e,{resolve:t,reject:n})=>{let r=`${vi}/compressed/${Date.now()}_${gi(e.src)}`;s.zip.compressVideo(ne.extend({},e,{filename:r}),()=>{t({tempFilePath:r})},n)},uE,cE);function uA(e){return new Promise((t,n)=>{s.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let fA=we(D0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:a,reject:u})=>{hn();let{t:g}=pe(),b=ar(u);function V(le){let ye=[],ke=[];Promise.all(le.map(yt=>uA(yt))).then(yt=>{yt.forEach((Tt,Xt)=>{let zt=le[Xt];ke.push(zt),ye.push({path:zt,size:Tt.size})}),a({tempFilePaths:ke,tempFiles:ye})}).catch(b)}function O(){s.camera.getCamera().captureImage(ye=>V([ye]),b,{filename:vi+"/camera/",resolution:"high",crop:r,sizeType:t})}function D(){s.gallery.pick(({files:le})=>V(le),b,{maximum:e,multiple:!0,system:!1,filename:vi+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){D();return}else if(n.includes("camera")){O();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},le=>{switch(le.index){case 1:O();break;case 2:D();break;default:b();break}})},F0,L0),dA=we(V0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:a,reject:u})=>{kn();let{t:g}=pe(),b=ar(u);function V(le){s.io.getVideoInfo({filePath:le,success(ye){let ke={errMsg:"chooseVideo:ok",tempFilePath:le,size:ye.size,duration:ye.duration,width:ye.width,height:ye.height};a(ke)},fail:b})}function O(){s.gallery.pick(({files:le})=>V(le[0]),b,{filter:"video",system:!1,multiple:!0,maximum:1,filename:vi+"/gallery/",permissionAlert:!0,videoCompress:t})}function D(){s.camera.getCamera().startVideoCapture(V,b,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:vi+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){O();return}else if(e.includes("camera")){D();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},le=>{switch(le.index){case 1:D();break;case 2:O();break;default:b();break}})},U0,$0),hA=we(T0,(e,{resolve:t})=>{s.key.showSoftKeybord(),t()}),gA=we(O0,(e,{resolve:t})=>{s.key.hideSoftKeybord(),t()});function Fh(e){ft.invokeOnCallback(Q.ON_KEYBOARD_HEIGHT_CHANGE,e)}let pA=Kn(Q.ON_KEYBOARD_HEIGHT_CHANGE,()=>{ft.on(Q.ON_KEYBOARD_HEIGHT_CHANGE,Fh)}),vA=Mr(Q.ON_KEYBOARD_HEIGHT_CHANGE,()=>{ft.off(Q.ON_KEYBOARD_HEIGHT_CHANGE,Fh)});class mA{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let _A=Fi(yE,({url:e,header:t,timeout:n},{resolve:r,reject:a})=>{n=(n||P.networkTimeout&&P.networkTimeout.request||60*1e3)/1e3;let u=s.downloader.createDownload(e,{timeout:n,filename:vi+"/download/",retry:0,retryInterval:0},(b,V)=>{V?r({tempFilePath:b.filename,statusCode:V}):a(`statusCode: ${V}`)}),g=new mA(u);for(let b in t)ne.hasOwn(t,b)&&u.setRequestHeader(b,t[b]);return u.start(),g},SE,wE),bA=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let a=0;a<r.length;a++)r[a].indexOf("Expires=")!==-1||r[a].indexOf("expires=")!==-1?n.push(r[a].replace(",","")):n.push(r[a]);return n=n.join(";").split(","),n};function EA(e,t){if(typeof e.data=="string"&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),ne.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let a=e.header[r];return Array.isArray(a)?n[r]=a.join(","):typeof a=="string"&&(n[r]=a),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class yA{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let wA=Fi(fE,(e,{resolve:t,reject:n})=>{let{header:r,method:a,data:u,timeout:g,url:b,responseType:V,sslVerify:O,firstIpv4:D,tls:le}=e,ye;for(let mt in r)if(mt.toLowerCase()==="content-type"){ye=r[mt];break}a!=="GET"&&ye.indexOf("application/json")===0&&ne.isPlainObject(u)&&(u=JSON.stringify(u));let ke=Mo("stream"),yt={},Tt,Xt,zt=!1;for(let mt in r)if(!zt&&mt.toLowerCase()==="content-type"){if(zt=!0,yt["Content-Type"]=r[mt],a!=="GET"&&r[mt].indexOf("application/x-www-form-urlencoded")===0&&typeof u!="string"&&!(u instanceof ArrayBuffer)){let dn=[];for(let Qt in u)ne.hasOwn(u,Qt)&&dn.push(encodeURIComponent(Qt)+"="+encodeURIComponent(u[Qt]));u=dn.join("&")}}else yt[mt]=r[mt];!zt&&a==="POST"&&(yt["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(Tt=k(()=>{Xt=!0,n("timeout")},g+200));let Rn={method:a,url:b.trim(),headers:yt,type:V==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!O,firstIpv4:D,tls:le},Ln=!1;a!=="GET"&&(toString.call(u)==="[object ArrayBuffer]"?Ln=!0:Rn.body=typeof u=="string"?u:JSON.stringify(u));let en=({ok:mt,status:dn,data:Qt,headers:Gt,errorMsg:pn})=>{if(Xt)return;Tt&&y(Tt);let sr=dn;if(sr>0)t(EA({data:mt&&V==="arraybuffer"?Nn(Qt):Qt,statusCode:sr,header:Gt,cookies:bA(Gt)},e));else{let Yt="abort statusCode:"+sr;pn&&(Yt=Yt+" "+pn),n(Yt)}};return Ln?ke.fetchWithArrayBuffer({"@type":"binary",base64:Qn(u)},Rn,en):ke.fetch(Rn,en),new yA({abort(){Xt=!0,Tt&&y(Tt),n("abort")}})},vE,mE),SA=we(_E,({certificates:e},{resolve:t,reject:n})=>{Mo("stream").configMTLS(e,({type:a,code:u,message:g})=>{switch(a){case"success":t({code:u});break;case"fail":n(g,{code:u});break}})},bE,EE),Rl=[],xl={},Uu={open:"",close:"",error:"",message:""},nc;function AA(e){let t=String(Date.now()),n;try{nc||(nc=Mo("uni-webSocket"),CA(nc)),nc.WebSocket({id:t,url:e.url,protocol:Array.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:nc,socketId:t,errMsg:n}}function CA(e){e.onopen(t=>{let n=xl[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=xl[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=xl[t.id];!n||n._socketOnError()}),e.onclose(t=>{let n=xl[t.id];!n||n._socketOnClose()})}class OA{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Nn(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete xl[this.id];let t=Rl.indexOf(this);t>=0&&Rl.splice(t,1)}socketStateChange(t,n={}){let r=t==="message"?n:{};this===Rl[0]&&Uu[t]&&ft.invokeOnCallback(Uu[t],r),this._callbacks[t].forEach(a=>{typeof a=="function"&&a(r)})}send(t,n=!0){this.readyState!==this.OPEN&&Q.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Qn(t.data)}:t.data}),n&&Q.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&Q.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(ne.extend({id:this.id,args:t})),n&&Q.callOptions(t,"closeSocket:ok")}catch(r){n&&Q.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let TA=Fi(TE,({url:e,protocols:t,header:n,method:r},{resolve:a,reject:u})=>{let{socket:g,socketId:b,errMsg:V}=AA({url:e,protocols:t,header:n,method:r}),O=new OA(g,b);return V?k(()=>{u(V)},0):(Rl.push(O),xl[b]=O),k(()=>{a()},0),O},IE,PE),PA=we(NE,(e,{resolve:t,reject:n})=>{let r=Rl[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},kE),IA=we(RE,(e,{resolve:t,reject:n})=>{let r=Rl[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},xE);function Rc(e){let t=`onSocket${ne.capitalize(e)}`;return Kn(t,()=>{Uu[e]=t})}let NA=Rc("open"),kA=Rc("error"),RA=Rc("message"),xA=Rc("close");class BA{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let MA=Fi(AE,({url:e,timeout:t,header:n,formData:r,files:a,filePath:u,name:g},{resolve:b,reject:V})=>{let O=s.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(le,ye)=>{ye?b({data:le.responseText,statusCode:ye}):V(`statusCode: ${ye}`)});for(let le in n)ne.hasOwn(n,le)&&O.setRequestHeader(le,String(n[le]));for(let le in r)ne.hasOwn(r,le)&&O.addData(le,String(r[le]));a&&a.length?a.forEach(le=>{O.addFile(vt(le.uri),{key:le.name||"file"})}):O.addFile(vt(u),{key:g});let D=new BA(O);return O.start(),D},OE,CE),_s={},DA=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],Vh="playback",LA=e=>{let t=_s[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{$h({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),DA.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),$h({state:n,audioId:e})})}))};function FA(){let e=`${Date.now()}${Math.random()}`,t=_s[e]=s.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(Vh),{errMsg:"createAudioInstance:ok",audioId:e}}function VA({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:a=!1,obeyMuteSwitch:u,volume:g,sessionCategory:b=Vh,playbackRate:V}){let O=_s[e];if(O){let D={loop:a,autoplay:r};if(t){let le=vt(t);O.src!==le&&(O.src=D.src=le)}n&&(O.startTime=D.startTime=n),typeof g=="number"&&(O.volume=D.volume=g),O.setStyles(D),b&&O.setSessionCategory(b),V&&O.playbackRate&&O.playbackRate(V),LA(e)}return{errMsg:"setAudioState:ok"}}function $A({audioId:e}){let t=_s[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:a}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:a,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function UA({operationType:e,audioId:t,currentTime:n}){let r=_s[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Hu=Object.create(null),$h=({state:e,audioId:t,errMsg:n,errCode:r})=>{let a=Hu[t];if(a)if(Uh(a,e,n,r),e==="play"){let u=a.currentTime;a.__timing=I(()=>{a.currentTime!==u&&Uh(a,"timeUpdate")},200)}else(e==="pause"||e==="stop"||e==="error")&&f(a.__timing)},HA=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class ju{constructor(t){this.id=t,this._callbacks={},this._options={},Md.forEach(n=>{this._callbacks[n]=[]}),HA.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let a=n.cache?this._options:$A({audioId:this.id}),u=r in a?a[r]:n.default;return typeof u=="number"&&r!=="volume"?u/1e3:u},set:n.readonly?void 0:a=>{this._options[r]=a,VA(ne.extend({},this._options,{audioId:this.id}))}})}),jA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){f(this.__timing),_s[this.id]&&(_s[this.id].close(),delete _s[this.id]),delete Hu[this.id]}_operate(t,n){UA(ne.extend({},n,{audioId:this.id,operationType:t}))}}let jA=Q.once(()=>{Md.forEach(e=>{ju.prototype[e]=function(t){typeof t=="function"&&this._callbacks[e].push(t)}}),r_.forEach(e=>{ju.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function Uh(e,t,n,r){let a=`on${ne.capitalize(t)}`;e._callbacks[a].forEach(u=>{typeof u=="function"&&u(t==="error"?{errMsg:n,errCode:r}:{})})}let zA=Bt(Rm,()=>{let{audioId:e}=FA(),t=new ju(e);return Hu[e]=t,t}),WA=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],Hh={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},Kt,zu=null,GA=250,YA=["play","pause","ended","stop","canplay"];function qA(){xc(),zu=I(()=>{Bl({state:"timeUpdate"})},GA)}function xc(){zu!==null&&f(zu)}function KA(){if(Kt)return;let e=ft.invokeOnCallback;Kt=s.audio.createPlayer({autoplay:!0,backgroundControl:!0}),Kt.src=Kt.title=Kt.epname=Kt.singer=Kt.coverImgUrl=Kt.webUrl="",Kt.startTime=0,YA.forEach(t=>{Kt.addEventListener(t,()=>{t==="play"?(Kt.isStopped=!1,qA()):t==="stop"&&(Kt.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&xc();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:Kt.src,errMsg:`${n}:ok`}),Bl({state:t,dataUrl:Kt.src})})}),Kt.addEventListener("waiting",()=>{xc(),Bl({state:"waiting",dataUrl:Kt.src})}),Kt.addEventListener("error",t=>{xc(),e("onMusicError",{dataUrl:Kt.src,errMsg:"Error:"+t.message}),Bl({state:"error",dataUrl:Kt.src,errMsg:t.message,errCode:t.code})}),Kt.addEventListener("prev",()=>{Bl({state:"prev"})}),Kt.addEventListener("next",()=>{Bl({state:"next"})})}function JA(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(Kt){let t={duration:Kt.getDuration()||0,currentTime:Kt.isStopped?0:Kt.getPosition(),paused:Kt.isPaused(),src:Kt.src,buffered:Kt.getBuffered(),title:Kt.title,epname:Kt.epname,singer:Kt.singer,coverImgUrl:Kt.coverImgUrl,webUrl:Kt.webUrl,startTime:Kt.startTime};e=ne.extend(e,t)}return e}function jh(e,t){KA();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let a=e[t];Kt.playbackRate&&Kt.playbackRate(parseFloat(a));return}let r={};Object.keys(e).forEach(a=>{if(n.indexOf(a)>=0){let u=e[a];a===n[0]&&u&&(u=vt(u)),Kt[a]=r[a]=u}}),Kt.setStyles(r)}function ZA({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:a,coverImgUrl:u}){var g=["resume","pause","stop"];return g.indexOf(e)>0?Kt&&Kt[e]():e==="play"?(jh({src:t,startTime:n,title:a,coverImgUrl:u}),Kt.play()):e==="seek"&&Kt&&Kt.seekTo(n),{errMsg:`${r}:ok`}}function XA({operationType:e,src:t,startTime:n,currentTime:r}){return ZA({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function Bl({state:e,errMsg:t,errCode:n,dataUrl:r}){Hh[e].forEach(a=>{ne.isFunction(a)&&a(e==="error"?{errMsg:t,errCode:n}:{})})}let QA=Q.once(()=>{WA.forEach(e=>{zh.prototype[`on${ne.capitalize(e)}`]=function(t){Hh[e].push(t)}})}),eC=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class zh{constructor(){this._options={},eC.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:JA();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,jh(this._options,n)}})}),QA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){XA(ne.extend({},n,{operationType:t}))}}let Wh,tC=Bt(Z_,()=>Wh||(Wh=new zh));class nC{constructor(t,n){this.id=t,this.ctx=n}start(t){return Et(this.ctx,"start",t)}stop(t){return Et(this.ctx,"stop",t)}pause(t){return Et(this.ctx,"pause",t)}resume(t){return Et(this.ctx,"resume",t)}switchCamera(t){return Et(this.ctx,"switchCamera",t)}snapshot(t){return Et(this.ctx,"snapshot",t)}toggleTorch(t){return Et(this.ctx,"toggleTorch",t)}playBGM(t){return Ht(this.ctx,"playBGM",t)}stopBGM(t){return Et(this.ctx,"stopBGM",t)}pauseBGM(t){return Et(this.ctx,"pauseBGM",t)}resumeBGM(t){return Et(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Ht(this.ctx,"setBGMVolume",t)}startPreview(t){return Et(this.ctx,"startPreview",t)}stopPreview(t){return Et(this.ctx,"stopPreview",t)}}function bs(e,t,n,r){ft.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class rC{constructor(t,n){this.id=t,this.pageId=n}start(){bs(this.id,this.pageId,"start")}stop(){bs(this.id,this.pageId,"stop")}pause(){bs(this.id,this.pageId,"pause")}resume(){bs(this.id,this.pageId,"resume")}switchCamera(){bs(this.id,this.pageId,"switchCamera")}startPreview(){bs(this.id,this.pageId,"preview")}stopPreview(){bs(this.id,this.pageId,"stop")}snapshot(){bs(this.id,this.pageId,"snapshot")}}let iC=Bt(xm,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=ia(e,t);return n?new nC(e,n):console.warn("Can not find `"+e+"`")}return new rC(e,t.$page.id)},Bm),_i=3.141592653589793,Bc=6378245,Mc=.006693421622965943;function oC(e,t){if(t=+t,e=+e,Gh(e,t))return[e,t];let n=Yh(e-105,t-35),r=qh(e-105,t-35),a=t/180*_i,u=Math.sin(a);u=1-Mc*u*u;let g=Math.sqrt(u);n=n*180/(Bc*(1-Mc)/(u*g)*_i),r=r*180/(Bc/g*Math.cos(a)*_i);let b=t+n,V=e+r;return[e*2-V,t*2-b]}function aC(e,t){if(t=+t,e=+e,Gh(e,t))return[e,t];let n=Yh(e-105,t-35),r=qh(e-105,t-35),a=t/180*_i,u=Math.sin(a);u=1-Mc*u*u;let g=Math.sqrt(u);n=n*180/(Bc*(1-Mc)/(u*g)*_i),r=r*180/(Bc/g*Math.cos(a)*_i);let b=t+n;return[e+r,b]}let Gh=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},Yh=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*_i)+20*Math.sin(2*e*_i))*2/3,n+=(20*Math.sin(t*_i)+40*Math.sin(t/3*_i))*2/3,n+=(160*Math.sin(t/12*_i)+320*Math.sin(t*_i/30))*2/3,n},qh=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*_i)+20*Math.sin(2*e*_i))*2/3,n+=(20*Math.sin(e*_i)+40*Math.sin(e/3*_i))*2/3,n+=(150*Math.sin(e/12*_i)+300*Math.sin(e/30*_i))*2/3,n};function Kh(e,t,n){let r=t.coords;if(e!==t.coordsType){let a;e==="wgs84"?a=oC(r.longitude,r.latitude):e==="gcj02"&&(a=aC(r.longitude,r.latitude)),a&&(r.longitude=a[0],r.latitude=a[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let sC=we(N0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:a=!1},{resolve:u,reject:g})=>{s.geolocation.getCurrentPosition(b=>{Kh(e,b,u)},b=>{if(b.code===1501){Kh(e,b,u);return}g("getLocation:fail "+b.message)},{geocode:t,enableHighAccuracy:a||n,timeout:r,coordsType:e})},R0,k0),lC=we(P0,(e,{resolve:t,reject:n})=>{let a=Eh()!=="light",u,g=Wo({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:b,detail:V}){b==="selected"&&(u=V)},onClose(){a&&s.navigator.setStatusBarStyle("dark"),u?t(u):n("cancel")}});a&&(s.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:b,result:V})=>{b==="start"?s.navigator.setStatusBarStyle("dark"):b==="end"&&!V&&s.navigator.setStatusBarStyle("light")}))},I0),cC=we(x0,(e,{resolve:t,reject:n})=>(Wo({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),M0,B0),uC=we(my,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:a,confirmText:u,confirmColor:g,editable:b=!1,placeholderText:V=""}={},{resolve:O})=>{let D=n?[r,u]:[u],le=b?V:D;t=t||" ",s.nativeUI[b?"prompt":"confirm"](t,ye=>{if(n){let ke=ye.index===1,yt={confirm:ke,cancel:ye.index===0||ye.index===-1};ke&&b&&(yt.content=ye.value),O(yt)}else{let ke={confirm:ye.index===0,cancel:!1};b&&(ke.content=ye.value),O(ke)}},e,le,D)},_y,by),fC=we(fy,({itemList:e=[],itemColor:t="#000000",title:n="",popover:r},{resolve:a,reject:u})=>{Jn();let{t:g}=pe(),b={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map(V=>({title:V,color:t}))};s.nativeUI.actionSheet(ne.extend(b,{popover:r}),V=>{V.index>0?a({tapIndex:V.index-1}):u("showActionSheet:fail cancel")})},dy,hy),rc,Wu=!1,Dc="",Lc,dC=we(gy,(e,t)=>Jh(ne.extend({},e,{type:"loading",icon:"loading"}),t),py,vy),Jh=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:a=!1,position:u,type:g="toast",style:b},{resolve:V,reject:O})=>{if(Fc(""),Dc=g,["top","center","bottom"].includes(String(u)))s.nativeUI.toast(e,{verticalAlign:u}),Wu=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let D={modal:a,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?D.loading={display:"none"}:(D.width="140px",D.height="112px"),n?D.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(D.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{rc=s.nativeUI.showWaiting(e,ne.extend(D,b))}catch(le){O(`${le}`)}}return Dc==="toast"&&(Lc=k(()=>{Fc("")},r)),V()},hC=we(Ey,Jh,wy,Sy),gC=we(QE,(e,t)=>Fc("toast",t)),pC=we(XE,(e,t)=>Fc("loading",t));function Fc(e="toast",t){return e&&e!==Dc||(Lc&&(y(Lc),Lc=null),Wu?s.nativeUI.closeToast():rc&&rc.close&&rc.close(),rc=null,Wu=!1,Dc=""),t&&t.resolve()}let vC=we(Ay,(e,{resolve:t,reject:n})=>{let r=bh();if(r&&r.endPullToRefresh(),r=Nc(),!r)return n();r.beginPullToRefresh(),Bu(r),t()}),mC=we(Cy,(e,{resolve:t,reject:n})=>{let r=bh()||Nc();if(!r)return n();r.endPullToRefresh(),Bu(null),t()}),_C=we(ch,(e,{resolve:t,reject:n})=>{let r=hr(qr());ft.invokeViewMethod(ch,e,r,a=>{a?n(a):t()})},ey),bC=we(uh,(e,{resolve:t})=>{let n=hr(qr());ft.invokeViewMethod(uh,e,n,t)},cy,uy),EC=we(oy,({__page__:e,title:t},{resolve:n,reject:r})=>{let a=mh(e);if(a){let u=a.getStyle();u&&u.titleNView&&a.setStyle({titleNView:{titleText:t}}),n()}else r()},ay),yC=we(sy,(e,{resolve:t})=>{s.nativeUI.showWaiting("",{modal:!1}),t()}),wC=we(ly,(e,{resolve:t})=>{s.nativeUI.closeWaiting(),t()});function SC(e){let t=In();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let AC=we(ny,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:a})=>{let u=mh(e);if(u){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let b=t==="#000000"?"dark":"light";s.navigator.setStatusBarStyle(b),SC(b);let V=u.getStyle();V&&V.titleNView&&(V.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),u.setStyle({titleNView:g})),r()}else a()},iy,ry),CC=we(Wy,({index:e,text:t},{resolve:n,reject:r})=>{oi.setTabBarBadge("text",e,t),n()},Gy,Yy),OC=we(Oy,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:a,visible:u,iconfont:g},{resolve:b,reject:V})=>{oi.setTabBarItem(e,t,n,r,u,g);let O=a&&Ue.find(({path:D})=>D===a);if(O){let D=O.meta;D.isTabBar=!0,D.tabBarIndex=e,D.isQuit=!0;let le=P.tabBar;le&&le.list&&le.list[e]&&a&&(le.list[e].pagePath=a.startsWith("/")?a.substring(1):a)}b()},Ty,Py),TC=we(Iy,(e={},{resolve:t,reject:n})=>{if(!Mu())return n("not TabBar page");let r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},a=e.borderStyle;a&&a in r&&(e.borderStyle=r[a]),oi.setTabBarStyle(e),t()},Ny,Ry),PC=we(xy,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Mu())return n("not TabBar page");oi.hideTabBar(Boolean(r)),t()},fh),IC=we(By,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Mu())return n("not TabBar page");oi.showTabBar(Boolean(r)),t()},My),NC=we(Vy,({index:e},{resolve:t,reject:n})=>{oi.setTabBarBadge("redDot",e),t()},$y,Uy),Zh=e=>oi.setTabBarBadge("none",e),kC=we(Hy,({index:e},{resolve:t,reject:n})=>{Zh(e),t()},jy,zy),RC=we(Dy,({index:e},{resolve:t,reject:n})=>{Zh(e),t()},Ly,Fy),Xh="vdSync",xC="__uniapp__service",Ml="onWebviewReady",BC=0,MC="webviewInserted",DC="webviewRemoved",Qh="UniAppSubNVue";class LC{constructor(t,n){this.callbacks=[];let r=this.webview=s.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let a=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){Mo("uni-tabview").setMask({color:g})}}:s.webview.getWebviewById(r.__uniapp_mask_id),u=function(){a.setStyle({mask:"none"})};r.addEventListener("hide",u),r.addEventListener("close",u)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===Qh){let a=r.data.target;a.id===this.webview.id&&a.isSub===this.isSub&&this.callbacks.forEach(u=>{u({origin:this.webview.__uniapp_host,data:r.data.data})})}};Mo("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){s.webview.postMessageToUniNView({type:Qh,data:t,target:{id:this.webview.id,isSub:!this.isSub}},xC)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let FC=function(e,t){return new LC(e,t)},ic,eg=s.navigator.setStatusBarStyle;function VC(e){eg=e}function tg(e){ic=e,eg(e)}s.navigator.setStatusBarStyle=tg;function es(e){if(!e){let t=ti();if(!t||(e=t.$page.statusBarStyle,!e||e===ic))return}e!==ic&&(ic=e,s.navigator.setStatusBarStyle(e))}function $C(e,t,n,r,a,u,g){s!==n&&(A=En=e,p=t,s=n,VC(s.navigator.setStatusBarStyle),s.navigator.setStatusBarStyle=tg,k=r,y=a,I=u,f=g),P.serviceReady=!0}function UC(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}let ng={oauth(e){s.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{t=t,e(t)})},share(e){s.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},payment(e){s.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},push(e){typeof p!="undefined"||typeof s!="undefined"?e(null,[s.push.getClientInfo().id]):e(null,[])}},HC=we(qy,({service:e},{resolve:t,reject:n})=>{ng[e]?ng[e]((r,a)=>{r?n(r.message):t({service:e,provider:a})}):n("service not found")},Ky),Vc;function oc(e){return new Promise((t,n)=>{s.oauth.getServices(r=>{let a=r.find(({id:u})=>u===e);a?t(a):n(new Error("provider not find"))},n)})}let rg=we(Jy,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=ar(n),u=r==="apple",g=u?{scope:"email"}:e.univerifyStyle?{univerifyStyle:WC(e.univerifyStyle,a)}:{};oc(r).then(b=>{function V(){if(e.onlyAuthorize&&r==="weixin"){b.authorize(({code:O})=>{t({code:O,authResult:""})},a);return}b.login(O=>{let D=O.target.authResult,le=O.target.appleInfo;t({code:D.code,authResult:D,appleInfo:le})},a,g)}u||r==="univerify"?V():b.logout(V,V)}).catch(a)},Zy),ig=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=ar(n);oc(r).then(u=>{u.getUserInfo(g=>{let b={nickName:""};if(r==="weixin"){let O=u.userInfo;O&&(b={openId:O.openid,nickName:O.nickname,gender:O.sex,city:O.city,province:O.province,country:O.country,avatarUrl:O.headimgurl,unionId:O.unionid})}else if(r==="apple"){let O=u.appleInfo;O&&(b={openId:O.user,fullName:O.fullName,email:O.email,authorizationCode:O.authorizationCode,identityToken:O.identityToken,realUserStatus:O.realUserStatus})}else b=u.userInfo,b&&(b.openId=b.openId||b.openid||u.authResult.openid,b.nickName=b.nickName||b.nickname,b.avatarUrl=b.avatarUrl||b.headimgurl);let V={};e.data&&e.data.api_name==="webapi_getuserinfo"?V.data={data:JSON.stringify(b),rawData:"",signature:"",encryptedData:"",iv:""}:V.userInfo=b,t(V)},a)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},jC=we(Xy,ig,Qy),zC=we(ew,ig,tw),og=we(nw,({provider:e},{resolve:t,reject:n})=>{let r=$s(t),a=ar(n);oc(e).then(u=>u.preLogin(r,a)).catch(a)},ow,iw),ag=()=>oc("univerify").then(e=>e.closeAuthView()),sg=Bt(aw,ag),lg=we(sw,(e,{resolve:t,reject:n})=>{let r=$s(t),a=ar(n);try{oc("univerify").then(u=>{let g=u.getCheckBoxState();r({state:g})})}catch(u){a(u)}});function WC(e,t){return ne.isPlainObject(e)&&ne.isPlainObject(e.buttons)&&ne.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let a={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};ne.isPlainObject(Vc)?Vc._triggerUniverifyButtonsClick(a):ag().then(()=>{t(a)})}}),e}class GC{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return sg()}login(t){return rg(this._getOptions(t))}getCheckBoxState(t){return lg(t)}preLogin(t){return og(this._getOptions(t))}onButtonsClick(t){ft.on(this.eventName,t)}offButtonsClick(t){ft.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){ft.emit(this.eventName,t)}_getOptions(t={}){return ne.extend({},t,{provider:this.provider})}}let YC=Bt(lw,()=>Vc||(Vc=new GC)),qC=Bt("registerRuntime",e=>{ne.extend(jsRuntime,e)}),KC={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},JC=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:a,href:u,imageUrl:g,mediaUrl:b,scene:V,miniProgram:O,openCustomerServiceChat:D,corpid:le,customerUrl:ye}=e;typeof g=="string"&&g&&(g=vt(g));let ke=KC[n];if(ke){let yt={provider:t,type:ke.name,title:r,content:a,href:u,pictures:[g],thumbs:g?[g]:void 0,media:b,miniProgram:O,extra:{scene:V},openCustomerServiceChat:D,corpid:le,url:ye};return t==="weixin"&&(n===1||n===2)&&delete yt.thumbs,yt}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},cg=function(e,t,n,r,a="share"){let u=ar(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},u)}catch(b){u({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},ZC=we(cw,(e,{resolve:t,reject:n})=>{let r=JC(e),a=ar(n);if(typeof r=="string")return n(r);s.share.getServices(u=>{let g=u.find(({id:b})=>b===r.provider);g?g.authenticated?cg(g,r,t,n):g.authorize(()=>cg(g,r,t,n),a):n("service not found")},a)},fw,uw),XC=we(dw,({type:e,imageUrl:t,summary:n,href:r},{resolve:a,reject:u})=>{let g=ar(u);typeof t=="string"&&t&&(t=vt(t)),s.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>a(),g)},gw,hw),QC=we(pw,(e,{resolve:t,reject:n})=>{let r=e.provider,a=ar(n);s.payment.getChannels(u=>{let g=u.find(({id:b})=>b===r);g?s.payment.request(g,e.orderInfo,b=>{t(b)},a):n("service not found")},a)},vw),ug=Ih,eO=we("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{ug("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),fg=[];function dg(e){fg.push(e)}let tO=dg;function nO(e,t){fg.forEach(n=>n(e,t))}let Ao={load:"load",close:"close",error:"error",adClicked:"adClicked"};class hg{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(Ao.load,t)}onClose(t){this._addEventListener(Ao.close,t)}onError(t){this._addEventListener(Ao.error,t)}offLoad(t){this._removeEventListener(Ao.load,t)}offClose(t){this._removeEventListener(Ao.close,t)}offError(t){this._removeEventListener(Ao.error,t)}_addEventListener(t,n){typeof n=="function"&&(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],a=r.indexOf(n);a>-1&&r.splice(a,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class Gu extends hg{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Ao.load,{})}),r.onClose(a=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(Ao.close,a),this.preload===!0&&this._loadAd()}),r.onError(a=>{this._isLoading=!1;let u={code:a.code,errMsg:a.message};this._dispatchEvent(Ao.error,u);let g=new Error(JSON.stringify(u));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(Ao.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class rO extends Gu{constructor(t){super(s.ad.createRewardedVideoAd(t),t);this._loadAd()}}let iO=Bt(mw,e=>new rO(e),bw,_w);class oO extends Gu{constructor(t){super(s.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let aO=Bt(Ew,e=>new oO(e),ww,yw);class sO extends Gu{constructor(t){super(s.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let lO=Bt(Sw,e=>new sO(e),Cw,Aw),ha={},Hs={};function cO(e){let t=e.provider;if(ha[t]||(ha[t]={}),typeof ha[t].plugin=="object"){e.success(ha[t].plugin);return}if(Hs[t]||(Hs[t]=[]),Hs[t].push(e),ha[t].status===!0){e.__plugin=ha[t].plugin;return}ha[t].status=!0;let n=Mo(t);if(!n||!n.initSDK){Hs[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Hs[t].length=0,ha[t].status=!1;return}ha[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let a=r.code===1||r.code==="1";a?ha[t].plugin=n:ha[t].status=!1,Hs[t].forEach(u=>{a?u.success(u.__plugin):u.fail(r)}),Hs[t].length=0})}class uO extends hg{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,k(()=>{this._init()})}_init(){this._adError="",cO({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(Ao.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Ao.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Ao.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Ao.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let fO=Bt(Ow,e=>new uO(e),Pw,Tw),gg=s.os.name==="Android"&&parseInt(s.os.version)<6,dO=gg?"slide-in-right":"pop-in",$c=300,pg=gg?"slide-out-right":"pop-out",hO="_www/__uniappview.html",gO="webviewId",pO="uniMPNativeEvent",vg;function mg(){return vg}function vO(e){let t=e.$.appContext;vg=ne.extend(t.app,{mountPage(n,r,a){let u=En.createVNode(n,r);u.appContext=t,u.__page_container__=a,En.render(u,a);let g=u.component.proxy;return g.__page_container__=a,g},unmountPage:n=>{let{__page_container__:r}=n;r&&(r.isUnmounted=!0,En.render(null,r))}})}let ts=[];function Uc(e){if(!e.$page.meta.isNVue)return ts.push(e);let n=ts.findIndex(r=>r.$page.id===e.$page.id);n>-1?ts.splice(n,1,e):ts.push(e)}function ac(e){return ts.find(t=>t.$page.id===e)}function Yu(){return ts}function mO(){let e=[];return ts.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function _O(){let e=ti();!e||sc(e)}function sc(e){let t=ts.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||mg().unmountPage(e),ts.splice(t,1))}function bO(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:P.defaultFontSize,viewport:P.viewport})}let EO=/^#[a-z0-9]{6}$/i;function _g(e){return e&&(EO.test(e)||e==="transparent")}function yO(e,t){let{backgroundColor:n}=t;!n||!_g(n)||(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}function wO(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=s.os.name==="iOS"?"appback":"none")}function SO(e,t){if(!t.enablePullDownRefresh)return;let n=Uo(ne.extend({},s.os.name==="Android"?CO:OO,t.pullToRefresh));e.pullToRefresh=AO(n,t)}function AO(e,t){let n=ba(e);if(!n)return e;let[r,a,u]=n;return(r||a||u)&&Mt.onLocaleChange(()=>{let g=s.webview.getWebviewById(t.id+"");if(!g)return;let b={support:!0};r&&(b.contentdown={caption:e.contentdown.caption}),a&&(b.contentover={caption:e.contentover.caption}),u&&(b.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:b})}),e}let CO={support:!0,style:"circle"},OO={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function TO(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let a={autoBackButton:r};Object.keys(n).forEach(u=>{let g=n[u];u==="backgroundColor"?a.backgroundColor=_g(g)?g:Q.BACKGROUND_COLOR:u==="titleImage"&&g?a.tags=IO(g):u==="buttons"&&ne.isArray(g)?a.buttons=g.map((b,V)=>(b.onclick=NO(V),b)):a[u]=g}),e.titleNView=PO(a,t)}function PO(e,t){let n=No(e);if(!n)return e;let[r,a]=n;return(r||a)&&Mt.onLocaleChange(()=>{let u=s.webview.getWebviewById(t.id+"");if(!u)return;let g={};r&&(g.titleText=e.titleText),a&&(g.searchInput={placeholder:e.searchInput.placeholder}),u.setStyle({titleNView:g})}),e}function IO(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function NO(e){return function(n){n.index=e,ln(Q.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function bg(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(a=>{kO.indexOf(a)===-1&&(r[a]=t[a])}),n.id!=="1"&&bO(r,t,e),wO(r,t),yO(r,t),TO(r,t),SO(r,t),r}let kO=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],Eg=2;function yg(){return Eg}function wg(){return Eg++}function Sg(e){return e}function Ag(e,t){let n=t?Q.stringifyQuery(t,Sg):"";return{path:e.slice(1),query:n&&n.slice(1)}}function RO(e,t,n){let r=n?Q.stringifyQuery(n,Sg):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function xO({path:e,query:t,routeOptions:n,webviewExtras:r}){let a=wg(),u=bg(e,n.meta,{id:a+""});return u.uniPageUrl=Ag(e,t),u.isTab=!!n.meta.isTabBar,s.webview.create("",String(a),u,ne.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r))}let qi;function Cg(e){qi=e}function BO(){return qi}function MO(){return(!qi||qi.__uniapp_route)&&(qi=s.webview.create(hO,String(wg()),{contentAdjust:!1})),qi}function DO(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Og(e){return P.realEntryPagePath&&e.$page.route===P.entryPagePath}function Tg(){P.entryPagePath=P.realEntryPagePath,delete P.realEntryPagePath,Mt.reLaunch({url:Q.addLeadingSlash(P.entryPagePath)})}function LO(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=In(),a=r[r.length-2];t=ic;let u=a&&a.$page.statusBarStyle;u&&es(u)}else if(n.type==="end"&&!n.result)es(t);else if(n.type==="end"&&n.result){let r=ti();_O(),es(),r&&Og(r)?Tg():ln(Q.ON_SHOW)}})}function FO(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=ft,a=(u,g)=>{if(t!==g)return;r(Ml,a);let b=ac(parseInt(g));b&&b.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Ml,a)})}function VO(e){let{emit:t}=ft,n=function({width:r,height:a}){let g={deviceOrientation:Math.abs(s.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(a)}};t(Q.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",Q.debounce(n,50,{setTimeout:k,clearTimeout:y}))}let Pg={pullToRefresh:Q.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function $O(e){let t=parseInt(e.id);Object.keys(Pg).forEach(n=>{let r=Pg[n];e.addEventListener(n,a=>{r===Q.ON_PULL_DOWN_REFRESH&&Bu(e),ln(t,r,a)})}),DO(e),VO(e),s.os.name==="iOS"&&(FO(e),LO(e))}function UO(e,t,n,r){let a=bg(t,r,e);a.uniPageUrl=Ag(t,n);let u=!!r.isTabBar;r.isNVue?a.isTab=u:a.debugRefresh=RO(u,t,n),a.locale=p.requireModule("plus").getLanguage(),e.setStyle(a)}function HO(e,t,n){(n.subNVues||[]).forEach(a=>{if(!a.path)return;let u=os(a.style||{}),g=a.type==="navigationBar",b=a.type==="popup";u.uniNView={path:a.path.replace(".nvue",".js"),defaultFontSize:P.defaultFontSize,viewport:P.viewport};let V={__uniapp_host:t,__uniapp_origin:u.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},O;g?(u.position="dock",u.dock="top",u.top="0",u.width="100%",u.height=String(Q.NAVBAR_HEIGHT+Du()),delete u.left,delete u.right,delete u.bottom,delete u.margin):b&&(u.position="absolute",gh(t)?O=oi:O=e,V.__uniapp_mask=u.mask||"rgba(0,0,0,0.5)",V.__uniapp_mask_id=O.id),delete u.mask;let D=s.webview.create("",a.id,u,V);if(b){O.popupSubNVueWebviews||(O.popupSubNVueWebviews={}),O.popupSubNVueWebviews[D.id]=D;let le=function(){O.setStyle({mask:"none"}),D.hide("auto")};O.addEventListener("maskClick",le);let ye=!1;D.addEventListener("show",()=>{ye||(s.key.removeEventListener("backbutton",sa),s.key.addEventListener("backbutton",le),ye=!0)}),D.addEventListener("hide",()=>{ye&&(s.key.removeEventListener("backbutton",le),s.key.addEventListener("backbutton",sa),ye=!1)}),D.addEventListener("close",()=>{delete O.popupSubNVueWebviews[D.id],ye&&(s.key.removeEventListener("backbutton",le),s.key.addEventListener("backbutton",sa),ye=!1)})}else e.append(D)})}function jO(e,t,n,r){(e.id==="1"||!r.isNVue)&&UO(e,t,n,r),HO(e,t,r),$O(e)}function Ig(e){return e.routeOptions.meta.isNVue?xO(e):yg()===2?s.webview.getLaunchWebview():BO()}function Ng(e,t){ft.once(Ml+"."+e,t)}let ga=!1;function kg(e,t,n){ga={path:e,nvue:or(e).isNVue,callback:t}}function Rg(e,t,n){sc(e),js(e.$getAppWebview(),t,n)}function Hc(e,t,n=!1){if(!n&&ga)return console.error(`Waiting to navigate to: ${ga.path}, do not operate continuously: ${e}.`);if(P.renderer==="native")return In().length===0?kg(e,t,"waitForReady"):t();let r=!qi||qi&&qi.__uniapp_route,a=qi&&!qi.loaded;r||a?kg(e,t,r?"waitForCreate":"waitForReady"):t(),a&&Ng(qi.id,jc)}function jc(){if(!ga)return;let{callback:e}=ga;return ga=!1,e()}function xg(){if(P.renderer==="native")return ga&&ga.nvue?jc():void 0;let e=MO();if(!!ga){if(ga.nvue)return jc();e.loaded?ga.callback():Ng(e.id,jc)}}function js(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function zc(e,t,n,r,a){typeof a=="undefined"&&(a=e.nvue?0:100);let u=function(){u._called||(u._called=!0,r&&r(),xg())};u._called=!1,k(()=>{let g=k(()=>{u()},n+150);e.show(t,n,()=>{u._called||y(g),u()})},a)}function zO(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(a=>a.id.indexOf(gO)===0)||n[0];r.canBack(({canBack:a})=>{a?r.back():t()})}let WO=we(LE,(e,{resolve:t,reject:n})=>{let r=ti();if(!r)return n("getCurrentPages is empty");if(ln(r,Q.ON_BACK_PRESS,{from:e.from}))return t();if(Mt.hideToast(),Mt.hideLoading(),r.$page.meta.isQuit)GO();else if(Og(r))Tg();else{let{delta:a,animationType:u,animationDuration:g}=e;YO(a,u,g)}return t()},VE,KE),Wc=0;function GO(){Cn(),Wc?Date.now()-Wc<2e3&&s.runtime.quit():(Wc=Date.now(),s.nativeUI.toast(pe().t("uni.app.quit")),k(()=>{Wc=0},2e3))}function YO(e,t,n){let r=In(),a=r.length,u=r[a-1];e>1&&r.slice(a-e,a-1).reverse().forEach(V=>{js(s.webview.getWebviewById(V.$page.id+""),"none",0)});let g=function(V){t?js(V,t,n||$c):u.$page.openType==="redirectTo"?js(V,pg,$c):js(V,"auto"),r.slice(a-e,a).forEach(O=>sc(O)),es(),ln(Q.ON_SHOW)},b=s.webview.getWebviewById(u.$page.id+"");if(!u.__uniapp_webview)return g(b);zO(b,()=>{g(b)})}class qO extends Q.UniNode{constructor(t,n,r=!1){super(Q.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[Q.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[Q.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!ne.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(a=>{let u=[this.addDict(a)],g=t[a];n?u.push(this.addDict(g)):u.push(g),r.push(u)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===Q.ON_PAGE_SCROLL||t===Q.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[Q.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return ZO(this,t.nodeId,n),t}onInsertBefore(t,n,r){return XO(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return QO(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&eT(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,a){t.parentNode&&tT(this,t.nodeId,n,r,a)}onRemoveEvent(t,n){t.parentNode&&nT(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&iT(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&oT(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Mg(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Mg(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case Q.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case Q.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==Q.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,En.queuePostFlushCb(this._update))}}restore(){this.clear(),this.push(this.createAction),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([BC,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){ft.publishHandler(Xh,t,this.pageId)}fireEvent(t,n){let r=Bg(t,this);r&&r.dispatchEvent(n)}}function KO(e){let t=ac(e);return t?t.__page_container__:null}function qu(e,t,n){if(typeof n=="number"&&(n=KO(n)),n[e]===t)return n;let{childNodes:r}=n;for(let a=0;a<r.length;a++){let u=qu(e,t,r[a]);if(u)return u}return null}function Bg(e,t){return qu("nodeId",e,t)}function JO(e,t){return qu("nodeName",e.toUpperCase(),t)}function ZO(e,t,n){e.push([Q.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function XO(e,t,n,r){let a=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([Q.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(a).length?a:void 0)}function QO(e,t){e.push([Q.ACTION_TYPE_REMOVE,t])}function eT(e,t,n,r){e.push([Q.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function tT(e,t,n,r,a){e.push([Q.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),a])}function nT(e,t,n){e.push([Q.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function rT(e,t,n){return t==="style"&&ne.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function iT(e,t,n,r){e.push([Q.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),rT(e,n,r)])}function oT(e,t,n){e.push([Q.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Mg(e,t,n){e.push([Q.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function aT(e,t,n){return new qO(e,t,n)}function Dg(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:a,__pagePath:u,__pageQuery:g,__pageInstance:b}}=r,O=En.getCurrentInstance().proxy;if(lt(O,b),Uc(Lg(a,O,b)),En.onMounted(()=>{En.nextTick(()=>{ln(O,Q.ON_READY)})}),En.onBeforeUnmount(()=>{ln(O,Q.ON_UNLOAD)}),t)return t(g,r)},e}function Lg(e,t,n){let r=()=>s.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new Q.EventChannel(e)),n.eventChannel),t}function sT(e){return ne.isFunction(e)}let Fg=new Map;function lT(e,t){Fg.set(e,Q.once(uT(t)))}function cT(e,t,n,r,a){let u=aT(e,a,!0),g=mg(),b=Fg.get(t)(),V=O=>g.mountPage(O,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},u);return ne.isPromise(b)?b.then(O=>V(O)):V(b)}function uT(e){return()=>sT(e)?e().then(t=>Dg(t)):Dg(e)}let Vg=!1;function $g(){if(Vg)return;Vg=!0;let e,t;if(p.requireModule("plus").getRedirectInfo){let{path:u,query:g,referrerInfo:b}=Pa();u&&(e=u,t=g),P.referrerInfo=b}else{let u=s.runtime.arguments;if(!u)return;try{let g=JSON.parse(u);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===P.entryPagePath){t&&(P.entryPageQuery=t);return}let r=Q.addLeadingSlash(e),a=Hn(r);!a||(a.meta.isTabBar||(P.realEntryPagePath=P.realEntryPagePath||P.entryPagePath),P.entryPagePath=e,P.entryPageQuery=t)}function Ug(e,t){let n=JSON.parse(JSON.stringify(Hn(e)));return n.meta=Ni(n.meta),t!=="preloadPage"&&!P.realEntryPagePath&&(t==="reLaunch"||In().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let Da={};function fT(e){let t=Object.keys(Da).find(n=>Da[n].id===e.id);t&&delete Da[t]}function dT({url:e}){let t=Da[e];return t&&(t.__page__&&In().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete Da[e]),t}function hT({url:e,path:t,query:n}){if(!Da[e]){let r=Ug(t,"preloadPage");Da[e]=Ig({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return Da[e]}function lc({url:e,path:t,query:n,openType:r,webview:a,nvuePageVm:u,eventChannel:g}){if(a&&$g(),Da[e]){a=Da[e];let ye=a;if(ye.__page__)if(In().find(ke=>ke===ye.__page__))a=void 0;else return g&&(ye.__page__.$page.eventChannel=g),Uc(ye.__page__),ye}let b=Ug(t,r);a?(a=s.webview.getWebviewById(a.id),a.nvue=b.meta.isNVue):a=Ig({path:t,routeOptions:b,query:n}),b.meta.id=parseInt(a.id),!!b.meta.isTabBar&&oi.append(a),jO(a,t,n,b.meta);let O=t.slice(1);a.__uniapp_route=O;let D=Sa(r,e,n,b.meta,g),le=parseInt(a.id);return a.nvue?u?pT(le,u,D):vT(le,a,D):cT(le,O,n,D,gT(b)),a}function gT({meta:e}){let t=Du(),{platform:n,pixelRatio:r,windowWidth:a}=Fo();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:a,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:ne.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:Q.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+Q.NAVBAR_HEIGHT:0,windowBottom:oi.indexOf(e.route)>=0&&oi.cover?oi.height:0}}function pT(e,t,n){lt(t,n),Uc(Lg(e,t,n)),e===1&&(P.splashscreen&&P.splashscreen.autoclose&&!P.splashscreen.alwaysShowBeforeRender&&s.navigator.closeSplashscreen(),P.onReady(function(){xg()}))}function vT(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new Q.EventChannel(e)),n.eventChannel},__setup(a,u){a.$getAppWebview=()=>t,a.getOpenerEventChannel=u.getOpenerEventChannel,lt(a,n),t.__preload__&&(t.__page__=a);let g=Yu(),b=g.findIndex(V=>V===u);b>-1&&g.splice(b,1,a)}};lt(r,n),t.__preload__?t.__page__=r:Uc(r)}let Hg=(e,{resolve:t,reject:n})=>{let{url:r,events:a,animationType:u,animationDuration:g}=e,{path:b,query:V}=Q.parseUrl(r),[O,D]=bT(b,u,g);Hc(b,()=>{_T({url:r,path:b,query:V,events:a,aniType:O,aniDuration:D}).then(t).catch(n)},e.openType==="appLaunch")},mT=we(Tu,Hg,FE,WE);function _T({url:e,path:t,query:n,events:r,aniType:a,aniDuration:u}){ln(Q.ON_HIDE);let g=new Q.EventChannel(yg()+1,r);return new Promise(b=>{zc(lc({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),a,u,()=>{b({eventChannel:g})}),es()})}function bT(e,t,n){let{globalStyle:r}=P,a=or(e);return[t||a.animationType||r.animationType||dO,n||a.animationDuration||r.animationDuration||$c]}let ET=we(Pu,({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=Q.parseUrl(e);Hc(r,()=>{yT({url:e,path:r,query:a}).then(t).catch(n)})},$E,GE);function yT({url:e,path:t,query:n}){let r=ti();return r&&sc(r),new Promise(a=>{zc(lc({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let u=r.$getAppWebview();u.__preload__&&fT(u),u.close("none")}a(void 0)}),es()})}let wT=({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=Q.parseUrl(e);Hc(r,()=>{ST({url:e,path:r,query:a}).then(t).catch(n)})};function ST({url:e,path:t,query:n}){return new Promise(r=>{let a=Yu().slice(0);Ue.find(g=>g.path===t).meta.isTabBar&&oi.switchTab(t.slice(1)),zc(lc({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{a.forEach(g=>Rg(g,"none")),r(void 0)}),es()})}let AT=we(ah,wT,UE,YE),jg=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:a,query:u}=Q.parseUrl(r);Hc(a,()=>{OT({url:r,path:a,query:u}).then(t).catch(n)},e.openType==="appLaunch")},CT=we(Oc,jg,HE,qE);function OT({url:e,path:t,query:n}){oi.switchTab(t.slice(1));let r=In(),a=r.length,u=!1,g=!1,b;a>=1&&(b=r[a-1],b&&!b.$.__isTabBar?(g=!0,r.reverse().forEach(O=>{!O.$.__isTabBar&&O!==b&&Rg(O,"none")}),sc(b),k(()=>{b.$page.openType==="redirectTo"?js(b.$getAppWebview(),pg,$c):js(b.$getAppWebview(),"auto")},100)):u=!0);let V;return Yu().forEach(O=>{Q.addLeadingSlash(O.route)===t?(O.$.__isActive||(g=!0),O.$.__isActive=!0,V=O):O.$.__isTabBar&&(O.$.__isActive=!1)}),b===V&&(u=!1),b&&u&&ln(b,Q.ON_HIDE),new Promise(O=>{if(V){let D=V.$getAppWebview();D.show("none"),g&&!D.__preload__&&ln(V,Q.ON_SHOW),es(),O(void 0)}else zc(lc({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{es(),O(void 0)},70)})}let TT=Bt(sh,({url:e})=>{let t=dT({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},zE),PT=we(Iu,({url:e},{resolve:t,reject:n})=>{let r=e.split("?"),a=r[0],u=Q.parseQuery(r[1]||""),g=hT({url:e,path:a,query:u});t({id:g.id,url:e,errMsg:"preloadPage:ok"})},jE);var IT={__proto__:null,sendHostEvent:ug,navigateToMiniProgram:eO,onHostEventReceive:dg,onNativeEventReceive:tO,navigateTo:mT,reLaunch:AT,switchTab:CT,upx2px:sm,addInterceptor:hm,removeInterceptor:gm,interceptors:pm,arrayBufferToBase64:Qn,base64ToArrayBuffer:Nn,createIntersectionObserver:s_,createMediaQueryObserver:c_,createSelectorQuery:p_,createVideoContext:Dm,createMapContext:Fm,createAnimation:y_,onWindowResize:C_,offWindowResize:O_,onTabBarMidButtonTap:w_,createCanvasContext:Qm,canvasGetImageData:e_,canvasPutImageData:t_,canvasToTempFilePath:n_,getSelectedTextRange:k_,getLocale:Cu,setLocale:I_,$on:Sm,$off:Cm,$once:Am,$emit:Om,onCreateVueApp:Q.onCreateVueApp,onLocaleChange:P_,setPageMeta:N_,getEnterOptionsSync:j_,getLaunchOptionsSync:z_,getPushClientid:G_,onPushMessage:Y_,offPushMessage:q_,onAppHide:U_,onAppShow:V_,onError:L_,onPageNotFound:M_,onUnhandledRejection:x_,offAppHide:H_,offAppShow:$_,offError:F_,offPageNotFound:D_,offUnhandledRejection:B_,invokePushCallback:W_,setStorageSync:Nw,setStorage:kw,getStorageSync:Rw,getStorage:xw,removeStorageSync:Bw,removeStorage:Mw,clearStorageSync:Dw,clearStorage:Lw,getStorageInfoSync:ph,getStorageInfo:Fw,getFileInfo:Vw,saveFile:jw,getSavedFileList:Gw,getSavedFileInfo:Yw,removeSavedFile:qw,openDocument:Kw,canIUse:Jw,getDeviceInfo:wh,getAppBaseInfo:Sh,getSystemInfoSync:Ah,getSystemInfo:oS,onCompassChange:aS,offCompassChange:sS,startCompass:Ch,stopCompass:Oh,vibrateShort:lS,vibrateLong:cS,onAccelerometerChange:uS,offAccelerometerChange:fS,startAccelerometer:Th,stopAccelerometer:Ph,onBluetoothDeviceFound:dS,onBluetoothAdapterStateChange:hS,onBLEConnectionStateChange:gS,onBLECharacteristicValueChange:pS,openBluetoothAdapter:vS,closeBluetoothAdapter:mS,getBluetoothAdapterState:_S,startBluetoothDevicesDiscovery:bS,stopBluetoothDevicesDiscovery:ES,getBluetoothDevices:yS,getConnectedBluetoothDevices:wS,createBLEConnection:SS,closeBLEConnection:AS,getBLEDeviceServices:CS,getBLEDeviceCharacteristics:OS,notifyBLECharacteristicValueChange:TS,readBLECharacteristicValue:PS,writeBLECharacteristicValue:IS,setBLEMTU:NS,getBLEDeviceRSSI:kS,onBeaconUpdate:RS,onBeaconServiceChange:xS,getBeacons:BS,startBeaconDiscovery:MS,stopBeaconDiscovery:DS,makePhoneCall:LS,addPhoneContact:$S,getClipboardData:US,setClipboardData:HS,onNetworkStatusChange:jS,offNetworkStatusChange:zS,getNetworkType:Rh,checkIsSupportSoterAuthentication:WS,checkIsSoterEnrolledInDevice:GS,startSoterAuthentication:YS,scanCode:qS,onThemeChange:KS,getScreenBrightness:JS,setScreenBrightness:ZS,setKeepScreenOn:XS,getWindowInfo:yh,getImageInfo:QS,getVideoInfo:eA,previewImage:tA,closePreviewImage:nA,getRecorderManager:oA,saveVideoToPhotosAlbum:aA,saveImageToPhotosAlbum:sA,compressImage:lA,compressVideo:cA,chooseImage:fA,chooseVideo:dA,showKeyboard:hA,hideKeyboard:gA,onKeyboardHeightChange:pA,offKeyboardHeightChange:vA,downloadFile:_A,request:wA,configMTLS:SA,connectSocket:TA,sendSocketMessage:PA,closeSocket:IA,onSocketOpen:NA,onSocketError:kA,onSocketMessage:RA,onSocketClose:xA,uploadFile:MA,createInnerAudioContext:zA,getBackgroundAudioManager:tC,createLivePusherContext:iC,getLocation:sC,chooseLocation:lC,openLocation:cC,showModal:uC,showActionSheet:fC,showLoading:dC,showToast:hC,hideToast:gC,hideLoading:pC,startPullDownRefresh:vC,stopPullDownRefresh:mC,loadFontFace:_C,pageScrollTo:bC,setNavigationBarTitle:EC,showNavigationBarLoading:yC,hideNavigationBarLoading:wC,setNavigationBarColor:AC,setTabBarBadge:CC,setTabBarItem:OC,setTabBarStyle:TC,hideTabBar:PC,showTabBar:IC,showTabBarRedDot:NC,removeTabBarBadge:kC,hideTabBarRedDot:RC,getSubNVueById:FC,restoreGlobal:$C,requireGlobal:UC,getProvider:HC,login:rg,getUserInfo:jC,getUserProfile:zC,preLogin:og,closeAuthView:sg,getCheckBoxState:lg,getUniverifyManager:YC,registerRuntime:qC,share:ZC,shareWithSystem:XC,requestPayment:QC,requireNativePlugin:Mo,sendNativeEvent:Ih,createRewardedVideoAd:iO,createFullScreenVideoAd:aO,createInterstitialAd:lO,createInteractiveAd:fO,navigateBack:WO,redirectTo:ET,unPreloadPage:TT,preloadPage:PT};let NT=ne.extend(ie,{publishHandler:kT});function kT(e,t,n){t=JSON.stringify(t),ne.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(a=>{let u=String(a),g=s.webview.getWebviewById(u);g&&g.evalJS(r.replace("__PAGE_ID__",u))})}function RT(){let{tabBar:e}=P;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=P;e.selectedIndex=0;let r=e.list.findIndex(a=>a.pagePath===n);oi.init(e,(a,u)=>{Mt.switchTab({url:Q.addLeadingSlash(a.pagePath),openType:"switchTab",from:"tabBar",success(){ln(Q.ON_TAB_ITEM_TAP,{index:u,text:a.text,pagePath:a.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&oi.switchTab(n))}function xT(){let e=s.globalEvent,t=p.requireModule("globalEvent"),n=ft.emit;p.config.preload?s.key.addEventListener(as,sa):e.addEventListener("splashclosed",()=>{s.key.addEventListener(as,sa)}),e.addEventListener("pause",()=>{n(Q.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let a=Pa();a&&a.userAction&&Wi(a),n(Q.ON_APP_ENTER_FOREGROUND,Pr())}),t.addEventListener("uistylechange",function(a){let u={theme:a.uistyle};n(Q.ON_THEME_CHANGE,u)});let r=0;e.addEventListener("KeyboardHeightChange",function(a){r!==a.height&&(r=a.height,n(Q.ON_KEYBOARD_HEIGHT_CHANGE,{height:r}))}),t.addEventListener(pO,function(a){a&&a.event&&nO(a.event,a.data)}),e.addEventListener("plusMessage",zg),e.addEventListener("WebviewPostMessage",zg)}function zg({data:e}){e&&e.type&&ft.subscribeHandler("plusMessage."+e.type,e.args)}function Wg(e,t,n=!1){ft.subscribe("plusMessage."+e,t,n)}function BT(e){R_(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=P,a=Ha({path:t,query:n,referrerInfo:r});ln(e,Q.ON_LAUNCH,a),ln(e,Q.ON_SHOW,a);let u=p.requireModule("plus").getAppState;(u&&Number(u()))===2&&ln(e,Q.ON_HIDE,a)}function Gg(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?s.io.convertLocalFileSystemURL(e):e}function MT(){let e=Gg(Ta),t=Gg(vi),n=t.split("/");n.pop();let r=n.join("/");s.io.resolveLocalFileSystemURL(s.io.convertAbsoluteFileSystem(r),a=>{a.createReader().readEntries(function(g){let b=g;b&&b.length&&b.forEach(function(V){V.isDirectory&&V.fullPath.indexOf(e)===0&&V.fullPath.indexOf(t)!==0&&V.removeRecursively()})})})}function DT(e,t,n){n.fireEvent(e,t)}function LT(e,t){let n=ac(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(a=>{switch(a[0]){case Q.ACTION_TYPE_EVENT:DT(a[1],a[2],r);break}})}let Yg={};function FT(e,t,n){let{adpid:r,width:a}=e,u=r+"-"+a,g=Yg[u];if(g&&g.length>0){t(g.splice(0,1)[0]);return}s.ad.getAds(e,b=>{let V=b.ads;t(V.splice(0,1)[0]),Yg[u]=g?g.concat(V):V},b=>{n({errCode:b.code,errMsg:b.message})})}function VT(){K("getAdData",(e,t)=>{FT(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let $T=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function UT(){$T.forEach(e=>{K(e,t=>{Mt[e](ne.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let qg=!1;function HT(e,t){let n=t==="1";if(!(n&&qg)){if(n?(qg=!0,Cg(s.webview.getLaunchWebview())):qi||Cg(s.webview.getWebviewById(t)),qi.id!==t)return console.error(`webviewReady[${qi.id}][${t}] not match`);qi.loaded=!0,ft.emit(Ml+"."+t),n&&jT()}}function jT(){let{autoclose:e,alwaysShowBeforeRender:t}=P.splashscreen;e&&!t&&s.navigator.closeSplashscreen();let n=Q.addLeadingSlash(P.entryPagePath),r=Hn(n);if(!r.meta.isNVue){let a={url:n+(P.entryPageQuery||""),openType:"appLaunch"},u={resolve(){},reject(){}};return r.meta.isTabBar?jg(a,u):Hg(a,u)}}function zT(e,t){let n=ac(parseInt(t));n&&(n.__uniapp_webview=!0)}function WT(e,t){let n=ac(parseInt(t));n&&delete n.__uniapp_webview}let GT=({name:e,arg:t},n)=>{e==="postMessage"?YT(n[0],t):Mt[e](ne.extend(t,{fail(r){console.error(r.errMsg)}}))};function YT(e,t){let n=JO("web-view",parseInt(e));n&&n.dispatchEvent(Q.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function qT({nodeId:e,ownerId:t,method:n,args:r},a){let u=Bg(e,parseInt(a));if(!u)return;let g=KT(t,u.__vueParentComponent);!g||!g[n]||g[n](r)}function KT(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function JT(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=ft;if(Wg("subscribeHandler",({type:r,data:a,pageId:u})=>{t(r,a,u)}),Wg(Q.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:a})=>{GT(r,a)}),P.renderer!=="native"){e(Ml,HT),e(Xh,LT),U(),VT(),UT(),e(MC,zT),e(DC,WT),e(Q.ON_WXS_INVOKE_CALL_METHOD,qT);let r=Hn(Q.addLeadingSlash(P.entryPagePath));r&&!r.meta.isNVue&&n(Ml,{},1)}}let Dl,Ku={globalData:{}};function ZT({allowDefault:e=!1}={}){if(Dl)return Dl;if(e)return Ku;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function XT(e){if(Mt.Vuex&&e.$store){let{useStore:t}=Mt.Vuex;Mt.Vuex.useStore=n=>n?t(n):e.$store}vO(e),Dl=e,ut(Dl),ne.extend(Dl,Ku),cn(Dl,Ku.globalData),jt(),$g(),RT(),xT(),JT(),BT(e),k(MT,1e4),P.ready=!0}var QT={uni:IT,getApp:ZT,getCurrentPages:mO,__definePage:lT,__registerApp:XT,__registerPage:lc,UniServiceJSBridge:NT};return QT}(Rt,vn,A);x=x.default||x;let Mt=x.uni,jn=x.getApp,In=x.getCurrentPages,ft=x.UniServiceJSBridge;return x}var Np=M1(F1);var vf,mf,_f,is,bf,Ef,yf;function kp(){return is?{__definePage:vf,__registerApp:mf,__registerPage:_f,uni:is,wx:is,getApp:bf,getCurrentPages:Ef,UniServiceJSBridge:yf}:{}}function Rp(p){let{weex:s,plus:_,VueShared:A}=p;return is||({__definePage:vf,__registerApp:mf,__registerPage:_f,uni:is,getApp:bf,getCurrentPages:Ef,UniServiceJSBridge:yf}=Ip(s,_,p),is.VueShared=A,Xg(is)),{__definePage:vf,__registerApp:mf,__registerPage:_f,plus:_,uni:is,wx:is,getApp:bf,getCurrentPages:Ef,UniServiceJSBridge:yf}}function xp(p,s){let{__uniConfig:_}=s;if(!_)return;let A=s.weex;A.document.__$automator__=!!_.automator;let k=_.renderer!=="native"&&A.config.bundleUrl.indexOf("app-service.js")!==-1;if(Kr(s,kp()),k?Np(s):(np(p,s),wp(s.Vue.parseClassStyles)),Kr(s,Rp(s)),A.config.plus_web_id==="1"){let P=A.requireModule("plus");P.setDefaultFontSize&&P.setDefaultFontSize(Math.round(s.plus.screen.resolutionWidth/20))}let{scale:y,deviceWidth:I,platform:f}=global.WXEnvironment;if(f.toLowerCase()==="ios"){let P=Math.ceil(I/y);A.requireModule("meta").setViewport({width:P,roundOffDeviation:!1})}}var Ks=class extends qs{constructor(s){super();this.nodeType=8;this.type="comment";this.value="";this.value=s}toString(){return"<!-- "+this.value+" -->"}};function Co(p,s=[]){return{module:"dom",method:p,args:s}}var Hl=class{constructor(s,_){this.id=s,this.batched=!1,this.updates=[],Fn(_)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:_}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(s){return this.handler([Co("createFinish")],s)}updateFinish(s){return this.handler([Co("updateFinish")],s)}refreshFinish(s){return this.handler([Co("refreshFinish")],s)}createBody(s){let _=s.toJSON(),A=_.children;delete _.children;let k=[Co("createBody",[_])];return A&&k.push.apply(k,A.map(y=>Co("addElement",[_.ref,y,-1]))),this.addActions(k)}addElement(s,_,A){return A>=0||(A=-1),this.addActions(Co("addElement",[_,s.toJSON(),A]))}removeElement(s){if(bi(s)){let _=s.map(A=>Co("removeElement",[A]));return this.addActions(_)}return this.addActions(Co("removeElement",[s]))}moveElement(s,_,A){return this.addActions(Co("moveElement",[s,_,A]))}setAttr(s,_,A){return this.addActions(Co("updateAttrs",[s,{[_]:A}]))}setStyle(s,_,A){return this.addActions(Co("updateStyle",[s,{[_]:A}]))}setStyles(s,_){return this.addActions(Co("updateStyle",[s,_]))}addEvent(s,_){return this.addActions(Co("addEvent",[s,_]))}removeEvent(s,_){return this.addActions(Co("removeEvent",[s,_]))}handler(s,_){return _&&_()}addActions(s){let _=this.updates,A=this.handler;if(bi(s)||(s=[s]),this.batched)_.push.apply(_,s);else return A(s)}};var wf={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function Bp(p,s){let _=s||global.callNative;return Fn(_)||console.error("[JS Runtime] no default handler"),function(k){bi(k)||(k=[k]);for(let y=0;y<k.length;y++){let I=$1(p,k[y],_);if(I===-1)return I}}}function V1(p,s){return p==="dom"&&wf[s]&&Fn(global[wf[s]])}function $1(p,s,_){let{module:A,method:k,args:y}=s;return V1(A,k)?global[wf[k]](p,...y,"-1"):_(p,[s],"-1")}var lu=class extends Ki{constructor(s){super();this.value=s,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Mp={slider:{change:function(p){return{index:p.index,source:p.source}},scroll:function(p){return{offsetXRatio:p.offsetXRatio,offsetYRatio:p.offsetYRatio,drag:p.drag}}},"scroll-view":{scrollend:function(p){return{contentOffset:p.contentOffset}}}};function Dp(p){let{attr:s,offsetLeft:_,offsetTop:A}=p,k={};return s&&Object.keys(s).forEach(y=>{y.indexOf("data-")===0&&(k[y.replace("data-","")]=s[y])}),{id:s&&s.id||"",dataset:k,offsetLeft:_||0,offsetTop:A||0}}var U1=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],H1=["viewappear","viewdisappear"],j1={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function Lp(p,s){let _=p.type;if(H1.indexOf(_)!==-1)return p;let A=p.currentTarget,k=A.type.replace("u-","");if(U1.indexOf(k)!==-1)return p;let{timestamp:y,target:I}=p;if(!s){let Ue=Mp[k];Ue?Fn(Ue[_])?s=Ue[_](p):s=p.detail||{}:s=p.detail||{}}let f={type:_,timeStamp:y,target:Dp(I),currentTarget:Dp(A),detail:s,touches:_==="touchend"||_==="panend"?[]:p.changedTouches,changedTouches:p.changedTouches};p.componentId&&(f.componentId=p.componentId);let P=j1[_];return P&&P.forEach(Ue=>{zs(p,Ue)&&(f[Ue]=p[Ue])}),f}function z1(p,s){let _=s.attrs||{};for(let k in _)p.setAttr(k,_[k],!0);let A=s.style||{};for(let k in A)p.setStyle(k,A[k],!0)}var Do=class{constructor(s,_="",A){s=s?s.toString():"",this.id=s,this.URL=_,gp(s,this),this.nodeMap={};let k=Do.Listener||Hl;this.listener=new k(s,A||Bp(s,Do.handler)),this.taskCenter=new Ul(s,A?(y,I)=>A(I):Do.handler),this.createDocumentElement()}getRef(s){return this.nodeMap[s]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let s=new Ki("document");s.docId=this.id,s.ownerDocument=this,s.role="documentElement",s.ref="_documentElement",this.nodeMap._documentElement=s,this.documentElement=s,Object.defineProperty(s,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:_=>{tf(this,_)}}),Object.defineProperty(s,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(_,A)=>{tf(this,_,A)}}),Yn("debug")&&xi(`Create document element (id: "${s.docId}", ref: "${s.ref}")`)}return this.documentElement}createBody(s,_){if(!this.body){let A=new Ki(s,_);nf(this,A),Yn("debug")&&xi(`[createBody](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`)}return this.body}createElement(s,_){let A=new Ki(s,_);return Yn("debug")&&xi(`[createElement](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`),A}createComment(s){return new Ks(s)}createText(s){return new lu(s)}fireEvent(s,_,A,k,y){if(!s)return;A=A||{},A.type=A.type||_,A.target=s,A.currentTarget=s,A.timestamp=Date.now(),k&&z1(s,k);let I,f=this.getRef("_root");if(f&&f.attr){let P=f.attr.bubble;I=P==="true"||P===!0}return A=Lp(A),s.fireEvent(_,A,I,y)}destroy(){Yn("debug")&&xi(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,pp(this.id)}};Do.handler=null;var Fp={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function Vp(p,s,_){var A=[s];function k(I){var f=new RegExp;return f.compile(I.replace(/<([^>]+)>/g,function(P,Ue){return p[Ue]?(A.push(Ue),p[Ue]instanceof RegExp?"("+p[Ue].source+")":"("+k(p[Ue]).source+")"):""}),_),f}var y=k(p[s]);this.exec=function(I){var f=y.exec(I);if(f==null)return null;for(var P=new String(f[0]),Ue=0;Ue<A.length;Ue++)f[Ue]&&(P[A[Ue]]=f[Ue]);return P},Object.defineProperty(this,"lastIndex",{get:function(){return y.lastIndex},set:function(I){y.lastIndex=I}})}function W1(){var p=new Vp(Fp,"InputElementDiv","g"),s=new Vp(Fp,"InputElementRegExp","g"),_;Object.defineProperty(this,"source",{get:function(){return _},set:function(A){_=A,p.lastIndex=0,s.lastIndex=0}}),this.reset=function(){p.lastIndex=0,s.lastIndex=0},this.getNextToken=function(A){var k=p.lastIndex,y;A?y=p:y=s;var I=y.exec(_);if(I&&y.lastIndex-k>I.length)throw new SyntaxError("Unexpected token ILLEGAL");return p.lastIndex=y.lastIndex,s.lastIndex=y.lastIndex,I}}var $p={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function gc(p,s){this.name=p,this.token=s,this.childNodes=[],this.toString=function(_){if(_||(_=""),this.childNodes.length==1)return this.childNodes[0].toString(_);for(var A=_+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,k=0;k<this.childNodes.length;k++)A+=this.childNodes[k].toString(_+"    ");return A}}function G1(){var p,s={Program:"$"},_={};function A(f){_[JSON.stringify(f)]=f;for(var P=Object.getOwnPropertyNames(f);P.length;){var Ue=P.shift();!$p[Ue]||$p[Ue].forEach(function(vn){f[vn[0]]||P.push(vn[0]);var x=f,Mt=null;vn.forEach(function(jn){x[jn]||(x[jn]={}),Mt=x,x=x[jn]}),f[Ue].$div&&(x.$div=!0),x.$reduce=Ue,x.$count=vn.length})}for(var Rt in f)typeof f[Rt]!="object"||Rt.charAt(0)=="$"||f[Rt].$closure||(_[JSON.stringify(f[Rt])]?f[Rt]=_[JSON.stringify(f[Rt])]:A(f[Rt]));f.$closure=!0}A(s);var k=[],y=[s],I=s;this.insertSymbol=function(P,Ue){for(;!I[P.name]&&I.$reduce;){for(var Rt=I.$count,vn=new gc(I.$reduce);Rt--;)vn.childNodes.push(k.pop()),y.pop();I=y[y.length-1],this.insertSymbol(vn)}if(I=I[P.name],k.push(P),y.push(I),!I)throw new Error;return I.$div},this.reset=function(){I=s,k=[],y=[s]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;I.$reduce;){for(var f=I.$count,P=new gc(I.$reduce);f--;)P.childNodes.push(k.pop()),y.pop();I=y[y.length-1],this.insertSymbol(P)}if(k.length>0&&I[";"])return this.insertSymbol(new gc(";",";")),this.grammarTree;if(k.length!=1||k[0].name!="Program")throw new Error}catch(Ue){throw new SyntaxError("Unexpected end of input")}return k[0]}})}function Y1(){this.lexicalParser=new W1,this.syntacticalParser=new G1;var p=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],s={};p.forEach(function(_){Object.defineProperty(s,_,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(_,A){var k,y=!1;this.lexicalParser.source=_;for(var I=!1;k=this.lexicalParser.getNextToken(I);){A&&A(k);try{if(Object.getOwnPropertyNames(k).some(f=>s.hasOwnProperty(f)?(I=this.syntacticalParser.insertSymbol(new gc(f,k),y),y=!1,!0):!1))continue;(k.Keyword||k.Punctuator||k.DivPunctuator)&&s.hasOwnProperty(k.toString())&&(I=this.syntacticalParser.insertSymbol(new gc(k.toString(),k),y))}catch(f){throw new SyntaxError("Unexpected token "+k)}}return this.syntacticalParser.grammarTree}}var Up=new Y1;function q1(p){Up.reset(),this.tree=Up.parse(p),this.paths=[];var s=Object.create(null),_=this,A=Object.create(null);this.isSimple,this.isConst,y(this.tree),k(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(P){for(var Ue=s,Rt=0;Rt<P.length-1;Rt++)Ue[P[Rt]]||(Ue[P[Rt]]=Object.create(null)),Ue=Ue[P[Rt]];return{isCompleted:function(){for(var vn in A)if(!A[vn])return!1;return!0},set:function(vn){if(A[P.join(".")]||(A[P.join(".")]=!0),Ue[P[Rt]]=vn,this.isCompleted())return _.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(p)}.call(s)}catch(P){}};function k(P){for(var Ue=P;Ue.childNodes.length<=1&&Ue.name!=="MemberExpression";)Ue=Ue.childNodes[0];Ue.name==="MemberExpression"?_.isSimple=!0:_.isSimple=!1}function y(P){if(P.name==="CallExpression"&&P.childNodes[P.childNodes.length-1].name!=="CallExpression"){var Ue=I(P.childNodes[1]);y(P.childNodes[0])}else if(P.name==="NewExpression"&&P.childNodes.length===1)var Ue=I(P.childNodes[0]);else if(P.name==="MemberExpression"&&P.childNodes.length===1)var Ue=I(P);else for(var Rt=0;Rt<P.childNodes.length;Rt++)y(P.childNodes[Rt])}function I(P){if(P.childNodes[0].name==="IdentifierName"){var Ue=I(P.childNodes[2]);return Ue&&(Ue=Ue.concat(P.childNodes[0].childNodes[0].token.toString())),f(Ue),Ue}else if(P.childNodes[0].name==="PrimaryExpression")if(P.childNodes[0].childNodes[0].name==="Identifier"){var Ue=[P.childNodes[0].childNodes[0].token.toString()];return f(Ue),Ue}else return null;else{if(P.childNodes[0].name==="]")return I(P.childNodes[3]),y(P.childNodes[1]),null;if(P.childNodes[0].name==="Arguments")return y(P.childNodes[0]),y(P.childNodes[1]),null;for(var Rt=0;Rt<P.childNodes.length;Rt++)y(P.childNodes[Rt])}}function f(P){for(var Ue=s,Rt=0;Rt<P.length-1;Rt++)Ue[P[Rt]]||(Ue[P[Rt]]=Object.create(null)),Ue=Ue[P[Rt]];_.paths.push(P),A[P.join(".")]=!1}}function Js(p){var s=p.childNodes.slice().reverse(),_=s.filter(P=>!P.token||!P.token.Punctuator);if(p.name==="UnaryExpression"&&s.length===2&&s[0].name==="-"&&_.length===1){var A=Js(_[0]);return A.value=-A.value,A}if(p.name==="Arguments"){for(var k=[],y=_[0];y;)y.childNodes.length===3&&(k.unshift(y.childNodes[0]),y=y.childNodes[2]),y.childNodes.length===1&&(k.unshift(y.childNodes[0]),y=null);return{type:"Arguments",children:k.map(P=>Js(P))}}if(_&&_.length===1){var A=Js(_[0]);return A}if(p.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(P=>p.token[P])){var I=Object.keys(p.token).filter(P=>P.match(/Literal/)||P.match(/Identifier/))[0],f={NullLiteral:null,BooleanLiteral:Boolean(p.token),NumericLiteral:Number(p.token),StringLiteral:p.token,Identifier:p.token}[I];return{type:I,value:f}}return p.name==="CallExpression"?{type:"CallExpression",children:[Js(s[0]),Js(s[1])]}:{type:s.filter(P=>P.token&&P.token.Punctuator)[0].name,children:s.filter(P=>!P.token||!P.token.Punctuator).map(P=>Js(P))}}function Hp(p){var s=new q1(p);return JSON.stringify(Js(s.tree),null)}function K1(p,s){return s==="bind"&&(p==="bindingx"||p==="binding")}function jp(p){if(!p)return;try{p=JSON.parse(p)}catch(_){}let s={};if(Ei(p)?s.origin=p:p&&(s.origin=p.origin,s.transformed=p.transformed),!(!s.transformed&&!s.origin))return s.transformed=s.transformed||Hp(s.origin),s}function J1(p){return p&&(p.exitExpression=jp(p.exitExpression),p.props&&p.props.forEach(s=>{s.expression=jp(s.expression)}),p)}function Z1(p){return function(s={}){if(Fn(p))return p({state:s.state==="end"?"exit":s.state,t:s.t!==void 0?s.t:s.deltaT})}}function zp(p,s,_){return _&&(K1(p,s)?function(A,k=function(){}){if(!A)throw new Error("should pass options for binding");return J1(A),_(A,A&&A.eventType==="timing"?Z1(k):k)}:_)}function X1(p,s){Object.defineProperty(p,"[[CurrentInstanceId]]",{value:s})}function Wp(p){return p["[[CurrentInstanceId]]"]}function Q1(p,s,_){let A=kr(p);return!A||!Fn(A.send)?(console.error(`[JS Framework] Failed to find taskCenter (${p}).`),null):(...k)=>A.send("module",{module:s,method:_},k)}function eI(p,s,_,A){let k=kr(p);return!k||!Fn(k.send)?(console.error(`[JS Framework] Failed to find taskCenter (${p}).`),null):Fn(A)?y=>k.send("module",{module:s,method:_},[y]):(console.error(`[JS Framework] ${s}.${_} must be assigned as a function.`),null)}var cu=class{constructor(s,_){X1(this,String(s)),this.config=_||{},this.document=new Do(s,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=ou,this.isRegisteredComponent=gf}requireModule(s){let _=Wp(this);if(!(_&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${s}"), instance (${_}) doesn't exist anymore.`);return}if(!ou(s)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${s}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let A={},k=Tp(s);for(let y in k)Object.defineProperty(A,y,{enumerable:!0,configurable:!0,get:()=>zp(s,y,Q1(_,s,y)),set:I=>eI(_,s,y,I)});return A}supports(s){if(!Ei(s))return null;let _=s.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(_){let A=_[1],k=_[2],y=_[4];switch(A){case"module":return ou(k,y);case"component":return gf(k)}}return null}importScript(s,_={}){let A=Wp(this),k=kr(A);return new Promise(function(y,I){if(!k||!Fn(k.send))return I(new Error(`[JS Framework] Failed to import script "${s}", no taskCenter (${A}) matched.`));try{k.send("module",{module:"script",method:"importScript"},[s,_],{callback:[f=>y(f),f=>I(f)]})}catch(f){I(f)}})}};function tI(p,s){let _=Object.create(null);return _.service=Object.create(null),ys.forEach(({name:A,options:k})=>{let y=k.create;if(y)try{let I=y(p,s);Kr(_.service,I),Kr(_,I.instance)}catch(I){console.error(`[JS Runtime] Failed to create service ${A}.`)}}),delete _.service.instance,va(_.service),_}var nI={uid:0},rI=up(uc),iI=cp(uc);function Gp(p,s,_){let A=new cu(p,s),k="Vue",y=tI(p,{weex:A,nvue:A,config:s,created:Date.now(),framework:k});va(y);let I=Object.create(null);return Kr(I,fI(A)),Kr(I,y,{SharedObject:nI,weex:A,nvue:A,requireModule:f=>A.requireModule(f),__WEEX_CALL_JAVASCRIPT__:df,services:y}),I.plus=new I.WeexPlus(A),I.VueShared=uc,I.UniShared=rI,I.VueReactivity=iI,xp(p,I),va(I),I}function oI(p,s,_={}){let A="Vue";_=Qu(_),_.env=Qu(global.WXEnvironment||{}),_.bundleType=A;let k=Gp(p,_);aI(s,k)}function aI(p,s){let _=[],A=[];for(let y in s)_.push(y),A.push(s[y]);let k="(function (global) { "+p+" })(Object.create(this))";return new Function(..._,k)(...A)}function sI(p){let s=rs(p);try{if(s&&s.body)return s.body.toJSON()}catch(_){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function lI(p){ep(p),ys.forEach(s=>{let _=s.options.destroy;_&&_(p)})}function cI(p){tp(p),ys.forEach(s=>{let _=s.options.refresh;_&&_(p)})}var uI={createInstance:oI,createInstanceContext:Gp,getRoot:sI,getDocument:rs,registerService:au,unregisterService:su,callJS(p,s){return df(p,s)},registerComponents:Pp,registerModules:Op,destroyInstance:lI,refreshInstance:cI};function Sf(){return Cp(),uI}function fI(p){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let s=p.requireModule("timer");return{setTimeout:(...A)=>{let k=function(){A[0](...A.slice(2))};return s.setTimeout(k,A[1]),p.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...A)=>{let k=function(){A[0](...A.slice(2))};return s.setInterval(k,A[1]),p.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:A=>{s.clearTimeout(A)},clearInterval:A=>{s.clearInterval(A)}}}var Yp={Document:Do,Element:Ki,Comment:Ks,Listener:Hl,TaskCenter:Ul,sendTasks(...p){return Fn(callNative)?callNative(...p):(global.callNative||(()=>{}))(...p)}};Do.handler=Yp.sendTasks;var Zs=Yp;function dI(){va(Zs.Comment),va(Zs.Listener),va(Zs.Document.prototype),va(Zs.Comment.prototype),va(Zs.Listener.prototype)}var uu={service:{register:au,unregister:su,has:pf},freezePrototype:dI,init:Sf,config:Zs};var Af=class{constructor(s,_={}){this.type=s||"message",this.data=_.data||null,this.origin=_.origin||"",this.source=_.source||null,this.ports=_.ports||[],this.target=null,this.timeStamp=Date.now()}};var ws={},pc={};function Cf(){}Cf.prototype.postMessage=function(p){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let s=ws[this.name];if(s&&s.length)for(let _=0;_<s.length;++_){let A=s[_];A._closed||A===this||Fn(A.onmessage)&&A.onmessage(new Af("message",{data:p}))}};Cf.prototype.close=function(){if(!this._closed&&(this._closed=!0,ws[this.name])){let p=ws[this.name].filter(s=>s!==this);p.length?ws[this.name]=p:delete ws[this.name]}};var qp={create:p=>{if(pc[p]=[],Fn(global.BroadcastChannel))return{};let s={BroadcastChannel:function(_){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(_)}),this._closed=!1,this.onmessage=null,ws[this.name]||(ws[this.name]=[]),ws[this.name].push(this),pc[p].push(this)}};return s.BroadcastChannel.prototype=Cf.prototype,{instance:s}},destroy:p=>{pc[p]&&(pc[p].forEach(s=>s.close()),delete pc[p])}};function Of(){let{init:p}=uu;uu.service.register("BroadcastChannel",qp),uu.freezePrototype();let s=p();for(let _ in s)global[_]=(...A)=>{let k=s[_](...A);return k instanceof Error&&console.error(k.toString()),k}}var nR=global.console;function Kp(){if(dp(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...p)=>{Yn("debug")&&global.nativeLog(...vc(p),"__DEBUG")},log:(...p)=>{Yn("log")&&global.nativeLog(...vc(p),"__LOG")},info:(...p)=>{Yn("info")&&global.nativeLog(...vc(p),"__INFO")},warn:(...p)=>{Yn("warn")&&global.nativeLog(...vc(p),"__WARN")},error:(...p)=>{Yn("error")&&global.nativeLog(...vc(p),"__ERROR")}};else{let{debug:p,log:s,info:_,warn:A,error:k}=console;console.__ori__={debug:p,log:s,info:_,warn:A,error:k},console.debug=(...y)=>{Yn("debug")&&console.__ori__.debug.apply(console,y)},console.log=(...y)=>{Yn("log")&&console.__ori__.log.apply(console,y)},console.info=(...y)=>{Yn("info")&&console.__ori__.info.apply(console,y)},console.warn=(...y)=>{Yn("warn")&&console.__ori__.warn.apply(console,y)},console.error=(...y)=>{Yn("error")&&console.__ori__.error.apply(console,y)}}}function vc(p){return p.map(s=>{if(ns(s).toLowerCase()==="[object object]")try{s=JSON.stringify(s)}catch(A){s="[object object]"}else s=String(s);return s})}Kp();Of();})();
